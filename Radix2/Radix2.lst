

HI-TECH Software PICC-18 Macro Assembler LITE 
                                                       Sun Sep 27 22:32:17 2009

HI-TECH Software Omniscient Code Generator build 3424
     1                           	processor	18F4620
     2                           	fnconf	param2,??,?,0
     3                           	opt	pw 80
     4                           	opt	lm
     5                           	psect	config,global,class=CONFIG,delta=1
     6                           	psect	text0,global,reloc=2,class=CODE,delta=1
     7                           	psect	text1,global,reloc=2,class=CODE,delta=1
     8                           	psect	text2,global,reloc=2,class=CODE,delta=1
     9                           	psect	text3,global,reloc=2,class=CODE,delta=1
    10                           	psect	text4,global,reloc=2,class=CODE,delta=1
    11                           	psect	text5,global,reloc=2,class=CODE,delta=1
    12                           	psect	text6,global,reloc=2,class=CODE,delta=1
    13                           	psect	text7,global,reloc=2,class=CODE,delta=1
    14                           	psect	text8,global,reloc=2,class=CODE,delta=1
    15                           	psect	text9,global,reloc=2,class=CODE,delta=1
    16                           	psect	text10,global,reloc=2,class=CODE,delta=1
    17                           	psect	text11,global,reloc=2,class=CODE,delta=1
    18                           	psect	text12,global,reloc=2,class=CODE,delta=1
    19                           	psect	text13,global,reloc=2,class=CODE,delta=1
    20                           	psect	text14,global,reloc=2,class=CODE,delta=1
    21                           	psect	text15,global,reloc=2,class=CODE,delta=1
    22                           	psect	text16,global,reloc=2,class=CODE,delta=1
    23                           	psect	text17,global,reloc=2,class=CODE,delta=1
    24                           	psect	text18,global,reloc=2,class=CODE,delta=1
    25                           	psect	text19,global,reloc=2,class=CODE,delta=1
    26                           	psect	text20,global,reloc=2,class=CODE,delta=1
    27                           	psect	text21,global,reloc=2,class=CODE,delta=1
    28                           	psect	text22,global,reloc=2,class=CODE,delta=1
    29                           	psect	text23,global,reloc=2,class=CODE,delta=1
    30                           	psect	text24,global,reloc=2,class=CODE,delta=1
    31                           	psect	text25,global,reloc=2,class=CODE,delta=1
    32                           	psect	text26,global,reloc=2,class=CODE,delta=1
    33                           	psect	mediumconst,global,reloc=2,class=MEDIUMCO
      +                          NST,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    35                           	psect	param2,global,class=BANK2,space=1,delta=1
    36                           	dabs	1,0x16,128
    37                           	dabs	1,0x100,128
    38                           	dabs	1,0xF00,128
    39                           	dabs	1,0x12,4
    40                           	dabs	1,0x9E,4
    41                           	dabs	1,0xA2,4
    42                           	dabs	1,0x96,4
    43                           	dabs	1,0x9A,4
    44                           	dabs	1,0x10,2
    45                           	dabs	1,0x4,2
    46                           	dabs	1,0x6,2
    47                           	dabs	1,0x0,2
    48                           	dabs	1,0x2,2
    49                           	dabs	1,0xC,2
    50                           	dabs	1,0xE,2
    51                           	dabs	1,0x8,2
    52                           	dabs	1,0xA,2
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101  000000                     
   102  000000                     
   103  000000                     
   104  000000                     
   105  000000                     
   106  000000                     
   107  000000                     
   108  000000                     
   109  000000                     
   110  000000                     
   111  000000                     
   112  000000                     
   113  000000                     
   114  000000                     
   115  000000                     
   116  000000                     
   117  000000                     
   118  000000                     
   119  000000                     
   120  000000                     
   121  000000                     
   122  000000                     
   123  000000                     
   124  000000                     
   125  000000                     
   126  000000                     
   127  000000                     
   128  000000                     
   129  000000                     
   130  000000                     
   131  000000                     
   132  000000                     
   133  000000                     
   134  000000                     
   135  000000                     
   136  000000                     
   137  000000                     
   138  000000                     
   139  000000                     
   140  000000                     
   141  000000                     
   142  000000                     
   143  000000                     
   144  000000                     
   145  000000                     
   146  000000                     
   147  000000                     
   148  000000                     	;#
   149                           
   150                           	psect	config
   151  300000                     	org	0	;#
   152  300000                     config_word1:
   153                           	opt stack 0
   154                           ;#
   155  300000  32FF               	dw	13055	;#
   156  300002                     	org	2	;#
   157  300002                     config_word2:
   158                           	opt stack 0
   159                           ;#
   160  300002  FEF8               	dw	65272	;#
   161  300004                     	org	4	;#
   162  300004                     config_word3:
   163                           	opt stack 0
   164                           ;#
   165  300004  79FF               	dw	31231	;#
   166  300006                     	org	6	;#
   167  300006                     config_word4:
   168                           	opt stack 0
   169                           ;#
   170  300006  FFBB               	dw	65467	;#
   171  300008                     	org	8	;#
   172  300008                     config_word5:
   173                           	opt stack 0
   174                           ;#
   175  300008  FFFF               	dw	65535	;#
   176  30000A                     	org	10	;#
   177  30000A                     config_word6:
   178                           	opt stack 0
   179                           ;#
   180  30000A  FFFF               	dw	65535	;#
   181  000000                     
   182  000000                     
   183  000000                     
   184  000000                     
   185  000000                     
   186  000000                     
   187  000000                     
   188  000000                     
   189  000000                     
   190  000000                     
   191  000000                     
   192  000000                     
   193  000000                     
   194  000000                     
   195  000000                     
   196  000000                     
   197  000000                     
   198  000000                     
   199  000000                     
   200  000000                     
   201  000000                     
   202  000000                     
   203  000000                     
   204  000000                     
   205  000000                     
   206  000000                     
   207  000000                     
   208  000000                     
   209  000000                     
   210  000000                     
   211  000000                     
   212  000000                     
   213  000000                     
   214  000000                     
   215  000000                     
   216  000000                     
   217  000000                     
   218  000000                     
   219  000000                     
   220  000000                     
   221  000000                     
   222  000000                     
   223  000000                     
   224  000000                     
   225  000000                     
   226  000000                     
   227  000000                     
   228  000000                     
   229  000000                     
   230  000000                     
   231  000000                     
   232  000000                     
   233  000000                     
   234  000000                     
   235  000000                     
   236  000000                     
   237  000000                     
   238  000000                     
   239  000000                     
   240  000000                     
   241  000000                     
   242  000000                     
   243  000000                     
   244  000000                     
   245  000000                     
   246  000000                     
   247  000000                     
   248  000000                     
   249  000000                     
   250  000000                     
   251  000000                     
   252  000000                     
   253  000000                     
   254  000000                     
   255  000000                     
   256  000000                     
   257  000000                     
   258  000000                     
   259  000000                     
   260  000000                     
   261  000000                     
   262  000000                     
   263  000000                     
   264  000000                     
   265  000000                     
   266  000000                     
   267  000000                     
   268  000000                     
   269  000000                     
   270  000000                     
   271  000000                     
   272  000000                     
   273                           
   274                           	psect	text0
   275                           ;Data sizes: Strings 5, constant 293, data 0, bs
      +                          s 0, persistent 0 stack 67
   276                           ; *************** function _main ***************
      +                          **
   277                           ; Defined at:
   278                           ;		line 30 in file "C:\Documents and Settings\Ad
      +                          ministrator\Belgelerim\H-tech\FFT\Radix2\radix2_
      +                          fft_main.c"
   279                           ; Parameters:
   280                           ;		None
   281                           ; Auto variables:
   282                           ;		asd         	       	type: int 
   283                           ;		asd1        	       	type: int 
   284                           ;		i           	       	type: int 
   285                           ;		i           	       	type: int 
   286                           ; Return value:
   287                           ;		type: void 
   288                           ;		size: 0
   289                           ; Registers used:
   290                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
      +                          tatus,0, pclat, tblptrl, tblptrh, tblptru, prodl
      +                          , prodh, cstack
   291                           ; Tracked objects:
   292                           ;		On entry : 0/0
   293                           ;		On exit  : 0/0
   294                           ;		Unchanged: 0/0
   295                           ; Data sizes:
   296                           ;		Autos:    4
   297                           ;		Params:   0
   298                           ;		Temp:     7
   299                           ;		Total:   11
   300                           ; This function calls:
   301                           ;		___awtoft
   302                           ;		___ftmul
   303                           ;		_sin
   304                           ;		___fttol
   305                           ;		_Radix2Fft
   306                           ;		___awdiv
   307                           ;		_abs
   308                           ;		_printf
   309                           ; This function is called by:
   310                           ;		Startup code after reset
   311                           ; This function uses a non-reentrant model
   312                           ; 
   313  000000                     
   314                           ;radix2_fft_main.c: 29: void main( void )
   315                           ;radix2_fft_main.c: 30: { TRISD0=0;
   316  00F694                     _main:
   317                           	opt stack 31
   318                           ; BSR set to: ?
   319  00F694  9095               	bcf	3989,0,c	;volatile
   320                           ;radix2_fft_main.c: 31: RD0=1;
   321  00F696  8083               	bsf	3971,0,c	;volatile
   322                           ;radix2_fft_main.c: 32: TRISC7 = 1; TRISC6 = 1; 
      +                          SPBRG = ((int)(40000000/(16UL * 19200) -1)); RCS
      +                          TA = (0|0x90); TXSTA = (0x4|0|0x20);
   323  00F698  8E94               	bsf	3988,7,c	;volatile
   324  00F69A  8C94               	bsf	3988,6,c	;volatile
   325  00F69C  0102               	movlb	2	; () banked
   326  00F69E  6F04               	movwf	(??_main+4)& (0+255),b
   327  00F6A0  0E81               	movlw	129
   328  00F6A2  6EAF               	movwf	4015,c
   329  00F6A4  5104               	movf	(??_main+4)& (0+255),w,b
   330  00F6A6  0E90               	movlw	144
   331  00F6A8  6EAB               	movwf	4011,c	;volatile
   332  00F6AA  5104               	movf	(??_main+4)& (0+255),w,b
   333  00F6AC  0E24               	movlw	36
   334  00F6AE  6EAC               	movwf	4012,c	;volatile
   335  00F6B0  5104               	movf	(??_main+4)& (0+255),w,b
   336                           ;radix2_fft_main.c: 33: int asd;
   337                           ;radix2_fft_main.c: 34: int asd1;
   338                           ;radix2_fft_main.c: 36: for(int i=0;i<64;i++)
   339  00F6B2  6B00               	clrf	??_main& (0+255),b
   340  00F6B4  6B01               	clrf	(??_main+1)& (0+255),b
   341  00F6B6                     L1:
   342  00F6B6  0102               	movlb	2	; () banked
   343  00F6B8  5101               	movf	(??_main+1)& (0+255),w,b
   344  00F6BA  0A80               	xorlw	128
   345  00F6BC  0F80               	addlw	-128
   346  00F6BE  0E40               	movlw	64
   347  00F6C0  B4D8               	btfsc	status,2,c
   348  00F6C2  5D00               	subwf	??_main& (0+255),w,b
   349  00F6C4  E24C               	bc	l151
   350                           ; BSR set to: ?
   351                           ;radix2_fft_main.c: 37: {
   352                           ;radix2_fft_main.c: 38: Real[i]=(int)(128*sin(2*
      +                          3.14159265*(float)i*((float)100/(64*50))));
   353  00F6C6  C200  F20B         	movff	??_main,?___awtoft
   354  00F6CA  C201  F20C         	movff	??_main+1,?___awtoft+1
   355  00F6CE  EC5A  F076         	call	___awtoft	;wreg free
   356  00F6D2  C20B  F22E         	movff	?___awtoft,?___ftmul
   357  00F6D6  C20C  F22F         	movff	?___awtoft+1,?___ftmul+1
   358  00F6DA  C20D  F230         	movff	?___awtoft+2,?___ftmul+2
   359  00F6DE  0E10               	movlw	16
   360  00F6E0  0102               	movlb	2	; () banked
   361  00F6E2  6F31               	movwf	(?___ftmul+3)& (0+255),b
   362  00F6E4  0E49               	movlw	73
   363  00F6E6  6F32               	movwf	(?___ftmul+4)& (0+255),b
   364  00F6E8  0E3E               	movlw	62
   365  00F6EA  6F33               	movwf	(?___ftmul+5)& (0+255),b
   366  00F6EC  EC9A  F078         	call	___ftmul	;wreg free
   367  00F6F0  C22E  F20B         	movff	?___ftmul,?_sin
   368  00F6F4  C22F  F20C         	movff	?___ftmul+1,?_sin+1
   369  00F6F8  C230  F20D         	movff	?___ftmul+2,?_sin+2
   370  00F6FC  EC1C  F07C         	call	_sin	;wreg free
   371  00F700  C20B  F22E         	movff	?_sin,?___ftmul
   372  00F704  C20C  F22F         	movff	?_sin+1,?___ftmul+1
   373  00F708  C20D  F230         	movff	?_sin+2,?___ftmul+2
   374  00F70C  0102               	movlb	2	; () banked
   375  00F70E  6B31               	clrf	(?___ftmul+3)& (0+255),b
   376  00F710  6B32               	clrf	(?___ftmul+4)& (0+255),b
   377  00F712  0E43               	movlw	67
   378  00F714  6F33               	movwf	(?___ftmul+5)& (0+255),b
   379  00F716  EC9A  F078         	call	___ftmul	;wreg free
   380  00F71A  C22E  F227         	movff	?___ftmul,?___fttol
   381  00F71E  C22F  F228         	movff	?___ftmul+1,?___fttol+1
   382  00F722  C230  F229         	movff	?___ftmul+2,?___fttol+2
   383  00F726  EC20  F077         	call	___fttol	;wreg free
   384  00F72A  90D8               	bcf	status,0,c
   385  00F72C  0102               	movlb	2	; () banked
   386  00F72E  3500               	rlcf	??_main& (0+255),w,b
   387  00F730  6F04               	movwf	(??_main+4)& (0+255),b
   388  00F732  0F00               	addlw	0
   389  00F734  6EE9               	movwf	fsr0l,c
   390  00F736  6AEA               	clrf	fsr0h,c
   391  00F738  0E0F               	movlw	15
   392  00F73A  22EA               	addwfc	fsr0h,f,c
   393  00F73C  C227  FFEE         	movff	?___fttol,postinc0
   394  00F740  C228  FFED         	movff	?___fttol+1,postdec0
   395                           ;radix2_fft_main.c: 39: Imag[i]=0;
   396  00F744  90D8               	bcf	status,0,c
   397  00F746  3500               	rlcf	??_main& (0+255),w,b
   398  00F748  6F04               	movwf	(??_main+4)& (0+255),b
   399  00F74A  0F00               	addlw	0
   400  00F74C  6EE9               	movwf	fsr0l,c
   401  00F74E  6AEA               	clrf	fsr0h,c
   402  00F750  0E01               	movlw	1
   403  00F752  22EA               	addwfc	fsr0h,f,c
   404  00F754  6AEE               	clrf	postinc0,c
   405  00F756  6AED               	clrf	postdec0,c
   406  00F758  4B00               	infsnz	??_main& (0+255),f,b
   407  00F75A  2B01               	incf	(??_main+1)& (0+255),f,b
   408  00F75C  D7AC               	goto	L1
   409  00F75E                     l151:
   410                           ; BSR set to: ?
   411                           ;radix2_fft_main.c: 41: }
   412                           ;radix2_fft_main.c: 43: TRISD0=0;
   413  00F75E  9095               	bcf	3989,0,c	;volatile
   414                           ;radix2_fft_main.c: 44: RD0=0;
   415  00F760  9083               	bcf	3971,0,c	;volatile
   416                           ;radix2_fft_main.c: 45: Radix2Fft();
   417  00F762  EC28  F07D         	call	_Radix2Fft	;wreg free
   418                           ;radix2_fft_main.c: 46: RD0=1;
   419  00F766  8083               	bsf	3971,0,c	;volatile
   420                           ;radix2_fft_main.c: 49: for(int i=0;i<64;i++)
   421  00F768  0102               	movlb	2	; () banked
   422  00F76A  6B02               	clrf	(??_main+2)& (0+255),b
   423  00F76C  6B03               	clrf	(??_main+3)& (0+255),b
   424  00F76E                     L2:
   425  00F76E  0102               	movlb	2	; () banked
   426  00F770  5103               	movf	(??_main+3)& (0+255),w,b
   427  00F772  0A80               	xorlw	128
   428  00F774  0F80               	addlw	-128
   429  00F776  0E40               	movlw	64
   430  00F778  B4D8               	btfsc	status,2,c
   431  00F77A  5D02               	subwf	(??_main+2)& (0+255),w,b
   432  00F77C  E25C               	bc	l156
   433                           ; BSR set to: ?
   434                           ;radix2_fft_main.c: 50: {
   435                           ;radix2_fft_main.c: 51: Amp[i]=(int)abs(Imag[i]/
      +                          (64/2))+abs(Real[i]/(64/2));
   436  00F77E  0E20               	movlw	32
   437  00F780  6F1A               	movwf	(?___awdiv+2)& (0+255),b
   438  00F782  6B1B               	clrf	(?___awdiv+3)& (0+255),b
   439  00F784  90D8               	bcf	status,0,c
   440  00F786  3502               	rlcf	(??_main+2)& (0+255),w,b
   441  00F788  6F04               	movwf	(??_main+4)& (0+255),b
   442  00F78A  0F00               	addlw	0
   443  00F78C  6EE9               	movwf	fsr0l,c
   444  00F78E  6AEA               	clrf	fsr0h,c
   445  00F790  0E01               	movlw	1
   446  00F792  22EA               	addwfc	fsr0h,f,c
   447  00F794  CFEE F218          	movff	postinc0,?___awdiv
   448  00F798  CFED F219          	movff	postdec0,?___awdiv+1
   449  00F79C  ECD4  F076         	call	___awdiv	;wreg free
   450  00F7A0  C218  F20B         	movff	?___awdiv,?_abs
   451  00F7A4  C219  F20C         	movff	?___awdiv+1,?_abs+1
   452  00F7A8  ECF8  F074         	call	_abs	;wreg free
   453  00F7AC  C20B  F205         	movff	?_abs,??_main+5
   454  00F7B0  C20C  F206         	movff	?_abs+1,??_main+6
   455  00F7B4  0E20               	movlw	32
   456  00F7B6  0102               	movlb	2	; () banked
   457  00F7B8  6F1A               	movwf	(?___awdiv+2)& (0+255),b
   458  00F7BA  6B1B               	clrf	(?___awdiv+3)& (0+255),b
   459  00F7BC  90D8               	bcf	status,0,c
   460  00F7BE  3502               	rlcf	(??_main+2)& (0+255),w,b
   461  00F7C0  6F07               	movwf	(??_main+7)& (0+255),b
   462  00F7C2  0F00               	addlw	0
   463  00F7C4  6EE9               	movwf	fsr0l,c
   464  00F7C6  6AEA               	clrf	fsr0h,c
   465  00F7C8  0E0F               	movlw	15
   466  00F7CA  22EA               	addwfc	fsr0h,f,c
   467  00F7CC  CFEE F218          	movff	postinc0,?___awdiv
   468  00F7D0  CFED F219          	movff	postdec0,?___awdiv+1
   469  00F7D4  ECD4  F076         	call	___awdiv	;wreg free
   470  00F7D8  C218  F20B         	movff	?___awdiv,?_abs
   471  00F7DC  C219  F20C         	movff	?___awdiv+1,?_abs+1
   472  00F7E0  ECF8  F074         	call	_abs	;wreg free
   473  00F7E4  0102               	movlb	2	; () banked
   474  00F7E6  510B               	movf	?_abs& (0+255),w,b
   475  00F7E8  2505               	addwf	(??_main+5)& (0+255),w,b
   476  00F7EA  6F08               	movwf	(??_main+8)& (0+255),b
   477  00F7EC  510C               	movf	(?_abs+1)& (0+255),w,b
   478  00F7EE  2106               	addwfc	(??_main+6)& (0+255),w,b
   479  00F7F0  6F09               	movwf	(??_main+9)& (0+255),b
   480  00F7F2  90D8               	bcf	status,0,c
   481  00F7F4  3502               	rlcf	(??_main+2)& (0+255),w,b
   482  00F7F6  6F0A               	movwf	(??_main+10)& (0+255),b
   483  00F7F8  0F16               	addlw	22
   484  00F7FA  6EE9               	movwf	fsr0l,c
   485  00F7FC  6AEA               	clrf	fsr0h,c
   486  00F7FE  0E00               	movlw	0
   487  00F800  22EA               	addwfc	fsr0h,f,c
   488  00F802  C208  FFEE         	movff	??_main+8,postinc0
   489  00F806  C209  FFED         	movff	??_main+9,postdec0
   490                           ;radix2_fft_main.c: 52: printf("%d\n\r",Amp[i]);
   491  00F80A  90D8               	bcf	status,0,c
   492  00F80C  3502               	rlcf	(??_main+2)& (0+255),w,b
   493  00F80E  6F04               	movwf	(??_main+4)& (0+255),b
   494  00F810  0F16               	addlw	22
   495  00F812  6EE9               	movwf	fsr0l,c
   496  00F814  6AEA               	clrf	fsr0h,c
   497  00F816  0E00               	movlw	0
   498  00F818  22EA               	addwfc	fsr0h,f,c
   499  00F81A  CFEE F20D          	movff	postinc0,?_printf+2
   500  00F81E  CFED F20E          	movff	postdec0,?_printf+3
   501  00F822  0EF9               	movlw	low STR_1
   502  00F824  6F0B               	movwf	?_printf& (0+255),b
   503  00F826  0EFF               	movlw	high STR_1
   504  00F828  6F0C               	movwf	(?_printf+1)& (0+255),b
   505  00F82A  ECF8  F079         	call	_printf	;wreg free
   506  00F82E  0102               	movlb	2	; () banked
   507  00F830  4B02               	infsnz	(??_main+2)& (0+255),f,b
   508  00F832  2B03               	incf	(??_main+3)& (0+255),f,b
   509  00F834  D79C               	goto	L2
   510                           ; BSR set to: ?
   511                           ;radix2_fft_main.c: 53: }
   512                           ;radix2_fft_main.c: 58: for(;;);
   513  00F836                     l156:
   514                           ; BSR set to: ?
   515  00F836  D7FF               	goto	l156
   516  00F838                     __end_of_main:
   517                           	opt stack 0
   518                           
   519                           	psect	text1
   520                           ; =============== function _main ends ==========
      +                          ==
   521                           ; *************** function _printf *************
      +                          ****
   522                           ; Defined at:
   523                           ;		line 465 in file "C:\Program Files\HI-TECH So
      +                          ftware\PICC-18\PRO\9.63\lib\doprnt.c"
   524                           ; Parameters:
   525                           ;		f              size:   2offs:   0	type: PTR c
      +                          onst unsigned char ; Largest target is 5
   526                           ;		 -> STR_1(5), 
   527                           ; Auto variables:
   528                           ;		flag        	       	type: unsigned char 
   529                           ;		prec        	       	type: char 
   530                           ;		c           	       	type: char 
   531                           ;		ap          	       	type: PTR void [1]
   532                           ;		_val        	       	type: struct .
   533                           ; Return value:
   534                           ;		type: int 
   535                           ;		size: 2
   536                           ; Registers used:
   537                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclat
      +                          , tblptrl, tblptrh, tblptru, prodl, prodh, cstac
      +                          k
   538                           ; Tracked objects:
   539                           ;		On entry : 0/0
   540                           ;		On exit  : 0/0
   541                           ;		Unchanged: 0/0
   542                           ; Data sizes:
   543                           ;		Autos:   10
   544                           ;		Params:   4
   545                           ;		Temp:     2
   546                           ;		Total:   16
   547                           ; This function calls:
   548                           ;		_putch
   549                           ;		___lwdiv
   550                           ;		___lwmod
   551                           ; This function is called by:
   552                           ;		_main
   553                           ; This function uses a non-reentrant model
   554                           ; 
   555  000000                     
   556                           ;doprnt.c: 354: const static unsigned int dpower
      +                          s[] = {1, 10, 100, 1000, 10000,
   557                           ;doprnt.c: 359: };
   558                           ;doprnt.c: 455: int
   559                           ;doprnt.c: 464: printf(const char * f, ...)
   560                           ;doprnt.c: 465: {
   561  00F3F0                     _printf:
   562                           	opt stack 30
   563                           ; BSR set to: ?
   564  00F3F0  0E0D               	movlw	low (?_printf+2)
   565  00F3F2  0102               	movlb	2	; () banked
   566  00F3F4  6F12               	movwf	(??_printf+3)& (0+255),b
   567  00F3F6  0E02               	movlw	high (?_printf+2)
   568  00F3F8  6F13               	movwf	(??_printf+4)& (0+255),b
   569                           ;doprnt.c: 544: while(c = *f++) {
   570  00F3FA  D08D               	goto	l166
   571  00F3FC                     l167:
   572                           ; BSR set to: ?
   573                           ;doprnt.c: 546: if(c != '%')
   574  00F3FC  0102               	movlb	2	; () banked
   575  00F3FE  5111               	movf	(??_printf+2)& (0+255),w,b
   576  00F400  0A25               	xorlw	37
   577  00F402  E005               	bz	l169
   578                           ;doprnt.c: 548: {
   579                           ;doprnt.c: 549: (putch(c) );
   580  00F404  C211  F21B         	movff	??_printf+2,?_putch
   581  00F408  ECEB  F074         	call	_putch	;wreg free
   582                           ;doprnt.c: 550: continue;
   583  00F40C  D084               	goto	l166
   584  00F40E                     l169:
   585                           ; BSR set to: ?
   586                           ;doprnt.c: 551: }
   587                           ;doprnt.c: 556: flag = 0;
   588  00F40E  0102               	movlb	2	; () banked
   589  00F410  6F19               	movwf	(??_printf+10)& (0+255),b
   590  00F412  6B10               	clrf	(??_printf+1)& (0+255),b
   591  00F414  5119               	movf	(??_printf+10)& (0+255),w,b
   592                           ;doprnt.c: 642: switch(c = *f++) {
   593  00F416  D002               	goto	l171
   594                           ;doprnt.c: 644: case 0:
   595  00F418                     l172:
   596                           ; BSR set to: ?
   597                           ;doprnt.c: 645: goto alldone;
   598  00F418  0012               	return	
   599  00F41A                     l175:
   600                           ; BSR set to: ?
   601                           ;doprnt.c: 705: case 'i':
   602                           ;doprnt.c: 706: break;
   603  00F41A  D011               	goto	l170
   604                           ;doprnt.c: 809: default:
   605                           ; BSR set to: ?
   606                           ;doprnt.c: 820: continue;
   607  00F41C                     l171:
   608                           ; BSR set to: ?
   609  00F41C  C20B  FFF6         	movff	?_printf,tblptrl
   610  00F420  C20C  FFF7         	movff	?_printf+1,tblptrh
   611  00F424  0102               	movlb	2	; () banked
   612  00F426  4B0B               	infsnz	?_printf& (0+255),f,b
   613  00F428  2B0C               	incf	(?_printf+1)& (0+255),f,b
   614  00F42A  0008               	tblrd		*
   615  00F42C  CFF5 F211          	movff	tablat,??_printf+2
   616  00F430  5111               	movf	(??_printf+2)& (0+255),w,b
   617  00F432  E0F2               	bz	l172
   618  00F434  0A64               	xorlw	100
   619  00F436  E0F1               	bz	l175
   620  00F438  0A0D               	xorlw	13
   621  00F43A  E0EF               	bz	l175
   622  00F43C  D06C               	goto	l166
   623  00F43E                     l170:
   624                           ; BSR set to: ?
   625                           ;doprnt.c: 1247: {
   626                           ;doprnt.c: 1253: _val._val = (int)(*(int *)__va_
      +                          arg((*(int **)ap)));
   627  00F43E  C212  FFE9         	movff	??_printf+3,fsr0l
   628  00F442  C213  FFEA         	movff	??_printf+4,fsr0h
   629  00F446  0E02               	movlw	2
   630  00F448  0102               	movlb	2	; () banked
   631  00F44A  2712               	addwf	(??_printf+3)& (0+255),f,b
   632  00F44C  0E00               	movlw	0
   633  00F44E  2313               	addwfc	(??_printf+4)& (0+255),f,b
   634  00F450  CFEE F214          	movff	postinc0,??_printf+5
   635  00F454  CFED F215          	movff	postdec0,??_printf+6
   636                           ;doprnt.c: 1255: if((int)_val._val < 0) {
   637  00F458  AF15               	btfss	(??_printf+6)& (0+255),7,b
   638  00F45A  D007               	goto	l177
   639                           ;doprnt.c: 1256: flag |= 0x03;
   640  00F45C  0E03               	movlw	3
   641  00F45E  0102               	movlb	2	; () banked
   642  00F460  1310               	iorwf	(??_printf+1)& (0+255),f,b
   643                           ;doprnt.c: 1257: _val._val = -_val._val;
   644  00F462  6D14               	negf	(??_printf+5)& (0+255),b
   645  00F464  1F15               	comf	(??_printf+6)& (0+255),f,b
   646  00F466  B0D8               	btfsc	status,0,c
   647  00F468  2B15               	incf	(??_printf+6)& (0+255),f,b
   648  00F46A                     l177:
   649                           ; BSR set to: ?
   650                           ;doprnt.c: 1258: }
   651                           ;doprnt.c: 1260: }
   652                           ;doprnt.c: 1299: for(c = 1 ; c != sizeof dpowers
      +                          /sizeof dpowers[0] ; c++)
   653  00F46A  0102               	movlb	2	; () banked
   654  00F46C  6F19               	movwf	(??_printf+10)& (0+255),b
   655  00F46E  0E01               	movlw	1
   656  00F470  6F11               	movwf	(??_printf+2)& (0+255),b
   657  00F472  5119               	movf	(??_printf+10)& (0+255),w,b
   658  00F474                     L3:
   659  00F474  0102               	movlb	2	; () banked
   660  00F476  5111               	movf	(??_printf+2)& (0+255),w,b
   661  00F478  0A05               	xorlw	5
   662  00F47A  E015               	bz	l179
   663                           ; BSR set to: ?
   664                           ;doprnt.c: 1300: if(_val._val < dpowers[c])
   665  00F47C  5111               	movf	(??_printf+2)& (0+255),w,b
   666  00F47E  0D02               	mullw	2
   667  00F480  0EEF               	movlw	low _dpowers
   668  00F482  24F3               	addwf	prodl,w,c
   669  00F484  6EF6               	movwf	tblptrl,c
   670  00F486  6AF7               	clrf	tblptrh,c
   671  00F488  0EFF               	movlw	high _dpowers
   672  00F48A  22F7               	addwfc	tblptrh,f,c
   673  00F48C  0009               	tblrd		*+
   674  00F48E  CFF5 F219          	movff	tablat,??_printf+10
   675  00F492  0009               	tblrd		*+
   676  00F494  CFF5 F21A          	movff	tablat,??_printf+11
   677  00F498  5119               	movf	(??_printf+10)& (0+255),w,b
   678  00F49A  5D14               	subwf	(??_printf+5)& (0+255),w,b
   679  00F49C  511A               	movf	(??_printf+11)& (0+255),w,b
   680  00F49E  5915               	subwfb	(??_printf+6)& (0+255),w,b
   681  00F4A0  E302               	bnc	l179
   682                           ;doprnt.c: 1301: break;
   683                           ; BSR set to: ?
   684  00F4A2  2B11               	incf	(??_printf+2)& (0+255),f,b
   685  00F4A4  D7E7               	goto	L3
   686  00F4A6                     l179:
   687                           ; BSR set to: ?
   688                           ;doprnt.c: 1416: {
   689                           ;doprnt.c: 1432: if(flag & 0x03)
   690  00F4A6  0102               	movlb	2	; () banked
   691  00F4A8  5110               	movf	(??_printf+1)& (0+255),w,b
   692  00F4AA  0B03               	andlw	3
   693  00F4AC  E006               	bz	l182
   694                           ;doprnt.c: 1433: (putch('-') );
   695  00F4AE  6F19               	movwf	(??_printf+10)& (0+255),b
   696  00F4B0  0E2D               	movlw	45
   697  00F4B2  6F1B               	movwf	?_putch& (0+255),b
   698  00F4B4  5119               	movf	(??_printf+10)& (0+255),w,b
   699  00F4B6  ECEB  F074         	call	_putch	;wreg free
   700  00F4BA                     l182:
   701                           ; BSR set to: ?
   702                           ;doprnt.c: 1463: }
   703                           ;doprnt.c: 1466: prec = c;
   704  00F4BA  C211  F20F         	movff	??_printf+2,??_printf
   705                           ;doprnt.c: 1468: while(prec--) {
   706  00F4BE                     l183:
   707                           ; BSR set to: ?
   708  00F4BE  0102               	movlb	2	; () banked
   709  00F4C0  070F               	decf	??_printf& (0+255),f,b
   710  00F4C2  290F               	incf	??_printf& (0+255),w,b
   711  00F4C4  E028               	bz	l166
   712                           ; BSR set to: ?
   713                           ;doprnt.c: 1472: {
   714                           ;doprnt.c: 1483: c = (_val._val / dpowers[prec])
      +                           % 10 + '0';
   715  00F4C6  510F               	movf	??_printf& (0+255),w,b
   716  00F4C8  0D02               	mullw	2
   717  00F4CA  0EEF               	movlw	low _dpowers
   718  00F4CC  24F3               	addwf	prodl,w,c
   719  00F4CE  6EF6               	movwf	tblptrl,c
   720  00F4D0  6AF7               	clrf	tblptrh,c
   721  00F4D2  0EFF               	movlw	high _dpowers
   722  00F4D4  22F7               	addwfc	tblptrh,f,c
   723  00F4D6  0009               	tblrd		*+
   724  00F4D8  CFF5 F21D          	movff	tablat,?___lwdiv+2
   725  00F4DC  000A               	tblrd		*-
   726  00F4DE  CFF5 F21E          	movff	tablat,?___lwdiv+3
   727  00F4E2  C214  F21B         	movff	??_printf+5,?___lwdiv
   728  00F4E6  C215  F21C         	movff	??_printf+6,?___lwdiv+1
   729  00F4EA  ECC2  F075         	call	___lwdiv	;wreg free
   730  00F4EE  C21B  F21B         	movff	?___lwdiv,?___lwmod
   731  00F4F2  C21C  F21C         	movff	?___lwdiv+1,?___lwmod+1
   732  00F4F6  0E0A               	movlw	10
   733  00F4F8  0102               	movlb	2	; () banked
   734  00F4FA  6F1D               	movwf	(?___lwmod+2)& (0+255),b
   735  00F4FC  0E00               	movlw	0
   736  00F4FE  6B1E               	clrf	(?___lwmod+3)& (0+255),b
   737  00F500  EC76  F075         	call	___lwmod	;wreg free
   738  00F504  0102               	movlb	2	; () banked
   739  00F506  511B               	movf	?___lwmod& (0+255),w,b
   740  00F508  0F30               	addlw	48
   741  00F50A  6F11               	movwf	(??_printf+2)& (0+255),b
   742                           ;doprnt.c: 1514: }
   743                           ;doprnt.c: 1515: (putch(c) );
   744  00F50C  C211  F21B         	movff	??_printf+2,?_putch
   745  00F510  ECEB  F074         	call	_putch	;wreg free
   746  00F514  D7D4               	goto	l183
   747                           ; BSR set to: ?
   748  00F516                     l166:
   749                           ; BSR set to: ?
   750  00F516  C20B  FFF6         	movff	?_printf,tblptrl
   751  00F51A  C20C  FFF7         	movff	?_printf+1,tblptrh
   752  00F51E  0102               	movlb	2	; () banked
   753  00F520  4B0B               	infsnz	?_printf& (0+255),f,b
   754  00F522  2B0C               	incf	(?_printf+1)& (0+255),f,b
   755  00F524  0008               	tblrd		*
   756  00F526  CFF5 F211          	movff	tablat,??_printf+2
   757  00F52A  6711               	tstfsz	(??_printf+2)& (0+255),b
   758  00F52C  D767               	goto	l167
   759  00F52E  0012               	return	
   760                           ; BSR set to: ?
   761                           ;doprnt.c: 1516: }
   762                           ;doprnt.c: 1524: }
   763                           ;doprnt.c: 1526: alldone:
   764                           ; BSR set to: ?
   765                           ;doprnt.c: 1532: }
   766                           ; BSR set to: ?
   767  00F530                     __end_of_printf:
   768                           	opt stack 0
   769                           
   770                           	psect	text2
   771                           ; =============== function _printf ends ========
      +                          ====
   772                           ; *************** function _sin ****************
      +                          *
   773                           ; Defined at:
   774                           ;		line 14 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\sin.c"
   775                           ; Parameters:
   776                           ;		f              size:   3offs:   0	type: int 
   777                           ; Auto variables:
   778                           ;		sgn         	       	type: unsigned char 
   779                           ;		y           	       	type: unsigned char 
   780                           ;		x2          	       	type: unsigned char 
   781                           ; Return value:
   782                           ;		type: unsigned char 
   783                           ;		size: 3
   784                           ; Registers used:
   785                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, prodl, prodh, cstack
   786                           ; Tracked objects:
   787                           ;		On entry : 0/0
   788                           ;		On exit  : 0/0
   789                           ;		Unchanged: 0/0
   790                           ; Data sizes:
   791                           ;		Autos:   16
   792                           ;		Params:   3
   793                           ;		Temp:     1
   794                           ;		Total:   20
   795                           ; This function calls:
   796                           ;		___ftneg
   797                           ;		___asftmul
   798                           ;		_floor
   799                           ;		___asftsub
   800                           ;		___ftge
   801                           ;		___ftsub
   802                           ;		___ftmul
   803                           ;		_eval_poly
   804                           ;		___ftdiv
   805                           ; This function is called by:
   806                           ;		_main
   807                           ; This function uses a non-reentrant model
   808                           ; 
   809  000000                     
   810  00F838                     _sin:
   811                           	opt stack 30
   812                           ; BSR set to: ?
   813  00F838  0102               	movlb	2	; () banked
   814  00F83A  6F1E               	movwf	(??_sin+16)& (0+255),b
   815  00F83C  6B17               	clrf	(??_sin+9)& (0+255),b
   816  00F83E  511E               	movf	(??_sin+16)& (0+255),w,b
   817  00F840  510D               	movf	(?_sin+2)& (0+255),w,b
   818  00F842  0A80               	xorlw	128
   819  00F844  0F80               	addlw	128
   820  00F846  E105               	bnz	u3545
   821  00F848  0E00               	movlw	0
   822  00F84A  5D0C               	subwf	(?_sin+1)& (0+255),w,b
   823  00F84C  E102               	bnz	u3545
   824  00F84E  0E00               	movlw	0
   825  00F850  5D0B               	subwf	?_sin& (0+255),w,b
   826  00F852                     u3545:
   827  00F852  E213               	bc	l193
   828  00F854  C20B  F234         	movff	?_sin,?___ftneg
   829  00F858  C20C  F235         	movff	?_sin+1,?___ftneg+1
   830  00F85C  C20D  F236         	movff	?_sin+2,?___ftneg+2
   831  00F860  ECF0  F074         	call	___ftneg	;wreg free
   832  00F864  C234  F20B         	movff	?___ftneg,?_sin
   833  00F868  C235  F20C         	movff	?___ftneg+1,?_sin+1
   834  00F86C  C236  F20D         	movff	?___ftneg+2,?_sin+2
   835  00F870  0102               	movlb	2	; () banked
   836  00F872  6F1E               	movwf	(??_sin+16)& (0+255),b
   837  00F874  0E01               	movlw	1
   838  00F876  6F17               	movwf	(??_sin+9)& (0+255),b
   839  00F878  511E               	movf	(??_sin+16)& (0+255),w,b
   840  00F87A                     l193:
   841                           ; BSR set to: ?
   842  00F87A  0EFA               	movlw	250
   843  00F87C  0102               	movlb	2	; () banked
   844  00F87E  6F21               	movwf	(?___asftmul+2)& (0+255),b
   845  00F880  0E22               	movlw	34
   846  00F882  6F22               	movwf	(?___asftmul+3)& (0+255),b
   847  00F884  0E3E               	movlw	62
   848  00F886  6F23               	movwf	(?___asftmul+4)& (0+255),b
   849  00F888  0E0B               	movlw	low ?_sin
   850  00F88A  6F1F               	movwf	?___asftmul& (0+255),b
   851  00F88C  0E02               	movlw	high ?_sin
   852  00F88E  6F20               	movwf	(?___asftmul+1)& (0+255),b
   853  00F890  EC3A  F075         	call	___asftmul	;wreg free
   854  00F894  C20B  F21F         	movff	?_sin,?_floor
   855  00F898  C20C  F220         	movff	?_sin+1,?_floor+1
   856  00F89C  C20D  F221         	movff	?_sin+2,?_floor+2
   857  00F8A0  EC0A  F079         	call	_floor	;wreg free
   858  00F8A4  C21F  F20E         	movff	?_floor,??_sin
   859  00F8A8  C220  F20F         	movff	?_floor+1,??_sin+1
   860  00F8AC  C221  F210         	movff	?_floor+2,??_sin+2
   861  00F8B0  C20E  F221         	movff	??_sin,?___asftsub+2
   862  00F8B4  C20F  F222         	movff	??_sin+1,?___asftsub+3
   863  00F8B8  C210  F223         	movff	??_sin+2,?___asftsub+4
   864  00F8BC  0E0B               	movlw	low ?_sin
   865  00F8BE  0102               	movlb	2	; () banked
   866  00F8C0  6F1F               	movwf	?___asftsub& (0+255),b
   867  00F8C2  0E02               	movlw	high ?_sin
   868  00F8C4  6F20               	movwf	(?___asftsub+1)& (0+255),b
   869  00F8C6  EC58  F075         	call	___asftsub	;wreg free
   870  00F8CA  0102               	movlb	2	; () banked
   871  00F8CC  6B21               	clrf	(?___asftmul+2)& (0+255),b
   872  00F8CE  0E80               	movlw	128
   873  00F8D0  6F22               	movwf	(?___asftmul+3)& (0+255),b
   874  00F8D2  0E40               	movlw	64
   875  00F8D4  6F23               	movwf	(?___asftmul+4)& (0+255),b
   876  00F8D6  0E0B               	movlw	low ?_sin
   877  00F8D8  6F1F               	movwf	?___asftmul& (0+255),b
   878  00F8DA  0E02               	movlw	high ?_sin
   879  00F8DC  6F20               	movwf	(?___asftmul+1)& (0+255),b
   880  00F8DE  EC3A  F075         	call	___asftmul	;wreg free
   881  00F8E2  C20B  F22A         	movff	?_sin,?___ftge+3
   882  00F8E6  C20C  F22B         	movff	?_sin+1,?___ftge+4
   883  00F8EA  C20D  F22C         	movff	?_sin+2,?___ftge+5
   884  00F8EE  0102               	movlb	2	; () banked
   885  00F8F0  6B27               	clrf	?___ftge& (0+255),b
   886  00F8F2  6B28               	clrf	(?___ftge+1)& (0+255),b
   887  00F8F4  0E40               	movlw	64
   888  00F8F6  6F29               	movwf	(?___ftge+2)& (0+255),b
   889  00F8F8  ECEE  F075         	call	___ftge	;wreg free
   890  00F8FC  E213               	bc	l194
   891  00F8FE  0102               	movlb	2	; () banked
   892  00F900  6B21               	clrf	(?___asftsub+2)& (0+255),b
   893  00F902  6B22               	clrf	(?___asftsub+3)& (0+255),b
   894  00F904  0E40               	movlw	64
   895  00F906  6F23               	movwf	(?___asftsub+4)& (0+255),b
   896  00F908  0E0B               	movlw	low ?_sin
   897  00F90A  6F1F               	movwf	?___asftsub& (0+255),b
   898  00F90C  0E02               	movlw	high ?_sin
   899  00F90E  6F20               	movwf	(?___asftsub+1)& (0+255),b
   900  00F910  EC58  F075         	call	___asftsub	;wreg free
   901  00F914  0102               	movlb	2	; () banked
   902  00F916  5117               	movf	(??_sin+9)& (0+255),w,b
   903  00F918  E102               	bnz	u3560
   904  00F91A  0E01               	movlw	1
   905  00F91C  D001               	goto	u3566
   906  00F91E                     u3560:
   907  00F91E  0E00               	movlw	0
   908  00F920                     u3566:
   909  00F920  0102               	movlb	2	; () banked
   910  00F922  6F17               	movwf	(??_sin+9)& (0+255),b
   911  00F924                     l194:
   912                           ; BSR set to: ?
   913  00F924  C20B  F22A         	movff	?_sin,?___ftge+3
   914  00F928  C20C  F22B         	movff	?_sin+1,?___ftge+4
   915  00F92C  C20D  F22C         	movff	?_sin+2,?___ftge+5
   916  00F930  0102               	movlb	2	; () banked
   917  00F932  6B27               	clrf	?___ftge& (0+255),b
   918  00F934  0E80               	movlw	128
   919  00F936  6F28               	movwf	(?___ftge+1)& (0+255),b
   920  00F938  0E3F               	movlw	63
   921  00F93A  6F29               	movwf	(?___ftge+2)& (0+255),b
   922  00F93C  ECEE  F075         	call	___ftge	;wreg free
   923  00F940  E213               	bc	l195
   924  00F942  C20B  F227         	movff	?_sin,?___ftsub+3
   925  00F946  C20C  F228         	movff	?_sin+1,?___ftsub+4
   926  00F94A  C20D  F229         	movff	?_sin+2,?___ftsub+5
   927  00F94E  0102               	movlb	2	; () banked
   928  00F950  6B24               	clrf	?___ftsub& (0+255),b
   929  00F952  6B25               	clrf	(?___ftsub+1)& (0+255),b
   930  00F954  0E40               	movlw	64
   931  00F956  6F26               	movwf	(?___ftsub+2)& (0+255),b
   932  00F958  EC08  F075         	call	___ftsub	;wreg free
   933  00F95C  C224  F20B         	movff	?___ftsub,?_sin
   934  00F960  C225  F20C         	movff	?___ftsub+1,?_sin+1
   935  00F964  C226  F20D         	movff	?___ftsub+2,?_sin+2
   936  00F968                     l195:
   937                           ; BSR set to: ?
   938  00F968  C20B  F231         	movff	?_sin,?___ftmul+3
   939  00F96C  C20C  F232         	movff	?_sin+1,?___ftmul+4
   940  00F970  C20D  F233         	movff	?_sin+2,?___ftmul+5
   941  00F974  C20B  F22E         	movff	?_sin,?___ftmul
   942  00F978  C20C  F22F         	movff	?_sin+1,?___ftmul+1
   943  00F97C  C20D  F230         	movff	?_sin+2,?___ftmul+2
   944  00F980  EC9A  F078         	call	___ftmul	;wreg free
   945  00F984  C22E  F21B         	movff	?___ftmul,??_sin+13
   946  00F988  C22F  F21C         	movff	?___ftmul+1,??_sin+14
   947  00F98C  C230  F21D         	movff	?___ftmul+2,??_sin+15
   948  00F990  0E03               	movlw	3
   949  00F992  0102               	movlb	2	; () banked
   950  00F994  6F24               	movwf	(?_eval_poly+5)& (0+255),b
   951  00F996  6B25               	clrf	(?_eval_poly+6)& (0+255),b
   952  00F998  0EE3               	movlw	low F63
   953  00F99A  6F22               	movwf	(?_eval_poly+3)& (0+255),b
   954  00F99C  0EFF               	movlw	high F63
   955  00F99E  6F23               	movwf	(?_eval_poly+4)& (0+255),b
   956  00F9A0  C21B  F21F         	movff	??_sin+13,?_eval_poly
   957  00F9A4  C21C  F220         	movff	??_sin+14,?_eval_poly+1
   958  00F9A8  C21D  F221         	movff	??_sin+15,?_eval_poly+2
   959  00F9AC  EC33  F078         	call	_eval_poly	;wreg free
   960  00F9B0  C21F  F218         	movff	?_eval_poly,??_sin+10
   961  00F9B4  C220  F219         	movff	?_eval_poly+1,??_sin+11
   962  00F9B8  C221  F21A         	movff	?_eval_poly+2,??_sin+12
   963  00F9BC  0E04               	movlw	4
   964  00F9BE  0102               	movlb	2	; () banked
   965  00F9C0  6F24               	movwf	(?_eval_poly+5)& (0+255),b
   966  00F9C2  6B25               	clrf	(?_eval_poly+6)& (0+255),b
   967  00F9C4  0ED4               	movlw	low F62
   968  00F9C6  6F22               	movwf	(?_eval_poly+3)& (0+255),b
   969  00F9C8  0EFF               	movlw	high F62
   970  00F9CA  6F23               	movwf	(?_eval_poly+4)& (0+255),b
   971  00F9CC  C21B  F21F         	movff	??_sin+13,?_eval_poly
   972  00F9D0  C21C  F220         	movff	??_sin+14,?_eval_poly+1
   973  00F9D4  C21D  F221         	movff	??_sin+15,?_eval_poly+2
   974  00F9D8  EC33  F078         	call	_eval_poly	;wreg free
   975  00F9DC  C21F  F214         	movff	?_eval_poly,??_sin+6
   976  00F9E0  C220  F215         	movff	?_eval_poly+1,??_sin+7
   977  00F9E4  C221  F216         	movff	?_eval_poly+2,??_sin+8
   978  00F9E8  C214  F21F         	movff	??_sin+6,?___ftdiv
   979  00F9EC  C215  F220         	movff	??_sin+7,?___ftdiv+1
   980  00F9F0  C216  F221         	movff	??_sin+8,?___ftdiv+2
   981  00F9F4  C218  F222         	movff	??_sin+10,?___ftdiv+3
   982  00F9F8  C219  F223         	movff	??_sin+11,?___ftdiv+4
   983  00F9FC  C21A  F224         	movff	??_sin+12,?___ftdiv+5
   984  00FA00  ECCD  F077         	call	___ftdiv	;wreg free
   985  00FA04  C21F  F211         	movff	?___ftdiv,??_sin+3
   986  00FA08  C220  F212         	movff	?___ftdiv+1,??_sin+4
   987  00FA0C  C221  F213         	movff	?___ftdiv+2,??_sin+5
   988  00FA10  C211  F221         	movff	??_sin+3,?___asftmul+2
   989  00FA14  C212  F222         	movff	??_sin+4,?___asftmul+3
   990  00FA18  C213  F223         	movff	??_sin+5,?___asftmul+4
   991  00FA1C  0E0B               	movlw	low ?_sin
   992  00FA1E  0102               	movlb	2	; () banked
   993  00FA20  6F1F               	movwf	?___asftmul& (0+255),b
   994  00FA22  0E02               	movlw	high ?_sin
   995  00FA24  6F20               	movwf	(?___asftmul+1)& (0+255),b
   996  00FA26  EC3A  F075         	call	___asftmul	;wreg free
   997  00FA2A  0102               	movlb	2	; () banked
   998  00FA2C  5117               	movf	(??_sin+9)& (0+255),w,b
   999  00FA2E  E00F               	bz	l196
  1000  00FA30  C20B  F234         	movff	?_sin,?___ftneg
  1001  00FA34  C20C  F235         	movff	?_sin+1,?___ftneg+1
  1002  00FA38  C20D  F236         	movff	?_sin+2,?___ftneg+2
  1003  00FA3C  ECF0  F074         	call	___ftneg	;wreg free
  1004  00FA40  C234  F20B         	movff	?___ftneg,?_sin
  1005  00FA44  C235  F20C         	movff	?___ftneg+1,?_sin+1
  1006  00FA48  C236  F20D         	movff	?___ftneg+2,?_sin+2
  1007  00FA4C  0012               	return	
  1008  00FA4E                     l196:
  1009                           ; BSR set to: ?
  1010  00FA4E  0012               	return	
  1011                           ; BSR set to: ?
  1012  00FA50                     __end_of_sin:
  1013                           	opt stack 0
  1014                           
  1015                           	psect	text3
  1016                           ; =============== function _sin ends ===========
      +                          =
  1017                           ; *************** function _Radix2Fft **********
      +                          *******
  1018                           ; Defined at:
  1019                           ;		line 15 in file "C:\Documents and Settings\Ad
      +                          ministrator\Belgelerim\H-tech\FFT\Radix2\radix2_
      +                          fft.c"
  1020                           ; Parameters:
  1021                           ;		None
  1022                           ; Auto variables:
  1023                           ;		None
  1024                           ; Return value:
  1025                           ;		type: void 
  1026                           ;		size: 0
  1027                           ; Registers used:
  1028                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, cstack
  1029                           ; Tracked objects:
  1030                           ;		On entry : 0/0
  1031                           ;		On exit  : 0/0
  1032                           ;		Unchanged: 0/0
  1033                           ; Data sizes:
  1034                           ;		Autos:    0
  1035                           ;		Params:   0
  1036                           ;		Temp:    13
  1037                           ;		Total:   13
  1038                           ; This function calls:
  1039                           ;		___awdiv
  1040                           ;		___lmul
  1041                           ; This function is called by:
  1042                           ;		_main
  1043                           ; This function uses a non-reentrant model
  1044                           ; 
  1045  000000                     
  1046                           ;radix2_fft.c: 8: int i,j,k,n1,n2,Index=0;
  1047                           ;radix2_fft.c: 9: int TempReal,TempImag;
  1048                           ;radix2_fft.c: 10: long TwiddleReal,TwiddleImag;
  1049                           ;radix2_fft.c: 12: long k1,k2,k3;
  1050                           ;radix2_fft.c: 14: void Radix2Fft(void)
  1051                           ;radix2_fft.c: 15: {
  1052  00FA50                     _Radix2Fft:
  1053                           	opt stack 30
  1054                           ; BSR set to: ?
  1055  00FA50  6A0C               	clrf	12,c
  1056  00FA52  6A0D               	clrf	13,c
  1057                           ;radix2_fft.c: 18: n2 = 64/2;
  1058  00FA54  0E20               	movlw	32
  1059  00FA56  6E0A               	movwf	10,c
  1060  00FA58  6A0B               	clrf	11,c
  1061                           ;radix2_fft.c: 19: for (i=1; i<(64-1); i++)
  1062  00FA5A  0E01               	movlw	1
  1063  00FA5C  6E02               	movwf	2,c
  1064  00FA5E  6A03               	clrf	3,c
  1065  00FA60                     L4:
  1066  00FA60  5003               	movf	3,w,c
  1067  00FA62  0A80               	xorlw	128
  1068  00FA64  0F80               	addlw	-128
  1069  00FA66  0E3F               	movlw	63
  1070  00FA68  B4D8               	btfsc	status,2,c
  1071  00FA6A  5C02               	subwf	2,w,c
  1072  00FA6C  E301 D08D          	bc	l132
  1073                           ; BSR set to: ?
  1074                           ;radix2_fft.c: 20: {
  1075                           ;radix2_fft.c: 21: n1 = n2;
  1076  00FA70  C00A F008          	movff	10,8
  1077  00FA74  C00B F009          	movff	11,9
  1078                           ;radix2_fft.c: 22: while ( j >= n1 )
  1079  00FA78                     l134:
  1080                           ; BSR set to: ?
  1081  00FA78  500D               	movf	13,w,c
  1082  00FA7A  0A80               	xorlw	128
  1083  00FA7C  0102               	movlb	2	; () banked
  1084  00FA7E  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1085  00FA80  5008               	movf	8,w,c
  1086  00FA82  5C0C               	subwf	12,w,c
  1087  00FA84  5009               	movf	9,w,c
  1088  00FA86  0A80               	xorlw	128
  1089  00FA88  590B               	subwfb	??_Radix2Fft& (0+255),w,b
  1090  00FA8A  E315               	bnc	u3250
  1091                           ; BSR set to: ?
  1092                           ;radix2_fft.c: 23: {
  1093                           ;radix2_fft.c: 24: j = j - n1;
  1094  00FA8C  5008               	movf	8,w,c
  1095  00FA8E  5C0C               	subwf	12,w,c
  1096  00FA90  6E0C               	movwf	12,c
  1097  00FA92  5009               	movf	9,w,c
  1098  00FA94  580D               	subwfb	13,w,c
  1099  00FA96  6E0D               	movwf	13,c
  1100                           ;radix2_fft.c: 25: n1 = n1/2;
  1101  00FA98  0E02               	movlw	2
  1102  00FA9A  6F1A               	movwf	(?___awdiv+2)& (0+255),b
  1103  00FA9C  0E00               	movlw	0
  1104  00FA9E  6B1B               	clrf	(?___awdiv+3)& (0+255),b
  1105  00FAA0  C008 F218          	movff	8,?___awdiv
  1106  00FAA4  C009 F219          	movff	9,?___awdiv+1
  1107  00FAA8  ECD4  F076         	call	___awdiv	;wreg free
  1108  00FAAC  C218  F008         	movff	?___awdiv,8
  1109  00FAB0  C219  F009         	movff	?___awdiv+1,9
  1110  00FAB4  D7E1               	goto	l134
  1111  00FAB6                     u3250:
  1112                           ; BSR set to: ?
  1113                           ;radix2_fft.c: 26: }
  1114                           ;radix2_fft.c: 27: j = j + n1;
  1115  00FAB6  5008               	movf	8,w,c
  1116  00FAB8  260C               	addwf	12,f,c
  1117  00FABA  5009               	movf	9,w,c
  1118  00FABC  220D               	addwfc	13,f,c
  1119                           ;radix2_fft.c: 29: if (i < j)
  1120  00FABE  5003               	movf	3,w,c
  1121  00FAC0  0A80               	xorlw	128
  1122  00FAC2  0102               	movlb	2	; () banked
  1123  00FAC4  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1124  00FAC6  500C               	movf	12,w,c
  1125  00FAC8  5C02               	subwf	2,w,c
  1126  00FACA  500D               	movf	13,w,c
  1127  00FACC  0A80               	xorlw	128
  1128  00FACE  590B               	subwfb	??_Radix2Fft& (0+255),w,b
  1129  00FAD0  E259               	bc	l137
  1130                           ;radix2_fft.c: 30: {
  1131                           ;radix2_fft.c: 31: TempReal = Real[i];
  1132  00FAD2  90D8               	bcf	status,0,c
  1133  00FAD4  3402               	rlcf	2,w,c
  1134  00FAD6  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1135  00FAD8  0F00               	addlw	0
  1136  00FADA  6EE9               	movwf	fsr0l,c
  1137  00FADC  6AEA               	clrf	fsr0h,c
  1138  00FADE  0E0F               	movlw	15
  1139  00FAE0  22EA               	addwfc	fsr0h,f,c
  1140  00FAE2  CFEE F006          	movff	postinc0,6
  1141  00FAE6  CFED F007          	movff	postdec0,7
  1142                           ;radix2_fft.c: 32: Real[i] = Real[j];
  1143  00FAEA  90D8               	bcf	status,0,c
  1144  00FAEC  340C               	rlcf	12,w,c
  1145  00FAEE  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1146  00FAF0  0F00               	addlw	0
  1147  00FAF2  6EE9               	movwf	fsr0l,c
  1148  00FAF4  6AEA               	clrf	fsr0h,c
  1149  00FAF6  0E0F               	movlw	15
  1150  00FAF8  22EA               	addwfc	fsr0h,f,c
  1151  00FAFA  90D8               	bcf	status,0,c
  1152  00FAFC  3402               	rlcf	2,w,c
  1153  00FAFE  6F0C               	movwf	(??_Radix2Fft+1)& (0+255),b
  1154  00FB00  0F00               	addlw	0
  1155  00FB02  6EE1               	movwf	fsr1l,c
  1156  00FB04  6AE2               	clrf	fsr1h,c
  1157  00FB06  0E0F               	movlw	15
  1158  00FB08  22E2               	addwfc	fsr1h,f,c
  1159  00FB0A  CFEE FFE6          	movff	postinc0,postinc1
  1160  00FB0E  CFED FFE5          	movff	postdec0,postdec1
  1161                           ;radix2_fft.c: 33: Real[j] = TempReal;
  1162  00FB12  90D8               	bcf	status,0,c
  1163  00FB14  340C               	rlcf	12,w,c
  1164  00FB16  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1165  00FB18  0F00               	addlw	0
  1166  00FB1A  6EE9               	movwf	fsr0l,c
  1167  00FB1C  6AEA               	clrf	fsr0h,c
  1168  00FB1E  0E0F               	movlw	15
  1169  00FB20  22EA               	addwfc	fsr0h,f,c
  1170  00FB22  C006 FFEE          	movff	6,postinc0
  1171  00FB26  C007 FFED          	movff	7,postdec0
  1172                           ;radix2_fft.c: 34: TempImag = Imag[i];
  1173  00FB2A  90D8               	bcf	status,0,c
  1174  00FB2C  3402               	rlcf	2,w,c
  1175  00FB2E  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1176  00FB30  0F00               	addlw	0
  1177  00FB32  6EE9               	movwf	fsr0l,c
  1178  00FB34  6AEA               	clrf	fsr0h,c
  1179  00FB36  0E01               	movlw	1
  1180  00FB38  22EA               	addwfc	fsr0h,f,c
  1181  00FB3A  CFEE F004          	movff	postinc0,4
  1182  00FB3E  CFED F005          	movff	postdec0,5
  1183                           ;radix2_fft.c: 35: Imag[i] = Imag[j];
  1184  00FB42  90D8               	bcf	status,0,c
  1185  00FB44  340C               	rlcf	12,w,c
  1186  00FB46  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1187  00FB48  0F00               	addlw	0
  1188  00FB4A  6EE9               	movwf	fsr0l,c
  1189  00FB4C  6AEA               	clrf	fsr0h,c
  1190  00FB4E  0E01               	movlw	1
  1191  00FB50  22EA               	addwfc	fsr0h,f,c
  1192  00FB52  90D8               	bcf	status,0,c
  1193  00FB54  3402               	rlcf	2,w,c
  1194  00FB56  6F0C               	movwf	(??_Radix2Fft+1)& (0+255),b
  1195  00FB58  0F00               	addlw	0
  1196  00FB5A  6EE1               	movwf	fsr1l,c
  1197  00FB5C  6AE2               	clrf	fsr1h,c
  1198  00FB5E  0E01               	movlw	1
  1199  00FB60  22E2               	addwfc	fsr1h,f,c
  1200  00FB62  CFEE FFE6          	movff	postinc0,postinc1
  1201  00FB66  CFED FFE5          	movff	postdec0,postdec1
  1202                           ;radix2_fft.c: 36: Imag[j] = TempImag;
  1203  00FB6A  90D8               	bcf	status,0,c
  1204  00FB6C  340C               	rlcf	12,w,c
  1205  00FB6E  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1206  00FB70  0F00               	addlw	0
  1207  00FB72  6EE9               	movwf	fsr0l,c
  1208  00FB74  6AEA               	clrf	fsr0h,c
  1209  00FB76  0101               	movlb	1	; () banked
  1210  00FB78  0E01               	movlw	1
  1211  00FB7A  22EA               	addwfc	fsr0h,f,c
  1212  00FB7C  C004 FFEE          	movff	4,postinc0
  1213  00FB80  C005 FFED          	movff	5,postdec0
  1214  00FB84                     l137:
  1215                           ; BSR set to: ?
  1216  00FB84  4A02               	infsnz	2,f,c
  1217  00FB86  2A03               	incf	3,f,c
  1218  00FB88  D76B               	goto	L4
  1219  00FB8A                     l132:
  1220                           ; BSR set to: ?
  1221                           ;radix2_fft.c: 37: }
  1222                           ;radix2_fft.c: 38: }
  1223                           ;radix2_fft.c: 41: n1 = 0;
  1224  00FB8A  6A08               	clrf	8,c
  1225  00FB8C  6A09               	clrf	9,c
  1226                           ;radix2_fft.c: 42: n2 = 1;
  1227  00FB8E  0E01               	movlw	1
  1228  00FB90  6E0A               	movwf	10,c
  1229  00FB92  6A0B               	clrf	11,c
  1230                           ;radix2_fft.c: 44: for (i=0; i < 6; i++)
  1231  00FB94  6A02               	clrf	2,c
  1232  00FB96  6A03               	clrf	3,c
  1233  00FB98                     L5:
  1234  00FB98  5003               	movf	3,w,c
  1235  00FB9A  0A80               	xorlw	128
  1236  00FB9C  0F80               	addlw	-128
  1237  00FB9E  0E06               	movlw	6
  1238  00FBA0  B4D8               	btfsc	status,2,c
  1239  00FBA2  5C02               	subwf	2,w,c
  1240  00FBA4  B0D8               	btfsc	status,0,c
  1241  00FBA6  0012               	return	
  1242                           ; BSR set to: ?
  1243                           ;radix2_fft.c: 45: {
  1244                           ;radix2_fft.c: 46: n1 = n2;
  1245  00FBA8  C00A F008          	movff	10,8
  1246  00FBAC  C00B F009          	movff	11,9
  1247                           ;radix2_fft.c: 47: n2 = n2 + n2;
  1248  00FBB0  90D8               	bcf	status,0,c
  1249  00FBB2  340A               	rlcf	10,w,c
  1250  00FBB4  6E0A               	movwf	10,c
  1251  00FBB6  340B               	rlcf	11,w,c
  1252  00FBB8  6E0B               	movwf	11,c
  1253                           ;radix2_fft.c: 49: for (j=0; j < n1; j++)
  1254  00FBBA  6A0C               	clrf	12,c
  1255  00FBBC  6A0D               	clrf	13,c
  1256  00FBBE                     l144:
  1257                           ; BSR set to: ?
  1258  00FBBE  500D               	movf	13,w,c
  1259  00FBC0  0A80               	xorlw	128
  1260  00FBC2  0102               	movlb	2	; () banked
  1261  00FBC4  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1262  00FBC6  5008               	movf	8,w,c
  1263  00FBC8  5C0C               	subwf	12,w,c
  1264  00FBCA  5009               	movf	9,w,c
  1265  00FBCC  0A80               	xorlw	128
  1266  00FBCE  590B               	subwfb	??_Radix2Fft& (0+255),w,b
  1267  00FBD0  E301 D17D          	bc	u3320
  1268                           ; BSR set to: ?
  1269                           ;radix2_fft.c: 50: {
  1270                           ;radix2_fft.c: 55: TwiddleReal=CosTable[Index];
  1271  00FBD4  90D8               	bcf	status,0,c
  1272  00FBD6  3410               	rlcf	16,w,c
  1273  00FBD8  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1274  00FBDA  0FD4               	addlw	low _CosTable
  1275  00FBDC  6EF6               	movwf	tblptrl,c
  1276  00FBDE  6AF7               	clrf	tblptrh,c
  1277  00FBE0  0EFE               	movlw	high _CosTable
  1278  00FBE2  22F7               	addwfc	tblptrh,f,c
  1279  00FBE4  0009               	tblrd		*+
  1280  00FBE6  CFF5 F20C          	movff	tablat,??_Radix2Fft+1
  1281  00FBEA  0009               	tblrd		*+
  1282  00FBEC  CFF5 F20D          	movff	tablat,??_Radix2Fft+2
  1283  00FBF0  C20C  F09E         	movff	??_Radix2Fft+1,158
  1284  00FBF4  C20D  F09F         	movff	??_Radix2Fft+2,159
  1285  00FBF8  0E00               	movlw	0
  1286  00FBFA  0100               	movlb	0	; () banked
  1287  00FBFC  BF9F               	btfsc	159,7,b
  1288  00FBFE  0EFF               	movlw	-1
  1289  00FC00  6FA0               	movwf	160,b
  1290  00FC02  6FA1               	movwf	161,b
  1291                           ;radix2_fft.c: 56: TwiddleImag =SinTable[Index];
  1292  00FC04  90D8               	bcf	status,0,c
  1293  00FC06  3410               	rlcf	16,w,c
  1294  00FC08  0102               	movlb	2	; () banked
  1295  00FC0A  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1296  00FC0C  0F54               	addlw	low _SinTable
  1297  00FC0E  6EF6               	movwf	tblptrl,c
  1298  00FC10  6AF7               	clrf	tblptrh,c
  1299  00FC12  0EFF               	movlw	high _SinTable
  1300  00FC14  22F7               	addwfc	tblptrh,f,c
  1301  00FC16  0009               	tblrd		*+
  1302  00FC18  CFF5 F20C          	movff	tablat,??_Radix2Fft+1
  1303  00FC1C  0009               	tblrd		*+
  1304  00FC1E  CFF5 F20D          	movff	tablat,??_Radix2Fft+2
  1305  00FC22  C20C  F012         	movff	??_Radix2Fft+1,18
  1306  00FC26  C20D  F013         	movff	??_Radix2Fft+2,19
  1307  00FC2A  0E00               	movlw	0
  1308  00FC2C  BE13               	btfsc	19,7,c
  1309  00FC2E  0EFF               	movlw	-1
  1310  00FC30  6E14               	movwf	20,c
  1311  00FC32  6E15               	movwf	21,c
  1312                           ;radix2_fft.c: 57: Index++;
  1313  00FC34  4A10               	infsnz	16,f,c
  1314  00FC36  2A11               	incf	17,f,c
  1315                           ;radix2_fft.c: 59: for (k=j; k < 64; k=k+n2)
  1316  00FC38  C00C F00E          	movff	12,14
  1317  00FC3C  C00D F00F          	movff	13,15
  1318  00FC40                     l148:
  1319                           ; BSR set to: ?
  1320  00FC40  500F               	movf	15,w,c
  1321  00FC42  0A80               	xorlw	128
  1322  00FC44  0F80               	addlw	-128
  1323  00FC46  0E40               	movlw	64
  1324  00FC48  B4D8               	btfsc	status,2,c
  1325  00FC4A  5C0E               	subwf	14,w,c
  1326  00FC4C  E301 D13C          	bc	u3310
  1327                           ; BSR set to: ?
  1328                           ;radix2_fft.c: 60: {
  1329                           ;radix2_fft.c: 62: TempReal = ((TwiddleReal*Real
      +                          [k+n1]) - (TwiddleImag*Imag[k+n1]))>>7;
  1330  00FC50  0E07               	movlw	7
  1331  00FC52  0102               	movlb	2	; () banked
  1332  00FC54  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1333  00FC56  C09E F21C          	movff	158,?___lmul+4
  1334  00FC5A  C09F F21D          	movff	159,?___lmul+5
  1335  00FC5E  C0A0 F21E          	movff	160,?___lmul+6
  1336  00FC62  C0A1 F21F          	movff	161,?___lmul+7
  1337  00FC66  500E               	movf	14,w,c
  1338  00FC68  2408               	addwf	8,w,c
  1339  00FC6A  6F0C               	movwf	(??_Radix2Fft+1)& (0+255),b
  1340  00FC6C  90D8               	bcf	status,0,c
  1341  00FC6E  350C               	rlcf	(??_Radix2Fft+1)& (0+255),w,b
  1342  00FC70  6F0D               	movwf	(??_Radix2Fft+2)& (0+255),b
  1343  00FC72  0F00               	addlw	0
  1344  00FC74  6EE9               	movwf	fsr0l,c
  1345  00FC76  6AEA               	clrf	fsr0h,c
  1346  00FC78  0E0F               	movlw	15
  1347  00FC7A  22EA               	addwfc	fsr0h,f,c
  1348  00FC7C  CFEE F218          	movff	postinc0,?___lmul
  1349  00FC80  CFED F219          	movff	postdec0,?___lmul+1
  1350  00FC84  0E00               	movlw	0
  1351  00FC86  BF19               	btfsc	(?___lmul+1)& (0+255),7,b
  1352  00FC88  0EFF               	movlw	-1
  1353  00FC8A  6F1A               	movwf	(?___lmul+2)& (0+255),b
  1354  00FC8C  6F1B               	movwf	(?___lmul+3)& (0+255),b
  1355  00FC8E  EC98  F075         	call	___lmul	;wreg free
  1356  00FC92  C218  F20E         	movff	?___lmul,??_Radix2Fft+3
  1357  00FC96  C219  F20F         	movff	?___lmul+1,??_Radix2Fft+4
  1358  00FC9A  C21A  F210         	movff	?___lmul+2,??_Radix2Fft+5
  1359  00FC9E  C21B  F211         	movff	?___lmul+3,??_Radix2Fft+6
  1360  00FCA2  C012 F21C          	movff	18,?___lmul+4
  1361  00FCA6  C013 F21D          	movff	19,?___lmul+5
  1362  00FCAA  C014 F21E          	movff	20,?___lmul+6
  1363  00FCAE  C015 F21F          	movff	21,?___lmul+7
  1364  00FCB2  500E               	movf	14,w,c
  1365  00FCB4  2408               	addwf	8,w,c
  1366  00FCB6  0102               	movlb	2	; () banked
  1367  00FCB8  6F12               	movwf	(??_Radix2Fft+7)& (0+255),b
  1368  00FCBA  90D8               	bcf	status,0,c
  1369  00FCBC  3512               	rlcf	(??_Radix2Fft+7)& (0+255),w,b
  1370  00FCBE  6F13               	movwf	(??_Radix2Fft+8)& (0+255),b
  1371  00FCC0  0F00               	addlw	0
  1372  00FCC2  6EE9               	movwf	fsr0l,c
  1373  00FCC4  6AEA               	clrf	fsr0h,c
  1374  00FCC6  0E01               	movlw	1
  1375  00FCC8  22EA               	addwfc	fsr0h,f,c
  1376  00FCCA  CFEE F218          	movff	postinc0,?___lmul
  1377  00FCCE  CFED F219          	movff	postdec0,?___lmul+1
  1378  00FCD2  0E00               	movlw	0
  1379  00FCD4  BF19               	btfsc	(?___lmul+1)& (0+255),7,b
  1380  00FCD6  0EFF               	movlw	-1
  1381  00FCD8  6F1A               	movwf	(?___lmul+2)& (0+255),b
  1382  00FCDA  6F1B               	movwf	(?___lmul+3)& (0+255),b
  1383  00FCDC  EC98  F075         	call	___lmul	;wreg free
  1384  00FCE0  0102               	movlb	2	; () banked
  1385  00FCE2  5118               	movf	?___lmul& (0+255),w,b
  1386  00FCE4  5D0E               	subwf	(??_Radix2Fft+3)& (0+255),w,b
  1387  00FCE6  6F14               	movwf	(??_Radix2Fft+9)& (0+255),b
  1388  00FCE8  5119               	movf	(?___lmul+1)& (0+255),w,b
  1389  00FCEA  590F               	subwfb	(??_Radix2Fft+4)& (0+255),w,b
  1390  00FCEC  6F15               	movwf	(??_Radix2Fft+10)& (0+255),b
  1391  00FCEE  511A               	movf	(?___lmul+2)& (0+255),w,b
  1392  00FCF0  5910               	subwfb	(??_Radix2Fft+5)& (0+255),w,b
  1393  00FCF2  6F16               	movwf	(??_Radix2Fft+11)& (0+255),b
  1394  00FCF4  511B               	movf	(?___lmul+3)& (0+255),w,b
  1395  00FCF6  5911               	subwfb	(??_Radix2Fft+6)& (0+255),w,b
  1396  00FCF8  6F17               	movwf	(??_Radix2Fft+12)& (0+255),b
  1397  00FCFA                     u3295:
  1398  00FCFA  0102               	movlb	2	; () banked
  1399  00FCFC  3517               	rlcf	(??_Radix2Fft+12)& (0+255),w,b
  1400  00FCFE  3317               	rrcf	(??_Radix2Fft+12)& (0+255),f,b
  1401  00FD00  3316               	rrcf	(??_Radix2Fft+11)& (0+255),f,b
  1402  00FD02  3315               	rrcf	(??_Radix2Fft+10)& (0+255),f,b
  1403  00FD04  3314               	rrcf	(??_Radix2Fft+9)& (0+255),f,b
  1404  00FD06  2F0B               	decfsz	??_Radix2Fft& (0+255),f,b
  1405  00FD08  D7F8               	goto	u3295
  1406  00FD0A  C214  F006         	movff	??_Radix2Fft+9,6
  1407  00FD0E  C215  F007         	movff	??_Radix2Fft+10,7
  1408                           ;radix2_fft.c: 63: TempImag = ((TwiddleImag*Real
      +                          [k+n1]) + (TwiddleReal*Imag[k+n1]))>>7;
  1409  00FD12  0E07               	movlw	7
  1410  00FD14  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1411  00FD16  C012 F21C          	movff	18,?___lmul+4
  1412  00FD1A  C013 F21D          	movff	19,?___lmul+5
  1413  00FD1E  C014 F21E          	movff	20,?___lmul+6
  1414  00FD22  C015 F21F          	movff	21,?___lmul+7
  1415  00FD26  500E               	movf	14,w,c
  1416  00FD28  2408               	addwf	8,w,c
  1417  00FD2A  6F0C               	movwf	(??_Radix2Fft+1)& (0+255),b
  1418  00FD2C  90D8               	bcf	status,0,c
  1419  00FD2E  350C               	rlcf	(??_Radix2Fft+1)& (0+255),w,b
  1420  00FD30  6F0D               	movwf	(??_Radix2Fft+2)& (0+255),b
  1421  00FD32  0F00               	addlw	0
  1422  00FD34  6EE9               	movwf	fsr0l,c
  1423  00FD36  6AEA               	clrf	fsr0h,c
  1424  00FD38  0E0F               	movlw	15
  1425  00FD3A  22EA               	addwfc	fsr0h,f,c
  1426  00FD3C  CFEE F218          	movff	postinc0,?___lmul
  1427  00FD40  CFED F219          	movff	postdec0,?___lmul+1
  1428  00FD44  0E00               	movlw	0
  1429  00FD46  BF19               	btfsc	(?___lmul+1)& (0+255),7,b
  1430  00FD48  0EFF               	movlw	-1
  1431  00FD4A  6F1A               	movwf	(?___lmul+2)& (0+255),b
  1432  00FD4C  6F1B               	movwf	(?___lmul+3)& (0+255),b
  1433  00FD4E  EC98  F075         	call	___lmul	;wreg free
  1434  00FD52  C218  F20E         	movff	?___lmul,??_Radix2Fft+3
  1435  00FD56  C219  F20F         	movff	?___lmul+1,??_Radix2Fft+4
  1436  00FD5A  C21A  F210         	movff	?___lmul+2,??_Radix2Fft+5
  1437  00FD5E  C21B  F211         	movff	?___lmul+3,??_Radix2Fft+6
  1438  00FD62  C09E F21C          	movff	158,?___lmul+4
  1439  00FD66  C09F F21D          	movff	159,?___lmul+5
  1440  00FD6A  C0A0 F21E          	movff	160,?___lmul+6
  1441  00FD6E  C0A1 F21F          	movff	161,?___lmul+7
  1442  00FD72  500E               	movf	14,w,c
  1443  00FD74  2408               	addwf	8,w,c
  1444  00FD76  0102               	movlb	2	; () banked
  1445  00FD78  6F12               	movwf	(??_Radix2Fft+7)& (0+255),b
  1446  00FD7A  90D8               	bcf	status,0,c
  1447  00FD7C  3512               	rlcf	(??_Radix2Fft+7)& (0+255),w,b
  1448  00FD7E  6F13               	movwf	(??_Radix2Fft+8)& (0+255),b
  1449  00FD80  0F00               	addlw	0
  1450  00FD82  6EE9               	movwf	fsr0l,c
  1451  00FD84  6AEA               	clrf	fsr0h,c
  1452  00FD86  0E01               	movlw	1
  1453  00FD88  22EA               	addwfc	fsr0h,f,c
  1454  00FD8A  CFEE F218          	movff	postinc0,?___lmul
  1455  00FD8E  CFED F219          	movff	postdec0,?___lmul+1
  1456  00FD92  0E00               	movlw	0
  1457  00FD94  BF19               	btfsc	(?___lmul+1)& (0+255),7,b
  1458  00FD96  0EFF               	movlw	-1
  1459  00FD98  6F1A               	movwf	(?___lmul+2)& (0+255),b
  1460  00FD9A  6F1B               	movwf	(?___lmul+3)& (0+255),b
  1461  00FD9C  EC98  F075         	call	___lmul	;wreg free
  1462  00FDA0  0102               	movlb	2	; () banked
  1463  00FDA2  5118               	movf	?___lmul& (0+255),w,b
  1464  00FDA4  250E               	addwf	(??_Radix2Fft+3)& (0+255),w,b
  1465  00FDA6  6F14               	movwf	(??_Radix2Fft+9)& (0+255),b
  1466  00FDA8  5119               	movf	(?___lmul+1)& (0+255),w,b
  1467  00FDAA  210F               	addwfc	(??_Radix2Fft+4)& (0+255),w,b
  1468  00FDAC  6F15               	movwf	(??_Radix2Fft+10)& (0+255),b
  1469  00FDAE  511A               	movf	(?___lmul+2)& (0+255),w,b
  1470  00FDB0  2110               	addwfc	(??_Radix2Fft+5)& (0+255),w,b
  1471  00FDB2  6F16               	movwf	(??_Radix2Fft+11)& (0+255),b
  1472  00FDB4  511B               	movf	(?___lmul+3)& (0+255),w,b
  1473  00FDB6  2111               	addwfc	(??_Radix2Fft+6)& (0+255),w,b
  1474  00FDB8  6F17               	movwf	(??_Radix2Fft+12)& (0+255),b
  1475  00FDBA                     u3305:
  1476  00FDBA  0102               	movlb	2	; () banked
  1477  00FDBC  3517               	rlcf	(??_Radix2Fft+12)& (0+255),w,b
  1478  00FDBE  3317               	rrcf	(??_Radix2Fft+12)& (0+255),f,b
  1479  00FDC0  3316               	rrcf	(??_Radix2Fft+11)& (0+255),f,b
  1480  00FDC2  3315               	rrcf	(??_Radix2Fft+10)& (0+255),f,b
  1481  00FDC4  3314               	rrcf	(??_Radix2Fft+9)& (0+255),f,b
  1482  00FDC6  2F0B               	decfsz	??_Radix2Fft& (0+255),f,b
  1483  00FDC8  D7F8               	goto	u3305
  1484  00FDCA  C214  F004         	movff	??_Radix2Fft+9,4
  1485  00FDCE  C215  F005         	movff	??_Radix2Fft+10,5
  1486                           ;radix2_fft.c: 65: Real[k+n1] = (Real[k] - TempR
      +                          eal);
  1487  00FDD2  90D8               	bcf	status,0,c
  1488  00FDD4  340E               	rlcf	14,w,c
  1489  00FDD6  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1490  00FDD8  0F00               	addlw	0
  1491  00FDDA  6EE9               	movwf	fsr0l,c
  1492  00FDDC  6AEA               	clrf	fsr0h,c
  1493  00FDDE  0E0F               	movlw	15
  1494  00FDE0  22EA               	addwfc	fsr0h,f,c
  1495  00FDE2  CFEE F20C          	movff	postinc0,??_Radix2Fft+1
  1496  00FDE6  CFED F20D          	movff	postdec0,??_Radix2Fft+2
  1497  00FDEA  5006               	movf	6,w,c
  1498  00FDEC  5F0C               	subwf	(??_Radix2Fft+1)& (0+255),f,b
  1499  00FDEE  5007               	movf	7,w,c
  1500  00FDF0  5B0D               	subwfb	(??_Radix2Fft+2)& (0+255),f,b
  1501  00FDF2  500E               	movf	14,w,c
  1502  00FDF4  2408               	addwf	8,w,c
  1503  00FDF6  6F0E               	movwf	(??_Radix2Fft+3)& (0+255),b
  1504  00FDF8  90D8               	bcf	status,0,c
  1505  00FDFA  350E               	rlcf	(??_Radix2Fft+3)& (0+255),w,b
  1506  00FDFC  6F0F               	movwf	(??_Radix2Fft+4)& (0+255),b
  1507  00FDFE  0F00               	addlw	0
  1508  00FE00  6EE9               	movwf	fsr0l,c
  1509  00FE02  6AEA               	clrf	fsr0h,c
  1510  00FE04  0E0F               	movlw	15
  1511  00FE06  22EA               	addwfc	fsr0h,f,c
  1512  00FE08  C20C  FFEE         	movff	??_Radix2Fft+1,postinc0
  1513  00FE0C  C20D  FFED         	movff	??_Radix2Fft+2,postdec0
  1514                           ;radix2_fft.c: 66: Imag[k+n1] = (Imag[k] - TempI
      +                          mag);
  1515  00FE10  90D8               	bcf	status,0,c
  1516  00FE12  340E               	rlcf	14,w,c
  1517  00FE14  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1518  00FE16  0F00               	addlw	0
  1519  00FE18  6EE9               	movwf	fsr0l,c
  1520  00FE1A  6AEA               	clrf	fsr0h,c
  1521  00FE1C  0E01               	movlw	1
  1522  00FE1E  22EA               	addwfc	fsr0h,f,c
  1523  00FE20  CFEE F20C          	movff	postinc0,??_Radix2Fft+1
  1524  00FE24  CFED F20D          	movff	postdec0,??_Radix2Fft+2
  1525  00FE28  5004               	movf	4,w,c
  1526  00FE2A  5F0C               	subwf	(??_Radix2Fft+1)& (0+255),f,b
  1527  00FE2C  5005               	movf	5,w,c
  1528  00FE2E  5B0D               	subwfb	(??_Radix2Fft+2)& (0+255),f,b
  1529  00FE30  500E               	movf	14,w,c
  1530  00FE32  2408               	addwf	8,w,c
  1531  00FE34  6F0E               	movwf	(??_Radix2Fft+3)& (0+255),b
  1532  00FE36  90D8               	bcf	status,0,c
  1533  00FE38  350E               	rlcf	(??_Radix2Fft+3)& (0+255),w,b
  1534  00FE3A  6F0F               	movwf	(??_Radix2Fft+4)& (0+255),b
  1535  00FE3C  0F00               	addlw	0
  1536  00FE3E  6EE9               	movwf	fsr0l,c
  1537  00FE40  6AEA               	clrf	fsr0h,c
  1538  00FE42  0E01               	movlw	1
  1539  00FE44  22EA               	addwfc	fsr0h,f,c
  1540  00FE46  C20C  FFEE         	movff	??_Radix2Fft+1,postinc0
  1541  00FE4A  C20D  FFED         	movff	??_Radix2Fft+2,postdec0
  1542                           ;radix2_fft.c: 67: Real[k] = (Real[k] + TempReal
      +                          );
  1543  00FE4E  90D8               	bcf	status,0,c
  1544  00FE50  340E               	rlcf	14,w,c
  1545  00FE52  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1546  00FE54  0F00               	addlw	0
  1547  00FE56  6EE9               	movwf	fsr0l,c
  1548  00FE58  6AEA               	clrf	fsr0h,c
  1549  00FE5A  0E0F               	movlw	15
  1550  00FE5C  22EA               	addwfc	fsr0h,f,c
  1551  00FE5E  CFEE F20C          	movff	postinc0,??_Radix2Fft+1
  1552  00FE62  CFED F20D          	movff	postdec0,??_Radix2Fft+2
  1553  00FE66  5006               	movf	6,w,c
  1554  00FE68  270C               	addwf	(??_Radix2Fft+1)& (0+255),f,b
  1555  00FE6A  5007               	movf	7,w,c
  1556  00FE6C  230D               	addwfc	(??_Radix2Fft+2)& (0+255),f,b
  1557  00FE6E  90D8               	bcf	status,0,c
  1558  00FE70  340E               	rlcf	14,w,c
  1559  00FE72  6F0E               	movwf	(??_Radix2Fft+3)& (0+255),b
  1560  00FE74  0F00               	addlw	0
  1561  00FE76  6EE9               	movwf	fsr0l,c
  1562  00FE78  6AEA               	clrf	fsr0h,c
  1563  00FE7A  0E0F               	movlw	15
  1564  00FE7C  22EA               	addwfc	fsr0h,f,c
  1565  00FE7E  C20C  FFEE         	movff	??_Radix2Fft+1,postinc0
  1566  00FE82  C20D  FFED         	movff	??_Radix2Fft+2,postdec0
  1567                           ;radix2_fft.c: 68: Imag[k] = (Imag[k] + TempImag
      +                          );
  1568  00FE86  90D8               	bcf	status,0,c
  1569  00FE88  340E               	rlcf	14,w,c
  1570  00FE8A  6F0B               	movwf	??_Radix2Fft& (0+255),b
  1571  00FE8C  0F00               	addlw	0
  1572  00FE8E  6EE9               	movwf	fsr0l,c
  1573  00FE90  6AEA               	clrf	fsr0h,c
  1574  00FE92  0E01               	movlw	1
  1575  00FE94  22EA               	addwfc	fsr0h,f,c
  1576  00FE96  CFEE F20C          	movff	postinc0,??_Radix2Fft+1
  1577  00FE9A  CFED F20D          	movff	postdec0,??_Radix2Fft+2
  1578  00FE9E  5004               	movf	4,w,c
  1579  00FEA0  270C               	addwf	(??_Radix2Fft+1)& (0+255),f,b
  1580  00FEA2  5005               	movf	5,w,c
  1581  00FEA4  230D               	addwfc	(??_Radix2Fft+2)& (0+255),f,b
  1582  00FEA6  90D8               	bcf	status,0,c
  1583  00FEA8  340E               	rlcf	14,w,c
  1584  00FEAA  6F0E               	movwf	(??_Radix2Fft+3)& (0+255),b
  1585  00FEAC  0F00               	addlw	0
  1586  00FEAE  6EE9               	movwf	fsr0l,c
  1587  00FEB0  6AEA               	clrf	fsr0h,c
  1588  00FEB2  0E01               	movlw	1
  1589  00FEB4  22EA               	addwfc	fsr0h,f,c
  1590  00FEB6  C20C  FFEE         	movff	??_Radix2Fft+1,postinc0
  1591  00FEBA  C20D  FFED         	movff	??_Radix2Fft+2,postdec0
  1592  00FEBE  500A               	movf	10,w,c
  1593  00FEC0  260E               	addwf	14,f,c
  1594  00FEC2  500B               	movf	11,w,c
  1595  00FEC4  220F               	addwfc	15,f,c
  1596  00FEC6  D6BC               	goto	l148
  1597  00FEC8                     u3310:
  1598                           ; BSR set to: ?
  1599  00FEC8  4A0C               	infsnz	12,f,c
  1600  00FECA  2A0D               	incf	13,f,c
  1601  00FECC  D678               	goto	l144
  1602  00FECE                     u3320:
  1603                           ; BSR set to: ?
  1604  00FECE  4A02               	infsnz	2,f,c
  1605  00FED0  2A03               	incf	3,f,c
  1606  00FED2  D662               	goto	L5
  1607                           ; BSR set to: ?
  1608                           ;radix2_fft.c: 69: }
  1609                           ;radix2_fft.c: 70: }
  1610                           ;radix2_fft.c: 71: }
  1611                           ;radix2_fft.c: 72: return;
  1612                           ;radix2_fft.c: 73: }
  1613                           ; BSR set to: ?
  1614  00FED4                     __end_of_Radix2Fft:
  1615                           	opt stack 0
  1616                           
  1617                           	psect	text4
  1618                           ; =============== function _Radix2Fft ends =====
      +                          =======
  1619                           ; *************** function _abs ****************
      +                          *
  1620                           ; Defined at:
  1621                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\abs.c"
  1622                           ; Parameters:
  1623                           ;		a              size:   2offs:   0	type: int 
  1624                           ; Auto variables:
  1625                           ;		None
  1626                           ; Return value:
  1627                           ;		type: int 
  1628                           ;		size: 2
  1629                           ; Registers used:
  1630                           ;		None
  1631                           ; Tracked objects:
  1632                           ;		On entry : 0/0
  1633                           ;		On exit  : 0/0
  1634                           ;		Unchanged: 0/0
  1635                           ; Data sizes:
  1636                           ;		Autos:    0
  1637                           ;		Params:   2
  1638                           ;		Temp:     2
  1639                           ;		Total:    4
  1640                           ; This function calls:
  1641                           ; This function is called by:
  1642                           ;		_main
  1643                           ; This function uses a non-reentrant model
  1644                           ; 
  1645  000000                     
  1646  00E9F0                     _abs:
  1647                           	opt stack 30
  1648                           ; BSR set to: ?
  1649  00E9F0  0102               	movlb	2	; () banked
  1650  00E9F2  AF0C               	btfss	(?_abs+1)& (0+255),7,b
  1651  00E9F4  0012               	return	
  1652  00E9F6  C20B  F20D         	movff	?_abs,??_abs
  1653  00E9FA  C20C  F20E         	movff	?_abs+1,??_abs+1
  1654  00E9FE  1F0D               	comf	??_abs& (0+255),f,b
  1655  00EA00  1F0E               	comf	(??_abs+1)& (0+255),f,b
  1656  00EA02  4B0D               	infsnz	??_abs& (0+255),f,b
  1657  00EA04  2B0E               	incf	(??_abs+1)& (0+255),f,b
  1658  00EA06  C20D  F20B         	movff	??_abs,?_abs
  1659  00EA0A  C20E  F20C         	movff	??_abs+1,?_abs+1
  1660  00EA0E  0012               	return	
  1661                           ; BSR set to: ?
  1662                           ; BSR set to: ?
  1663  00EA10                     __end_of_abs:
  1664                           	opt stack 0
  1665                           
  1666                           	psect	text5
  1667                           ; =============== function _abs ends ===========
      +                          =
  1668                           ; *************** function ___awtoft ***********
      +                          ******
  1669                           ; Defined at:
  1670                           ;		line 16 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\awtoft.c"
  1671                           ; Parameters:
  1672                           ;		c              size:   2offs:   0	type: int 
  1673                           ; Auto variables:
  1674                           ;		f1          	       	type: float 
  1675                           ; Return value:
  1676                           ;		type: float 
  1677                           ;		size: 3
  1678                           ; Registers used:
  1679                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  1680                           ; Tracked objects:
  1681                           ;		On entry : 0/0
  1682                           ;		On exit  : 0/0
  1683                           ;		Unchanged: 0/0
  1684                           ; Data sizes:
  1685                           ;		Autos:    3
  1686                           ;		Params:   3
  1687                           ;		Temp:     1
  1688                           ;		Total:    7
  1689                           ; This function calls:
  1690                           ;		___ftpack
  1691                           ;		___ftneg
  1692                           ; This function is called by:
  1693                           ;		_main
  1694                           ; This function uses a non-reentrant model
  1695                           ; 
  1696  000000                     
  1697  00ECB4                     ___awtoft:
  1698                           	opt stack 30
  1699                           ; BSR set to: ?
  1700  00ECB4  0102               	movlb	2	; () banked
  1701  00ECB6  510C               	movf	(?___awtoft+1)& (0+255),w,b
  1702  00ECB8  110B               	iorwf	?___awtoft& (0+255),w,b
  1703  00ECBA  E104               	bnz	l285
  1704  00ECBC  6B0B               	clrf	?___awtoft& (0+255),b
  1705  00ECBE  6B0C               	clrf	(?___awtoft+1)& (0+255),b
  1706  00ECC0  6B0D               	clrf	(?___awtoft+2)& (0+255),b
  1707  00ECC2  0C00               	retlw	0
  1708  00ECC4                     l285:
  1709                           ; BSR set to: ?
  1710  00ECC4  C20B  F20E         	movff	?___awtoft,??___awtoft
  1711  00ECC8  C20C  F20F         	movff	?___awtoft+1,??___awtoft+1
  1712  00ECCC  0102               	movlb	2	; () banked
  1713  00ECCE  6B10               	clrf	(??___awtoft+2)& (0+255),b
  1714  00ECD0  BF0F               	btfsc	(??___awtoft+1)& (0+255),7,b
  1715  00ECD2  0710               	decf	(??___awtoft+2)& (0+255),f,b
  1716  00ECD4  AF0C               	btfss	(?___awtoft+1)& (0+255),7,b
  1717  00ECD6  D007               	goto	l286
  1718  00ECD8  0102               	movlb	2	; () banked
  1719  00ECDA  1F10               	comf	(??___awtoft+2)& (0+255),f,b
  1720  00ECDC  1F0F               	comf	(??___awtoft+1)& (0+255),f,b
  1721  00ECDE  6D0E               	negf	??___awtoft& (0+255),b
  1722  00ECE0  0E00               	movlw	0
  1723  00ECE2  230F               	addwfc	(??___awtoft+1)& (0+255),f,b
  1724  00ECE4  2310               	addwfc	(??___awtoft+2)& (0+255),f,b
  1725  00ECE6                     l286:
  1726                           ; BSR set to: ?
  1727  00ECE6  0102               	movlb	2	; () banked
  1728  00ECE8  6F11               	movwf	(??___awtoft+3)& (0+255),b
  1729  00ECEA  0E8E               	movlw	142
  1730  00ECEC  6F3D               	movwf	(?___ftpack+2)& (0+255),b
  1731  00ECEE  5111               	movf	(??___awtoft+3)& (0+255),w,b
  1732  00ECF0  0E0E               	movlw	low ??___awtoft
  1733  00ECF2  6F3B               	movwf	?___ftpack& (0+255),b
  1734  00ECF4  0E02               	movlw	high ??___awtoft
  1735  00ECF6  6F3C               	movwf	(?___ftpack+1)& (0+255),b
  1736  00ECF8  EC7B  F079         	call	___ftpack	;wreg free
  1737  00ECFC  0102               	movlb	2	; () banked
  1738  00ECFE  AF0C               	btfss	(?___awtoft+1)& (0+255),7,b
  1739  00ED00  D00E               	goto	l287
  1740  00ED02  C20E  F234         	movff	??___awtoft,?___ftneg
  1741  00ED06  C20F  F235         	movff	??___awtoft+1,?___ftneg+1
  1742  00ED0A  C210  F236         	movff	??___awtoft+2,?___ftneg+2
  1743  00ED0E  ECF0  F074         	call	___ftneg	;wreg free
  1744  00ED12  C234  F20E         	movff	?___ftneg,??___awtoft
  1745  00ED16  C235  F20F         	movff	?___ftneg+1,??___awtoft+1
  1746  00ED1A  C236  F210         	movff	?___ftneg+2,??___awtoft+2
  1747  00ED1E                     l287:
  1748                           ; BSR set to: ?
  1749  00ED1E  C20E  F20B         	movff	??___awtoft,?___awtoft
  1750  00ED22  C20F  F20C         	movff	??___awtoft+1,?___awtoft+1
  1751  00ED26  C210  F20D         	movff	??___awtoft+2,?___awtoft+2
  1752  00ED2A  0012               	return	
  1753                           ; BSR set to: ?
  1754  00ED2C                     __end_of___awtoft:
  1755                           	opt stack 0
  1756                           
  1757                           	psect	text6
  1758                           ; =============== function ___awtoft ends ======
      +                          ======
  1759                           ; *************** function ___awdiv ************
      +                          *****
  1760                           ; Defined at:
  1761                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\awdiv.c"
  1762                           ; Parameters:
  1763                           ;		dividend       size:   2offs:   0	type: int 
  1764                           ;		divisor        size:   2offs:   2	type: int 
  1765                           ; Auto variables:
  1766                           ;		counter     	       	type: unsigned char 
  1767                           ;		sign        	       	type: unsigned char 
  1768                           ;		quotient    	       	type: int 
  1769                           ; Return value:
  1770                           ;		type: int 
  1771                           ;		size: 2
  1772                           ; Registers used:
  1773                           ;		wreg, status,2, status,0
  1774                           ; Tracked objects:
  1775                           ;		On entry : 0/0
  1776                           ;		On exit  : 0/0
  1777                           ;		Unchanged: 0/0
  1778                           ; Data sizes:
  1779                           ;		Autos:    4
  1780                           ;		Params:   4
  1781                           ;		Temp:     1
  1782                           ;		Total:    9
  1783                           ; This function calls:
  1784                           ;		Nothing
  1785                           ; This function is called by:
  1786                           ;		_Radix2Fft
  1787                           ;		_main
  1788                           ; This function uses a non-reentrant model
  1789                           ; 
  1790  000000                     
  1791  00EDA8                     ___awdiv:
  1792                           	opt stack 29
  1793                           ; BSR set to: ?
  1794  00EDA8  0102               	movlb	2	; () banked
  1795  00EDAA  6F20               	movwf	(??___awdiv+4)& (0+255),b
  1796  00EDAC  6B1C               	clrf	??___awdiv& (0+255),b
  1797  00EDAE  5120               	movf	(??___awdiv+4)& (0+255),w,b
  1798  00EDB0  AF1B               	btfss	(?___awdiv+3)& (0+255),7,b
  1799  00EDB2  D009               	goto	l257
  1800  00EDB4  0102               	movlb	2	; () banked
  1801  00EDB6  6D1A               	negf	(?___awdiv+2)& (0+255),b
  1802  00EDB8  1F1B               	comf	(?___awdiv+3)& (0+255),f,b
  1803  00EDBA  B0D8               	btfsc	status,0,c
  1804  00EDBC  2B1B               	incf	(?___awdiv+3)& (0+255),f,b
  1805  00EDBE  6F20               	movwf	(??___awdiv+4)& (0+255),b
  1806  00EDC0  0E01               	movlw	1
  1807  00EDC2  6F1C               	movwf	??___awdiv& (0+255),b
  1808  00EDC4  5120               	movf	(??___awdiv+4)& (0+255),w,b
  1809  00EDC6                     l257:
  1810                           ; BSR set to: ?
  1811  00EDC6  0102               	movlb	2	; () banked
  1812  00EDC8  AF19               	btfss	(?___awdiv+1)& (0+255),7,b
  1813  00EDCA  D007               	goto	l258
  1814  00EDCC  0102               	movlb	2	; () banked
  1815  00EDCE  6D18               	negf	?___awdiv& (0+255),b
  1816  00EDD0  1F19               	comf	(?___awdiv+1)& (0+255),f,b
  1817  00EDD2  B0D8               	btfsc	status,0,c
  1818  00EDD4  2B19               	incf	(?___awdiv+1)& (0+255),f,b
  1819  00EDD6  0E01               	movlw	1
  1820  00EDD8  1B1C               	xorwf	??___awdiv& (0+255),f,b
  1821  00EDDA                     l258:
  1822                           ; BSR set to: ?
  1823  00EDDA  0102               	movlb	2	; () banked
  1824  00EDDC  6B1E               	clrf	(??___awdiv+2)& (0+255),b
  1825  00EDDE  6B1F               	clrf	(??___awdiv+3)& (0+255),b
  1826  00EDE0  511B               	movf	(?___awdiv+3)& (0+255),w,b
  1827  00EDE2  111A               	iorwf	(?___awdiv+2)& (0+255),w,b
  1828  00EDE4  E021               	bz	L6
  1829  00EDE6  6F20               	movwf	(??___awdiv+4)& (0+255),b
  1830  00EDE8  0E01               	movlw	1
  1831  00EDEA  6F1D               	movwf	(??___awdiv+1)& (0+255),b
  1832  00EDEC  5120               	movf	(??___awdiv+4)& (0+255),w,b
  1833  00EDEE                     l260:
  1834                           ; BSR set to: ?
  1835  00EDEE  0102               	movlb	2	; () banked
  1836  00EDF0  BF1B               	btfsc	(?___awdiv+3)& (0+255),7,b
  1837  00EDF2  D006               	goto	l265
  1838                           ; BSR set to: ?
  1839  00EDF4  90D8               	bcf	status,0,c
  1840  00EDF6  0102               	movlb	2	; () banked
  1841  00EDF8  371A               	rlcf	(?___awdiv+2)& (0+255),f,b
  1842  00EDFA  371B               	rlcf	(?___awdiv+3)& (0+255),f,b
  1843  00EDFC  2B1D               	incf	(??___awdiv+1)& (0+255),f,b
  1844  00EDFE  D7F7               	goto	l260
  1845                           ; BSR set to: ?
  1846  00EE00                     l265:
  1847                           ; BSR set to: ?
  1848  00EE00  90D8               	bcf	status,0,c
  1849  00EE02  0102               	movlb	2	; () banked
  1850  00EE04  371E               	rlcf	(??___awdiv+2)& (0+255),f,b
  1851  00EE06  371F               	rlcf	(??___awdiv+3)& (0+255),f,b
  1852  00EE08  511A               	movf	(?___awdiv+2)& (0+255),w,b
  1853  00EE0A  5D18               	subwf	?___awdiv& (0+255),w,b
  1854  00EE0C  511B               	movf	(?___awdiv+3)& (0+255),w,b
  1855  00EE0E  5919               	subwfb	(?___awdiv+1)& (0+255),w,b
  1856  00EE10  E305               	bnc	l266
  1857  00EE12  511A               	movf	(?___awdiv+2)& (0+255),w,b
  1858  00EE14  5F18               	subwf	?___awdiv& (0+255),f,b
  1859  00EE16  511B               	movf	(?___awdiv+3)& (0+255),w,b
  1860  00EE18  5B19               	subwfb	(?___awdiv+1)& (0+255),f,b
  1861  00EE1A  811E               	bsf	(??___awdiv+2)& (0+255),0,b
  1862  00EE1C                     l266:
  1863                           ; BSR set to: ?
  1864  00EE1C  90D8               	bcf	status,0,c
  1865  00EE1E  0102               	movlb	2	; () banked
  1866  00EE20  331B               	rrcf	(?___awdiv+3)& (0+255),f,b
  1867  00EE22  331A               	rrcf	(?___awdiv+2)& (0+255),f,b
  1868  00EE24  2F1D               	decfsz	(??___awdiv+1)& (0+255),f,b
  1869  00EE26  D7EC               	goto	l265
  1870                           ; BSR set to: ?
  1871                           ; BSR set to: ?
  1872  00EE28                     L6:
  1873  00EE28  0102               	movlb	2	; () banked
  1874  00EE2A  511C               	movf	??___awdiv& (0+255),w,b
  1875  00EE2C  E004               	bz	l267
  1876  00EE2E  6D1E               	negf	(??___awdiv+2)& (0+255),b
  1877  00EE30  1F1F               	comf	(??___awdiv+3)& (0+255),f,b
  1878  00EE32  B0D8               	btfsc	status,0,c
  1879  00EE34  2B1F               	incf	(??___awdiv+3)& (0+255),f,b
  1880  00EE36                     l267:
  1881                           ; BSR set to: ?
  1882  00EE36  C21E  F218         	movff	??___awdiv+2,?___awdiv
  1883  00EE3A  C21F  F219         	movff	??___awdiv+3,?___awdiv+1
  1884  00EE3E  0012               	return	
  1885                           ; BSR set to: ?
  1886  00EE40                     __end_of___awdiv:
  1887                           	opt stack 0
  1888                           
  1889                           	psect	text7
  1890                           ; =============== function ___awdiv ends =======
      +                          =====
  1891                           ; *************** function ___ftdiv ************
      +                          *****
  1892                           ; Defined at:
  1893                           ;		line 19 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\ftdiv.c"
  1894                           ; Parameters:
  1895                           ;		f1             size:   3offs:   0	type: float
      +                           
  1896                           ;		f2             size:   3offs:   3	type: float
      +                           
  1897                           ; Auto variables:
  1898                           ;		exp2        	       	type: unsigned char 
  1899                           ;		sign1       	       	type: unsigned char 
  1900                           ;		sign2       	       	type: unsigned char 
  1901                           ;		exp1        	       	type: unsigned char 
  1902                           ;		f3          	       	type: float 
  1903                           ; Return value:
  1904                           ;		type: float 
  1905                           ;		size: 3
  1906                           ; Registers used:
  1907                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  1908                           ; Tracked objects:
  1909                           ;		On entry : 0/0
  1910                           ;		On exit  : 0/0
  1911                           ;		Unchanged: 0/0
  1912                           ; Data sizes:
  1913                           ;		Autos:    7
  1914                           ;		Params:   6
  1915                           ;		Temp:     1
  1916                           ;		Total:   14
  1917                           ; This function calls:
  1918                           ;		___ftunpack
  1919                           ;		___ftpack
  1920                           ; This function is called by:
  1921                           ;		_sin
  1922                           ; This function uses a non-reentrant model
  1923                           ; 
  1924  000000                     
  1925  00EF9A                     ___ftdiv:
  1926                           	opt stack 29
  1927                           ; BSR set to: ?
  1928  00EF9A  0102               	movlb	2	; () banked
  1929  00EF9C  6B29               	clrf	(??___ftdiv+4)& (0+255),b
  1930  00EF9E  6B2A               	clrf	(??___ftdiv+5)& (0+255),b
  1931  00EFA0  6B2B               	clrf	(??___ftdiv+6)& (0+255),b
  1932  00EFA2  0E27               	movlw	low (??___ftdiv+2)
  1933  00EFA4  6F3D               	movwf	(?___ftunpack+2)& (0+255),b
  1934  00EFA6  0E02               	movlw	high (??___ftdiv+2)
  1935  00EFA8  6F3E               	movwf	(?___ftunpack+3)& (0+255),b
  1936  00EFAA  0E1F               	movlw	low ?___ftdiv
  1937  00EFAC  6F3B               	movwf	?___ftunpack& (0+255),b
  1938  00EFAE  0E02               	movlw	high ?___ftdiv
  1939  00EFB0  6F3C               	movwf	(?___ftunpack+1)& (0+255),b
  1940  00EFB2  EC96  F076         	call	___ftunpack	;wreg free
  1941  00EFB6  0102               	movlb	2	; () banked
  1942  00EFB8  6F26               	movwf	(??___ftdiv+1)& (0+255),b
  1943  00EFBA  6727               	tstfsz	(??___ftdiv+2)& (0+255),b
  1944  00EFBC  D007               	goto	l420
  1945  00EFBE  C229  F21F         	movff	??___ftdiv+4,?___ftdiv
  1946  00EFC2  C22A  F220         	movff	??___ftdiv+5,?___ftdiv+1
  1947  00EFC6  C22B  F221         	movff	??___ftdiv+6,?___ftdiv+2
  1948  00EFCA  0012               	return	
  1949  00EFCC                     l420:
  1950                           ; BSR set to: ?
  1951  00EFCC  0E25               	movlw	low ??___ftdiv
  1952  00EFCE  0102               	movlb	2	; () banked
  1953  00EFD0  6F3D               	movwf	(?___ftunpack+2)& (0+255),b
  1954  00EFD2  0E02               	movlw	high ??___ftdiv
  1955  00EFD4  6F3E               	movwf	(?___ftunpack+3)& (0+255),b
  1956  00EFD6  0E22               	movlw	low (?___ftdiv+3)
  1957  00EFD8  6F3B               	movwf	?___ftunpack& (0+255),b
  1958  00EFDA  0E02               	movlw	high (?___ftdiv+3)
  1959  00EFDC  6F3C               	movwf	(?___ftunpack+1)& (0+255),b
  1960  00EFDE  EC96  F076         	call	___ftunpack	;wreg free
  1961  00EFE2  0102               	movlb	2	; () banked
  1962  00EFE4  6F28               	movwf	(??___ftdiv+3)& (0+255),b
  1963  00EFE6  6725               	tstfsz	??___ftdiv& (0+255),b
  1964  00EFE8  D007               	goto	l421
  1965  00EFEA  C229  F21F         	movff	??___ftdiv+4,?___ftdiv
  1966  00EFEE  C22A  F220         	movff	??___ftdiv+5,?___ftdiv+1
  1967  00EFF2  C22B  F221         	movff	??___ftdiv+6,?___ftdiv+2
  1968  00EFF6  0012               	return	
  1969  00EFF8                     l421:
  1970                           ; BSR set to: ?
  1971  00EFF8  0102               	movlb	2	; () banked
  1972  00EFFA  5125               	movf	??___ftdiv& (0+255),w,b
  1973  00EFFC  0F89               	addlw	137
  1974  00EFFE  5F27               	subwf	(??___ftdiv+2)& (0+255),f,b
  1975  00F000  5128               	movf	(??___ftdiv+3)& (0+255),w,b
  1976  00F002  1B26               	xorwf	(??___ftdiv+1)& (0+255),f,b
  1977  00F004  6F2C               	movwf	(??___ftdiv+7)& (0+255),b
  1978  00F006  0E18               	movlw	24
  1979  00F008  6F28               	movwf	(??___ftdiv+3)& (0+255),b
  1980  00F00A  512C               	movf	(??___ftdiv+7)& (0+255),w,b
  1981  00F00C                     l424:
  1982                           ; BSR set to: ?
  1983  00F00C  90D8               	bcf	status,0,c
  1984  00F00E  0102               	movlb	2	; () banked
  1985  00F010  3729               	rlcf	(??___ftdiv+4)& (0+255),f,b
  1986  00F012  372A               	rlcf	(??___ftdiv+5)& (0+255),f,b
  1987  00F014  372B               	rlcf	(??___ftdiv+6)& (0+255),f,b
  1988  00F016  5122               	movf	(?___ftdiv+3)& (0+255),w,b
  1989  00F018  5D1F               	subwf	?___ftdiv& (0+255),w,b
  1990  00F01A  5123               	movf	(?___ftdiv+4)& (0+255),w,b
  1991  00F01C  5920               	subwfb	(?___ftdiv+1)& (0+255),w,b
  1992  00F01E  5124               	movf	(?___ftdiv+5)& (0+255),w,b
  1993  00F020  5921               	subwfb	(?___ftdiv+2)& (0+255),w,b
  1994  00F022  E307               	bnc	l425
  1995  00F024  5122               	movf	(?___ftdiv+3)& (0+255),w,b
  1996  00F026  5F1F               	subwf	?___ftdiv& (0+255),f,b
  1997  00F028  5123               	movf	(?___ftdiv+4)& (0+255),w,b
  1998  00F02A  5B20               	subwfb	(?___ftdiv+1)& (0+255),f,b
  1999  00F02C  5124               	movf	(?___ftdiv+5)& (0+255),w,b
  2000  00F02E  5B21               	subwfb	(?___ftdiv+2)& (0+255),f,b
  2001  00F030  8129               	bsf	(??___ftdiv+4)& (0+255),0,b
  2002  00F032                     l425:
  2003                           ; BSR set to: ?
  2004  00F032  90D8               	bcf	status,0,c
  2005  00F034  0102               	movlb	2	; () banked
  2006  00F036  371F               	rlcf	?___ftdiv& (0+255),f,b
  2007  00F038  3720               	rlcf	(?___ftdiv+1)& (0+255),f,b
  2008  00F03A  3721               	rlcf	(?___ftdiv+2)& (0+255),f,b
  2009  00F03C  2F28               	decfsz	(??___ftdiv+3)& (0+255),f,b
  2010  00F03E  D7E6               	goto	l424
  2011                           ; BSR set to: ?
  2012  00F040  C227  F23D         	movff	??___ftdiv+2,?___ftpack+2
  2013  00F044  0E29               	movlw	low (??___ftdiv+4)
  2014  00F046  6F3B               	movwf	?___ftpack& (0+255),b
  2015  00F048  0E02               	movlw	high (??___ftdiv+4)
  2016  00F04A  6F3C               	movwf	(?___ftpack+1)& (0+255),b
  2017  00F04C  EC7B  F079         	call	___ftpack	;wreg free
  2018  00F050  0102               	movlb	2	; () banked
  2019  00F052  5126               	movf	(??___ftdiv+1)& (0+255),w,b
  2020  00F054  E001               	bz	l426
  2021  00F056  8F2B               	bsf	(??___ftdiv+6)& (0+255),7,b
  2022  00F058                     l426:
  2023                           ; BSR set to: ?
  2024  00F058  C229  F21F         	movff	??___ftdiv+4,?___ftdiv
  2025  00F05C  C22A  F220         	movff	??___ftdiv+5,?___ftdiv+1
  2026  00F060  C22B  F221         	movff	??___ftdiv+6,?___ftdiv+2
  2027  00F064  0012               	return	
  2028                           ; BSR set to: ?
  2029  00F066                     __end_of___ftdiv:
  2030                           	opt stack 0
  2031                           
  2032                           	psect	text8
  2033                           ; =============== function ___ftdiv ends =======
      +                          =====
  2034                           ; *************** function ___asftsub **********
      +                          *******
  2035                           ; Defined at:
  2036                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\asftsub.c"
  2037                           ; Parameters:
  2038                           ;		f1p            size:   2offs:   0	type: PTR f
      +                          loat ; Largest target is 3
  2039                           ;		 -> sin@f(3), 
  2040                           ;		f2             size:   3offs:   2	type: float
      +                           
  2041                           ; Auto variables:
  2042                           ;		None
  2043                           ; Return value:
  2044                           ;		type: float 
  2045                           ;		size: 3
  2046                           ; Registers used:
  2047                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  2048                           ; Tracked objects:
  2049                           ;		On entry : 0/0
  2050                           ;		On exit  : 0/0
  2051                           ;		Unchanged: 0/0
  2052                           ; Data sizes:
  2053                           ;		Autos:    0
  2054                           ;		Params:   5
  2055                           ;		Temp:     0
  2056                           ;		Total:    5
  2057                           ; This function calls:
  2058                           ;		___ftsub
  2059                           ; This function is called by:
  2060                           ;		_sin
  2061                           ; This function uses a non-reentrant model
  2062                           ; 
  2063  000000                     
  2064  00EAB0                     ___asftsub:
  2065                           	opt stack 29
  2066                           ; BSR set to: ?
  2067  00EAB0  C221  F227         	movff	?___asftsub+2,?___ftsub+3
  2068  00EAB4  C222  F228         	movff	?___asftsub+3,?___ftsub+4
  2069  00EAB8  C223  F229         	movff	?___asftsub+4,?___ftsub+5
  2070  00EABC  C21F  FFE9         	movff	?___asftsub,fsr0l
  2071  00EAC0  C220  FFEA         	movff	?___asftsub+1,fsr0h
  2072  00EAC4  CFEE F224          	movff	postinc0,?___ftsub
  2073  00EAC8  CFEE F225          	movff	postinc0,?___ftsub+1
  2074  00EACC  0102               	movlb	2	; () banked
  2075  00EACE  CFED F226          	movff	postdec0,?___ftsub+2
  2076  00EAD2  EC08  F075         	call	___ftsub	;wreg free
  2077  00EAD6  C21F  FFE9         	movff	?___asftsub,fsr0l
  2078  00EADA  C220  FFEA         	movff	?___asftsub+1,fsr0h
  2079  00EADE  C224  FFEE         	movff	?___ftsub,postinc0
  2080  00EAE2  C225  FFEE         	movff	?___ftsub+1,postinc0
  2081  00EAE6  C226  FFED         	movff	?___ftsub+2,postdec0
  2082  00EAEA  0012               	return	
  2083                           ; BSR set to: ?
  2084  00EAEC                     __end_of___asftsub:
  2085                           	opt stack 0
  2086                           
  2087                           	psect	text9
  2088                           ; =============== function ___asftsub ends =====
      +                          =======
  2089                           ; *************** function _eval_poly **********
      +                          *******
  2090                           ; Defined at:
  2091                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\evalpoly.c"
  2092                           ; Parameters:
  2093                           ;		x              size:   3offs:   0	type: float
      +                           
  2094                           ;		d              size:   2offs:   3	type: PTR c
      +                          onst ; Largest target is 15
  2095                           ;		 -> F62(15), F63(12), 
  2096                           ;		n              size:   2offs:   5	type: int 
  2097                           ; Auto variables:
  2098                           ;		res         	       	type: int 
  2099                           ; Return value:
  2100                           ;		type: int 
  2101                           ;		size: 3
  2102                           ; Registers used:
  2103                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, prodl, prodh, cstack
  2104                           ; Tracked objects:
  2105                           ;		On entry : 0/0
  2106                           ;		On exit  : 0/0
  2107                           ;		Unchanged: 0/0
  2108                           ; Data sizes:
  2109                           ;		Autos:    3
  2110                           ;		Params:   7
  2111                           ;		Temp:     5
  2112                           ;		Total:   15
  2113                           ; This function calls:
  2114                           ;		___wmul
  2115                           ;		___ftmul
  2116                           ;		___ftadd
  2117                           ; This function is called by:
  2118                           ;		_sin
  2119                           ; This function uses a non-reentrant model
  2120                           ; 
  2121  000000                     
  2122  00F066                     _eval_poly:
  2123                           	opt stack 29
  2124                           ; BSR set to: ?
  2125  00F066  0102               	movlb	2	; () banked
  2126  00F068  5124               	movf	(?_eval_poly+5)& (0+255),w,b
  2127  00F06A  0D03               	mullw	3
  2128  00F06C  50F3               	movf	prodl,w,c
  2129  00F06E  2522               	addwf	(?_eval_poly+3)& (0+255),w,b
  2130  00F070  6F29               	movwf	(??_eval_poly+3)& (0+255),b
  2131  00F072  6AE8               	clrf	wreg,c
  2132  00F074  BEF3               	btfsc	prodl,7,c
  2133  00F076  68E8               	setf	wreg,c
  2134  00F078  2123               	addwfc	(?_eval_poly+4)& (0+255),w,b
  2135  00F07A  6F2A               	movwf	(??_eval_poly+4)& (0+255),b
  2136  00F07C  C229  FFF6         	movff	??_eval_poly+3,tblptrl
  2137  00F080  C22A  FFF7         	movff	??_eval_poly+4,tblptrh
  2138  00F084  0009               	tblrd		*+
  2139  00F086  CFF5 F22B          	movff	tablat,??_eval_poly+5
  2140  00F08A  0009               	tblrd		*+
  2141  00F08C  CFF5 F22C          	movff	tablat,??_eval_poly+6
  2142  00F090  0009               	tblrd		*+
  2143  00F092  CFF5 F22D          	movff	tablat,??_eval_poly+7
  2144  00F096  C22B  F226         	movff	??_eval_poly+5,??_eval_poly
  2145  00F09A  C22C  F227         	movff	??_eval_poly+6,??_eval_poly+1
  2146  00F09E  C22D  F228         	movff	??_eval_poly+7,??_eval_poly+2
  2147  00F0A2                     l591:
  2148                           ; BSR set to: ?
  2149  00F0A2  0102               	movlb	2	; () banked
  2150  00F0A4  5125               	movf	(?_eval_poly+6)& (0+255),w,b
  2151  00F0A6  1124               	iorwf	(?_eval_poly+5)& (0+255),w,b
  2152  00F0A8  E03E               	bz	u3670
  2153                           ; BSR set to: ?
  2154  00F0AA  C226  F231         	movff	??_eval_poly,?___ftmul+3
  2155  00F0AE  C227  F232         	movff	??_eval_poly+1,?___ftmul+4
  2156  00F0B2  C228  F233         	movff	??_eval_poly+2,?___ftmul+5
  2157  00F0B6  C21F  F22E         	movff	?_eval_poly,?___ftmul
  2158  00F0BA  C220  F22F         	movff	?_eval_poly+1,?___ftmul+1
  2159  00F0BE  C221  F230         	movff	?_eval_poly+2,?___ftmul+2
  2160  00F0C2  EC9A  F078         	call	___ftmul	;wreg free
  2161  00F0C6  C22E  F22E         	movff	?___ftmul,?___ftadd
  2162  00F0CA  C22F  F22F         	movff	?___ftmul+1,?___ftadd+1
  2163  00F0CE  C230  F230         	movff	?___ftmul+2,?___ftadd+2
  2164  00F0D2  0102               	movlb	2	; () banked
  2165  00F0D4  0724               	decf	(?_eval_poly+5)& (0+255),f,b
  2166  00F0D6  A0D8               	btfss	status,0,c
  2167  00F0D8  0725               	decf	(?_eval_poly+6)& (0+255),f,b
  2168  00F0DA  5124               	movf	(?_eval_poly+5)& (0+255),w,b
  2169  00F0DC  0D03               	mullw	3
  2170  00F0DE  50F3               	movf	prodl,w,c
  2171  00F0E0  2522               	addwf	(?_eval_poly+3)& (0+255),w,b
  2172  00F0E2  6F29               	movwf	(??_eval_poly+3)& (0+255),b
  2173  00F0E4  6AE8               	clrf	wreg,c
  2174  00F0E6  BEF3               	btfsc	prodl,7,c
  2175  00F0E8  68E8               	setf	wreg,c
  2176  00F0EA  2123               	addwfc	(?_eval_poly+4)& (0+255),w,b
  2177  00F0EC  6F2A               	movwf	(??_eval_poly+4)& (0+255),b
  2178  00F0EE  C229  FFF6         	movff	??_eval_poly+3,tblptrl
  2179  00F0F2  C22A  FFF7         	movff	??_eval_poly+4,tblptrh
  2180  00F0F6  0009               	tblrd		*+
  2181  00F0F8  CFF5 F22B          	movff	tablat,??_eval_poly+5
  2182  00F0FC  0009               	tblrd		*+
  2183  00F0FE  CFF5 F22C          	movff	tablat,??_eval_poly+6
  2184  00F102  0009               	tblrd		*+
  2185  00F104  CFF5 F22D          	movff	tablat,??_eval_poly+7
  2186  00F108  C22B  F231         	movff	??_eval_poly+5,?___ftadd+3
  2187  00F10C  C22C  F232         	movff	??_eval_poly+6,?___ftadd+4
  2188  00F110  C22D  F233         	movff	??_eval_poly+7,?___ftadd+5
  2189  00F114  EC98  F07A         	call	___ftadd	;wreg free
  2190  00F118  C22E  F226         	movff	?___ftadd,??_eval_poly
  2191  00F11C  C22F  F227         	movff	?___ftadd+1,??_eval_poly+1
  2192  00F120  C230  F228         	movff	?___ftadd+2,??_eval_poly+2
  2193  00F124  D7BE               	goto	l591
  2194  00F126                     u3670:
  2195                           ; BSR set to: ?
  2196  00F126  C226  F21F         	movff	??_eval_poly,?_eval_poly
  2197  00F12A  C227  F220         	movff	??_eval_poly+1,?_eval_poly+1
  2198  00F12E  C228  F221         	movff	??_eval_poly+2,?_eval_poly+2
  2199  00F132  0012               	return	
  2200                           ; BSR set to: ?
  2201  00F134                     __end_of_eval_poly:
  2202                           	opt stack 0
  2203                           
  2204                           	psect	text10
  2205                           ; =============== function _eval_poly ends =====
      +                          =======
  2206                           ; *************** function _putch **************
      +                          ***
  2207                           ; Defined at:
  2208                           ;		line 7 in file "C:\Documents and Settings\Adm
      +                          inistrator\Belgelerim\H-tech\FFT\Radix2\universa
      +                          l_usart.c"
  2209                           ; Parameters:
  2210                           ;		byte           size:   1offs:   0	type: unsig
      +                          ned char 
  2211                           ; Auto variables:
  2212                           ;		None
  2213                           ; Return value:
  2214                           ;		type: void 
  2215                           ;		size: 0
  2216                           ; Registers used:
  2217                           ;		None
  2218                           ; Tracked objects:
  2219                           ;		On entry : 0/0
  2220                           ;		On exit  : 0/0
  2221                           ;		Unchanged: 0/0
  2222                           ; Data sizes:
  2223                           ;		Autos:    0
  2224                           ;		Params:   1
  2225                           ;		Temp:     0
  2226                           ;		Total:    1
  2227                           ; This function calls:
  2228                           ;		Nothing
  2229                           ; This function is called by:
  2230                           ;		_printf
  2231                           ; This function uses a non-reentrant model
  2232                           ; 
  2233  000000                     
  2234                           ;universal_usart.c: 5: void
  2235                           ;universal_usart.c: 6: putch(unsigned char byte)
  2236                           ;universal_usart.c: 7: {
  2237  00E9D6                     _putch:
  2238                           	opt stack 29
  2239                           ; BSR set to: ?
  2240  00E9D6                     l123:
  2241                           ; BSR set to: ?
  2242                           ;universal_usart.c: 10: continue;
  2243                           ; BSR set to: ?
  2244  00E9D6  A89E               	btfss	3998,4,c	;volatile
  2245  00E9D8  D7FE               	goto	l123
  2246                           ; BSR set to: ?
  2247                           ;universal_usart.c: 11: TXREG = byte;
  2248  00E9DA  C21B  FFAD         	movff	?_putch,4013	;volatile
  2249                           ;universal_usart.c: 12: }
  2250                           ; BSR set to: ?
  2251  00E9DE  0012               	return	
  2252  00E9E0                     __end_of_putch:
  2253                           	opt stack 0
  2254                           
  2255                           	psect	text11
  2256                           ; =============== function _putch ends =========
      +                          ===
  2257                           ; *************** function ___lwdiv ************
      +                          *****
  2258                           ; Defined at:
  2259                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\lwdiv.c"
  2260                           ; Parameters:
  2261                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  2262                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  2263                           ; Auto variables:
  2264                           ;		counter     	       	type: unsigned char 
  2265                           ;		quotient    	       	type: unsigned int 
  2266                           ; Return value:
  2267                           ;		type: unsigned int 
  2268                           ;		size: 2
  2269                           ; Registers used:
  2270                           ;		wreg, status,2, status,0
  2271                           ; Tracked objects:
  2272                           ;		On entry : 0/0
  2273                           ;		On exit  : 0/0
  2274                           ;		Unchanged: 0/0
  2275                           ; Data sizes:
  2276                           ;		Autos:    3
  2277                           ;		Params:   4
  2278                           ;		Temp:     1
  2279                           ;		Total:    8
  2280                           ; This function calls:
  2281                           ;		Nothing
  2282                           ; This function is called by:
  2283                           ;		_printf
  2284                           ; This function uses a non-reentrant model
  2285                           ; 
  2286  000000                     
  2287  00EB84                     ___lwdiv:
  2288                           	opt stack 29
  2289                           ; BSR set to: ?
  2290  00EB84  0102               	movlb	2	; () banked
  2291  00EB86  6B20               	clrf	(??___lwdiv+1)& (0+255),b
  2292  00EB88  6B21               	clrf	(??___lwdiv+2)& (0+255),b
  2293  00EB8A  511E               	movf	(?___lwdiv+3)& (0+255),w,b
  2294  00EB8C  111D               	iorwf	(?___lwdiv+2)& (0+255),w,b
  2295  00EB8E  E021               	bz	l507
  2296  00EB90  6F22               	movwf	(??___lwdiv+3)& (0+255),b
  2297  00EB92  0E01               	movlw	1
  2298  00EB94  6F1F               	movwf	??___lwdiv& (0+255),b
  2299  00EB96  5122               	movf	(??___lwdiv+3)& (0+255),w,b
  2300  00EB98                     l508:
  2301                           ; BSR set to: ?
  2302  00EB98  0102               	movlb	2	; () banked
  2303  00EB9A  BF1E               	btfsc	(?___lwdiv+3)& (0+255),7,b
  2304  00EB9C  D006               	goto	l513
  2305                           ; BSR set to: ?
  2306  00EB9E  90D8               	bcf	status,0,c
  2307  00EBA0  0102               	movlb	2	; () banked
  2308  00EBA2  371D               	rlcf	(?___lwdiv+2)& (0+255),f,b
  2309  00EBA4  371E               	rlcf	(?___lwdiv+3)& (0+255),f,b
  2310  00EBA6  2B1F               	incf	??___lwdiv& (0+255),f,b
  2311  00EBA8  D7F7               	goto	l508
  2312                           ; BSR set to: ?
  2313  00EBAA                     l513:
  2314                           ; BSR set to: ?
  2315  00EBAA  90D8               	bcf	status,0,c
  2316  00EBAC  0102               	movlb	2	; () banked
  2317  00EBAE  3720               	rlcf	(??___lwdiv+1)& (0+255),f,b
  2318  00EBB0  3721               	rlcf	(??___lwdiv+2)& (0+255),f,b
  2319  00EBB2  511D               	movf	(?___lwdiv+2)& (0+255),w,b
  2320  00EBB4  5D1B               	subwf	?___lwdiv& (0+255),w,b
  2321  00EBB6  511E               	movf	(?___lwdiv+3)& (0+255),w,b
  2322  00EBB8  591C               	subwfb	(?___lwdiv+1)& (0+255),w,b
  2323  00EBBA  E305               	bnc	l514
  2324  00EBBC  511D               	movf	(?___lwdiv+2)& (0+255),w,b
  2325  00EBBE  5F1B               	subwf	?___lwdiv& (0+255),f,b
  2326  00EBC0  511E               	movf	(?___lwdiv+3)& (0+255),w,b
  2327  00EBC2  5B1C               	subwfb	(?___lwdiv+1)& (0+255),f,b
  2328  00EBC4  8120               	bsf	(??___lwdiv+1)& (0+255),0,b
  2329  00EBC6                     l514:
  2330                           ; BSR set to: ?
  2331  00EBC6  90D8               	bcf	status,0,c
  2332  00EBC8  0102               	movlb	2	; () banked
  2333  00EBCA  331E               	rrcf	(?___lwdiv+3)& (0+255),f,b
  2334  00EBCC  331D               	rrcf	(?___lwdiv+2)& (0+255),f,b
  2335  00EBCE  2F1F               	decfsz	??___lwdiv& (0+255),f,b
  2336  00EBD0  D7EC               	goto	l513
  2337                           ; BSR set to: ?
  2338  00EBD2                     l507:
  2339                           ; BSR set to: ?
  2340  00EBD2  C220  F21B         	movff	??___lwdiv+1,?___lwdiv
  2341  00EBD6  C221  F21C         	movff	??___lwdiv+2,?___lwdiv+1
  2342  00EBDA  0012               	return	
  2343                           ; BSR set to: ?
  2344  00EBDC                     __end_of___lwdiv:
  2345                           	opt stack 0
  2346                           
  2347                           	psect	text12
  2348                           ; =============== function ___lwdiv ends =======
      +                          =====
  2349                           ; *************** function ___lwmod ************
      +                          *****
  2350                           ; Defined at:
  2351                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\lwmod.c"
  2352                           ; Parameters:
  2353                           ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
  2354                           ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
  2355                           ; Auto variables:
  2356                           ;		counter     	       	type: unsigned char 
  2357                           ; Return value:
  2358                           ;		type: unsigned int 
  2359                           ;		size: 2
  2360                           ; Registers used:
  2361                           ;		wreg, status,2, status,0
  2362                           ; Tracked objects:
  2363                           ;		On entry : 0/0
  2364                           ;		On exit  : 0/0
  2365                           ;		Unchanged: 0/0
  2366                           ; Data sizes:
  2367                           ;		Autos:    1
  2368                           ;		Params:   4
  2369                           ;		Temp:     1
  2370                           ;		Total:    6
  2371                           ; This function calls:
  2372                           ; This function is called by:
  2373                           ;		_printf
  2374                           ; This function uses a non-reentrant model
  2375                           ; 
  2376  000000                     
  2377  00EAEC                     ___lwmod:
  2378                           	opt stack 29
  2379                           ; BSR set to: ?
  2380  00EAEC  0102               	movlb	2	; () banked
  2381  00EAEE  511E               	movf	(?___lwmod+3)& (0+255),w,b
  2382  00EAF0  111D               	iorwf	(?___lwmod+2)& (0+255),w,b
  2383  00EAF2  E01D               	bz	l516
  2384  00EAF4  6F20               	movwf	(??___lwmod+1)& (0+255),b
  2385  00EAF6  0E01               	movlw	1
  2386  00EAF8  6F1F               	movwf	??___lwmod& (0+255),b
  2387  00EAFA  5120               	movf	(??___lwmod+1)& (0+255),w,b
  2388  00EAFC                     l517:
  2389                           ; BSR set to: ?
  2390  00EAFC  0102               	movlb	2	; () banked
  2391  00EAFE  BF1E               	btfsc	(?___lwmod+3)& (0+255),7,b
  2392  00EB00  D006               	goto	l522
  2393                           ; BSR set to: ?
  2394  00EB02  90D8               	bcf	status,0,c
  2395  00EB04  0102               	movlb	2	; () banked
  2396  00EB06  371D               	rlcf	(?___lwmod+2)& (0+255),f,b
  2397  00EB08  371E               	rlcf	(?___lwmod+3)& (0+255),f,b
  2398  00EB0A  2B1F               	incf	??___lwmod& (0+255),f,b
  2399  00EB0C  D7F7               	goto	l517
  2400                           ; BSR set to: ?
  2401  00EB0E                     l522:
  2402                           ; BSR set to: ?
  2403  00EB0E  0102               	movlb	2	; () banked
  2404  00EB10  511D               	movf	(?___lwmod+2)& (0+255),w,b
  2405  00EB12  5D1B               	subwf	?___lwmod& (0+255),w,b
  2406  00EB14  511E               	movf	(?___lwmod+3)& (0+255),w,b
  2407  00EB16  591C               	subwfb	(?___lwmod+1)& (0+255),w,b
  2408  00EB18  E304               	bnc	l523
  2409  00EB1A  511D               	movf	(?___lwmod+2)& (0+255),w,b
  2410  00EB1C  5F1B               	subwf	?___lwmod& (0+255),f,b
  2411  00EB1E  511E               	movf	(?___lwmod+3)& (0+255),w,b
  2412  00EB20  5B1C               	subwfb	(?___lwmod+1)& (0+255),f,b
  2413  00EB22                     l523:
  2414                           ; BSR set to: ?
  2415  00EB22  90D8               	bcf	status,0,c
  2416  00EB24  0102               	movlb	2	; () banked
  2417  00EB26  331E               	rrcf	(?___lwmod+3)& (0+255),f,b
  2418  00EB28  331D               	rrcf	(?___lwmod+2)& (0+255),f,b
  2419  00EB2A  2F1F               	decfsz	??___lwmod& (0+255),f,b
  2420  00EB2C  D7F0               	goto	l522
  2421                           ; BSR set to: ?
  2422  00EB2E                     l516:
  2423                           ; BSR set to: ?
  2424  00EB2E  0012               	return	
  2425                           ; BSR set to: ?
  2426  00EB30                     __end_of___lwmod:
  2427                           	opt stack 0
  2428                           
  2429                           	psect	text13
  2430                           ; =============== function ___lwmod ends =======
      +                          =====
  2431                           ; *************** function ___lmul *************
      +                          ****
  2432                           ; Defined at:
  2433                           ;		line 3 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\lmul.c"
  2434                           ; Parameters:
  2435                           ;		multiplier     size:   4offs:   0	type: unsig
      +                          ned long 
  2436                           ;		multiplicand   size:   4offs:   4	type: unsig
      +                          ned long 
  2437                           ; Auto variables:
  2438                           ;		product     	       	type: unsigned long 
  2439                           ; Return value:
  2440                           ;		type: unsigned long 
  2441                           ;		size: 4
  2442                           ; Registers used:
  2443                           ;		wreg, status,2, status,0
  2444                           ; Tracked objects:
  2445                           ;		On entry : 0/0
  2446                           ;		On exit  : 0/0
  2447                           ;		Unchanged: 0/0
  2448                           ; Data sizes:
  2449                           ;		Autos:    4
  2450                           ;		Params:   8
  2451                           ;		Temp:     0
  2452                           ;		Total:   12
  2453                           ; This function calls:
  2454                           ;		Nothing
  2455                           ; This function is called by:
  2456                           ;		_Radix2Fft
  2457                           ; This function uses a non-reentrant model
  2458                           ; 
  2459  000000                     
  2460  00EB30                     ___lmul:
  2461                           	opt stack 29
  2462                           ; BSR set to: ?
  2463  00EB30  0102               	movlb	2	; () banked
  2464  00EB32  6B20               	clrf	??___lmul& (0+255),b
  2465  00EB34  6B21               	clrf	(??___lmul+1)& (0+255),b
  2466  00EB36  6B22               	clrf	(??___lmul+2)& (0+255),b
  2467  00EB38  6B23               	clrf	(??___lmul+3)& (0+255),b
  2468  00EB3A                     l503:
  2469                           ; BSR set to: ?
  2470  00EB3A  0102               	movlb	2	; () banked
  2471  00EB3C  A118               	btfss	?___lmul& (0+255),0,b
  2472  00EB3E  D009               	goto	l504
  2473  00EB40  0102               	movlb	2	; () banked
  2474  00EB42  511C               	movf	(?___lmul+4)& (0+255),w,b
  2475  00EB44  2720               	addwf	??___lmul& (0+255),f,b
  2476  00EB46  511D               	movf	(?___lmul+5)& (0+255),w,b
  2477  00EB48  2321               	addwfc	(??___lmul+1)& (0+255),f,b
  2478  00EB4A  511E               	movf	(?___lmul+6)& (0+255),w,b
  2479  00EB4C  2322               	addwfc	(??___lmul+2)& (0+255),f,b
  2480  00EB4E  511F               	movf	(?___lmul+7)& (0+255),w,b
  2481  00EB50  2323               	addwfc	(??___lmul+3)& (0+255),f,b
  2482  00EB52                     l504:
  2483                           ; BSR set to: ?
  2484  00EB52  90D8               	bcf	status,0,c
  2485  00EB54  0102               	movlb	2	; () banked
  2486  00EB56  371C               	rlcf	(?___lmul+4)& (0+255),f,b
  2487  00EB58  371D               	rlcf	(?___lmul+5)& (0+255),f,b
  2488  00EB5A  371E               	rlcf	(?___lmul+6)& (0+255),f,b
  2489  00EB5C  371F               	rlcf	(?___lmul+7)& (0+255),f,b
  2490  00EB5E  90D8               	bcf	status,0,c
  2491  00EB60  331B               	rrcf	(?___lmul+3)& (0+255),f,b
  2492  00EB62  331A               	rrcf	(?___lmul+2)& (0+255),f,b
  2493  00EB64  3319               	rrcf	(?___lmul+1)& (0+255),f,b
  2494  00EB66  3318               	rrcf	?___lmul& (0+255),f,b
  2495  00EB68  511B               	movf	(?___lmul+3)& (0+255),w,b
  2496  00EB6A  1118               	iorwf	?___lmul& (0+255),w,b
  2497  00EB6C  1119               	iorwf	(?___lmul+1)& (0+255),w,b
  2498  00EB6E  111A               	iorwf	(?___lmul+2)& (0+255),w,b
  2499  00EB70  E1E4               	bnz	l503
  2500                           ; BSR set to: ?
  2501  00EB72  C220  F218         	movff	??___lmul,?___lmul
  2502  00EB76  C221  F219         	movff	??___lmul+1,?___lmul+1
  2503  00EB7A  C222  F21A         	movff	??___lmul+2,?___lmul+2
  2504  00EB7E  C223  F21B         	movff	??___lmul+3,?___lmul+3
  2505  00EB82  0012               	return	
  2506                           ; BSR set to: ?
  2507  00EB84                     __end_of___lmul:
  2508                           	opt stack 0
  2509                           
  2510                           	psect	text14
  2511                           ; =============== function ___lmul ends ========
      +                          ====
  2512                           ; *************** function _floor **************
      +                          ***
  2513                           ; Defined at:
  2514                           ;		line 14 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\floor.c"
  2515                           ; Parameters:
  2516                           ;		x              size:   3offs:   0	type: unsig
      +                          ned long 
  2517                           ; Auto variables:
  2518                           ;		expon       	       	type: int 
  2519                           ;		i           	       	type: int 
  2520                           ; Return value:
  2521                           ;		type: int 
  2522                           ;		size: 3
  2523                           ; Registers used:
  2524                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  2525                           ; Tracked objects:
  2526                           ;		On entry : 0/0
  2527                           ;		On exit  : 0/0
  2528                           ;		Unchanged: 0/0
  2529                           ; Data sizes:
  2530                           ;		Autos:    5
  2531                           ;		Params:   3
  2532                           ;		Temp:     0
  2533                           ;		Total:    8
  2534                           ; This function calls:
  2535                           ;		_frexp
  2536                           ;		___fttol
  2537                           ;		___altoft
  2538                           ;		___ftge
  2539                           ;		___ftadd
  2540                           ; This function is called by:
  2541                           ;		_sin
  2542                           ; This function uses a non-reentrant model
  2543                           ; 
  2544  000000                     
  2545  00F214                     _floor:
  2546                           	opt stack 29
  2547                           ; BSR set to: ?
  2548  00F214  0E22               	movlw	low ??_floor
  2549  00F216  0102               	movlb	2	; () banked
  2550  00F218  6F2A               	movwf	(?_frexp+3)& (0+255),b
  2551  00F21A  0E02               	movlw	high ??_floor
  2552  00F21C  6F2B               	movwf	(?_frexp+4)& (0+255),b
  2553  00F21E  C21F  F227         	movff	?_floor,?_frexp
  2554  00F222  C220  F228         	movff	?_floor+1,?_frexp+1
  2555  00F226  C221  F229         	movff	?_floor+2,?_frexp+2
  2556  00F22A  EC1E  F076         	call	_frexp	;wreg free
  2557  00F22E  0102               	movlb	2	; () banked
  2558  00F230  AF23               	btfss	(??_floor+1)& (0+255),7,b
  2559  00F232  D017               	goto	l595
  2560  00F234  0102               	movlb	2	; () banked
  2561  00F236  5121               	movf	(?_floor+2)& (0+255),w,b
  2562  00F238  0A80               	xorlw	128
  2563  00F23A  0F80               	addlw	128
  2564  00F23C  E105               	bnz	u3765
  2565  00F23E  0E00               	movlw	0
  2566  00F240  5D20               	subwf	(?_floor+1)& (0+255),w,b
  2567  00F242  E102               	bnz	u3765
  2568  00F244  0E00               	movlw	0
  2569  00F246  5D1F               	subwf	?_floor& (0+255),w,b
  2570  00F248                     u3765:
  2571  00F248  E207               	bc	l596
  2572  00F24A  0102               	movlb	2	; () banked
  2573  00F24C  6B1F               	clrf	?_floor& (0+255),b
  2574  00F24E  0E80               	movlw	128
  2575  00F250  6F20               	movwf	(?_floor+1)& (0+255),b
  2576  00F252  0EBF               	movlw	191
  2577  00F254  6F21               	movwf	(?_floor+2)& (0+255),b
  2578  00F256  0CBF               	retlw	191
  2579  00F258                     l596:
  2580                           ; BSR set to: ?
  2581  00F258  0102               	movlb	2	; () banked
  2582  00F25A  6B1F               	clrf	?_floor& (0+255),b
  2583  00F25C  6B20               	clrf	(?_floor+1)& (0+255),b
  2584  00F25E  6B21               	clrf	(?_floor+2)& (0+255),b
  2585  00F260  0C00               	retlw	0
  2586  00F262                     l595:
  2587                           ; BSR set to: ?
  2588  00F262  0E15               	movlw	21
  2589  00F264  0102               	movlb	2	; () banked
  2590  00F266  5D22               	subwf	??_floor& (0+255),w,b
  2591  00F268  0E00               	movlw	0
  2592  00F26A  5923               	subwfb	(??_floor+1)& (0+255),w,b
  2593  00F26C  E301               	bnc	l597
  2594  00F26E  0012               	return	
  2595  00F270                     l597:
  2596                           ; BSR set to: ?
  2597  00F270  C21F  F227         	movff	?_floor,?___fttol
  2598  00F274  C220  F228         	movff	?_floor+1,?___fttol+1
  2599  00F278  C221  F229         	movff	?_floor+2,?___fttol+2
  2600  00F27C  EC20  F077         	call	___fttol	;wreg free
  2601  00F280  C227  F227         	movff	?___fttol,?___altoft
  2602  00F284  C228  F228         	movff	?___fttol+1,?___altoft+1
  2603  00F288  C229  F229         	movff	?___fttol+2,?___altoft+2
  2604  00F28C  C22A  F22A         	movff	?___fttol+3,?___altoft+3
  2605  00F290  EC72  F077         	call	___altoft	;wreg free
  2606  00F294  C227  F224         	movff	?___altoft,??_floor+2
  2607  00F298  C228  F225         	movff	?___altoft+1,??_floor+3
  2608  00F29C  C229  F226         	movff	?___altoft+2,??_floor+4
  2609  00F2A0  C224  F22A         	movff	??_floor+2,?___ftge+3
  2610  00F2A4  C225  F22B         	movff	??_floor+3,?___ftge+4
  2611  00F2A8  C226  F22C         	movff	??_floor+4,?___ftge+5
  2612  00F2AC  C21F  F227         	movff	?_floor,?___ftge
  2613  00F2B0  C220  F228         	movff	?_floor+1,?___ftge+1
  2614  00F2B4  C221  F229         	movff	?_floor+2,?___ftge+2
  2615  00F2B8  ECEE  F075         	call	___ftge	;wreg free
  2616  00F2BC  E215               	bc	l598
  2617  00F2BE  0102               	movlb	2	; () banked
  2618  00F2C0  6B31               	clrf	(?___ftadd+3)& (0+255),b
  2619  00F2C2  0E80               	movlw	128
  2620  00F2C4  6F32               	movwf	(?___ftadd+4)& (0+255),b
  2621  00F2C6  0EBF               	movlw	191
  2622  00F2C8  6F33               	movwf	(?___ftadd+5)& (0+255),b
  2623  00F2CA  C224  F22E         	movff	??_floor+2,?___ftadd
  2624  00F2CE  C225  F22F         	movff	??_floor+3,?___ftadd+1
  2625  00F2D2  C226  F230         	movff	??_floor+4,?___ftadd+2
  2626  00F2D6  EC98  F07A         	call	___ftadd	;wreg free
  2627  00F2DA  C22E  F21F         	movff	?___ftadd,?_floor
  2628  00F2DE  C22F  F220         	movff	?___ftadd+1,?_floor+1
  2629  00F2E2  C230  F221         	movff	?___ftadd+2,?_floor+2
  2630  00F2E6  0012               	return	
  2631  00F2E8                     l598:
  2632                           ; BSR set to: ?
  2633  00F2E8  C224  F21F         	movff	??_floor+2,?_floor
  2634  00F2EC  C225  F220         	movff	??_floor+3,?_floor+1
  2635  00F2F0  C226  F221         	movff	??_floor+4,?_floor+2
  2636  00F2F4  0012               	return	
  2637                           ; BSR set to: ?
  2638  00F2F6                     __end_of_floor:
  2639                           	opt stack 0
  2640                           
  2641                           	psect	text15
  2642                           ; =============== function _floor ends =========
      +                          ===
  2643                           ; *************** function ___asftmul **********
      +                          *******
  2644                           ; Defined at:
  2645                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\asftmul.c"
  2646                           ; Parameters:
  2647                           ;		f1p            size:   2offs:   0	type: PTR f
      +                          loat ; Largest target is 3
  2648                           ;		 -> sin@f(3), 
  2649                           ;		f2             size:   3offs:   2	type: float
      +                           
  2650                           ; Auto variables:
  2651                           ;		None
  2652                           ; Return value:
  2653                           ;		type: float 
  2654                           ;		size: 3
  2655                           ; Registers used:
  2656                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  2657                           ; Tracked objects:
  2658                           ;		On entry : 0/0
  2659                           ;		On exit  : 0/0
  2660                           ;		Unchanged: 0/0
  2661                           ; Data sizes:
  2662                           ;		Autos:    0
  2663                           ;		Params:   5
  2664                           ;		Temp:     0
  2665                           ;		Total:    5
  2666                           ; This function calls:
  2667                           ;		___ftmul
  2668                           ; This function is called by:
  2669                           ;		_sin
  2670                           ; This function uses a non-reentrant model
  2671                           ; 
  2672  000000                     
  2673  00EA74                     ___asftmul:
  2674                           	opt stack 29
  2675                           ; BSR set to: ?
  2676  00EA74  C221  F231         	movff	?___asftmul+2,?___ftmul+3
  2677  00EA78  C222  F232         	movff	?___asftmul+3,?___ftmul+4
  2678  00EA7C  C223  F233         	movff	?___asftmul+4,?___ftmul+5
  2679  00EA80  C21F  FFE9         	movff	?___asftmul,fsr0l
  2680  00EA84  C220  FFEA         	movff	?___asftmul+1,fsr0h
  2681  00EA88  CFEE F22E          	movff	postinc0,?___ftmul
  2682  00EA8C  CFEE F22F          	movff	postinc0,?___ftmul+1
  2683  00EA90  0102               	movlb	2	; () banked
  2684  00EA92  CFED F230          	movff	postdec0,?___ftmul+2
  2685  00EA96  EC9A  F078         	call	___ftmul	;wreg free
  2686  00EA9A  C21F  FFE9         	movff	?___asftmul,fsr0l
  2687  00EA9E  C220  FFEA         	movff	?___asftmul+1,fsr0h
  2688  00EAA2  C22E  FFEE         	movff	?___ftmul,postinc0
  2689  00EAA6  C22F  FFEE         	movff	?___ftmul+1,postinc0
  2690  00EAAA  C230  FFED         	movff	?___ftmul+2,postdec0
  2691  00EAAE  0012               	return	
  2692                           ; BSR set to: ?
  2693  00EAB0                     __end_of___asftmul:
  2694                           	opt stack 0
  2695                           
  2696                           	psect	text16
  2697                           ; =============== function ___asftmul ends =====
      +                          =======
  2698                           ; *************** function ___wmul *************
      +                          ****
  2699                           ; Defined at:
  2700                           ;		line 3 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\wmul.c"
  2701                           ; Parameters:
  2702                           ;		multiplier     size:   2offs:   0	type: unsig
      +                          ned int 
  2703                           ;		multiplicand   size:   2offs:   2	type: unsig
      +                          ned int 
  2704                           ; Auto variables:
  2705                           ;		product     	       	type: unsigned int 
  2706                           ; Return value:
  2707                           ;		type: unsigned int 
  2708                           ;		size: 2
  2709                           ; Registers used:
  2710                           ;		wreg, status,2, status,0
  2711                           ; Tracked objects:
  2712                           ;		On entry : 0/0
  2713                           ;		On exit  : 0/0
  2714                           ;		Unchanged: 0/0
  2715                           ; Data sizes:
  2716                           ;		Autos:    2
  2717                           ;		Params:   4
  2718                           ;		Temp:     0
  2719                           ;		Total:    6
  2720                           ; This function calls:
  2721                           ;		Nothing
  2722                           ; This function is called by:
  2723                           ;		_eval_poly
  2724                           ; This function uses a non-reentrant model
  2725                           ; 
  2726  000000                     
  2727  00EA40                     ___wmul:
  2728                           	opt stack 28
  2729                           ; BSR set to: ?
  2730  00EA40  0102               	movlb	2	; () banked
  2731  00EA42  6B32               	clrf	??___wmul& (0+255),b
  2732  00EA44  6B33               	clrf	(??___wmul+1)& (0+255),b
  2733  00EA46                     l531:
  2734                           ; BSR set to: ?
  2735  00EA46  0102               	movlb	2	; () banked
  2736  00EA48  A12E               	btfss	?___wmul& (0+255),0,b
  2737  00EA4A  D005               	goto	l532
  2738  00EA4C  0102               	movlb	2	; () banked
  2739  00EA4E  5130               	movf	(?___wmul+2)& (0+255),w,b
  2740  00EA50  2732               	addwf	??___wmul& (0+255),f,b
  2741  00EA52  5131               	movf	(?___wmul+3)& (0+255),w,b
  2742  00EA54  2333               	addwfc	(??___wmul+1)& (0+255),f,b
  2743  00EA56                     l532:
  2744                           ; BSR set to: ?
  2745  00EA56  90D8               	bcf	status,0,c
  2746  00EA58  0102               	movlb	2	; () banked
  2747  00EA5A  3730               	rlcf	(?___wmul+2)& (0+255),f,b
  2748  00EA5C  3731               	rlcf	(?___wmul+3)& (0+255),f,b
  2749  00EA5E  90D8               	bcf	status,0,c
  2750  00EA60  332F               	rrcf	(?___wmul+1)& (0+255),f,b
  2751  00EA62  332E               	rrcf	?___wmul& (0+255),f,b
  2752  00EA64  512F               	movf	(?___wmul+1)& (0+255),w,b
  2753  00EA66  112E               	iorwf	?___wmul& (0+255),w,b
  2754  00EA68  E1EE               	bnz	l531
  2755                           ; BSR set to: ?
  2756  00EA6A  C232  F22E         	movff	??___wmul,?___wmul
  2757  00EA6E  C233  F22F         	movff	??___wmul+1,?___wmul+1
  2758  00EA72  0012               	return	
  2759                           ; BSR set to: ?
  2760  00EA74                     __end_of___wmul:
  2761                           	opt stack 0
  2762                           
  2763                           	psect	text17
  2764                           ; =============== function ___wmul ends ========
      +                          ====
  2765                           ; *************** function ___fttol ************
      +                          *****
  2766                           ; Defined at:
  2767                           ;		line 16 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\fttol.c"
  2768                           ; Parameters:
  2769                           ;		f1             size:   3offs:   0	type: float
      +                           
  2770                           ; Auto variables:
  2771                           ;		sign1       	       	type: unsigned char 
  2772                           ;		exp1        	       	type: unsigned char 
  2773                           ;		lval        	       	type: unsigned long 
  2774                           ; Return value:
  2775                           ;		type: long 
  2776                           ;		size: 4
  2777                           ; Registers used:
  2778                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  2779                           ; Tracked objects:
  2780                           ;		On entry : 0/0
  2781                           ;		On exit  : 0/0
  2782                           ;		Unchanged: 0/0
  2783                           ; Data sizes:
  2784                           ;		Autos:    6
  2785                           ;		Params:   4
  2786                           ;		Temp:     0
  2787                           ;		Total:   10
  2788                           ; This function calls:
  2789                           ;		___ftunpack
  2790                           ; This function is called by:
  2791                           ;		_main
  2792                           ;		_floor
  2793                           ; This function uses a non-reentrant model
  2794                           ; 
  2795  000000                     
  2796  00EE40                     ___fttol:
  2797                           	opt stack 28
  2798                           ; BSR set to: ?
  2799  00EE40  0E2C               	movlw	low (??___fttol+1)
  2800  00EE42  0102               	movlb	2	; () banked
  2801  00EE44  6F3D               	movwf	(?___ftunpack+2)& (0+255),b
  2802  00EE46  0E02               	movlw	high (??___fttol+1)
  2803  00EE48  6F3E               	movwf	(?___ftunpack+3)& (0+255),b
  2804  00EE4A  0E27               	movlw	low ?___fttol
  2805  00EE4C  6F3B               	movwf	?___ftunpack& (0+255),b
  2806  00EE4E  0E02               	movlw	high ?___fttol
  2807  00EE50  6F3C               	movwf	(?___ftunpack+1)& (0+255),b
  2808  00EE52  EC96  F076         	call	___ftunpack	;wreg free
  2809  00EE56  0102               	movlb	2	; () banked
  2810  00EE58  6F2B               	movwf	??___fttol& (0+255),b
  2811  00EE5A  5127               	movf	?___fttol& (0+255),w,b
  2812  00EE5C  6F2D               	movwf	(??___fttol+2)& (0+255),b
  2813  00EE5E  5128               	movf	(?___fttol+1)& (0+255),w,b
  2814  00EE60  6F2E               	movwf	(??___fttol+3)& (0+255),b
  2815  00EE62  5129               	movf	(?___fttol+2)& (0+255),w,b
  2816  00EE64  6F2F               	movwf	(??___fttol+4)& (0+255),b
  2817  00EE66  6B30               	clrf	(??___fttol+5)& (0+255),b
  2818  00EE68  0E8E               	movlw	142
  2819  00EE6A  5F2C               	subwf	(??___fttol+1)& (0+255),f,b
  2820  00EE6C  AF2C               	btfss	(??___fttol+1)& (0+255),7,b
  2821  00EE6E  D013               	goto	l443
  2822  00EE70  0102               	movlb	2	; () banked
  2823  00EE72  512C               	movf	(??___fttol+1)& (0+255),w,b
  2824  00EE74  0A80               	xorlw	128
  2825  00EE76  0F8F               	addlw	143
  2826  00EE78  E205               	bc	l447
  2827  00EE7A  6B27               	clrf	?___fttol& (0+255),b
  2828  00EE7C  6B28               	clrf	(?___fttol+1)& (0+255),b
  2829  00EE7E  6B29               	clrf	(?___fttol+2)& (0+255),b
  2830  00EE80  6B2A               	clrf	(?___fttol+3)& (0+255),b
  2831  00EE82  0C00               	retlw	0
  2832  00EE84                     l447:
  2833                           ; BSR set to: ?
  2834  00EE84  90D8               	bcf	status,0,c
  2835  00EE86  0102               	movlb	2	; () banked
  2836  00EE88  3330               	rrcf	(??___fttol+5)& (0+255),f,b
  2837  00EE8A  332F               	rrcf	(??___fttol+4)& (0+255),f,b
  2838  00EE8C  332E               	rrcf	(??___fttol+3)& (0+255),f,b
  2839  00EE8E  332D               	rrcf	(??___fttol+2)& (0+255),f,b
  2840  00EE90  3F2C               	incfsz	(??___fttol+1)& (0+255),f,b
  2841  00EE92  D7F8               	goto	l447
  2842                           ; BSR set to: ?
  2843  00EE94  D013               	goto	l448
  2844  00EE96                     l443:
  2845                           ; BSR set to: ?
  2846  00EE96  0E1F               	movlw	31
  2847  00EE98  0102               	movlb	2	; () banked
  2848  00EE9A  652C               	cpfsgt	(??___fttol+1)& (0+255),b
  2849  00EE9C  D00C               	goto	l450
  2850  00EE9E  6B27               	clrf	?___fttol& (0+255),b
  2851  00EEA0  6B28               	clrf	(?___fttol+1)& (0+255),b
  2852  00EEA2  6B29               	clrf	(?___fttol+2)& (0+255),b
  2853  00EEA4  6B2A               	clrf	(?___fttol+3)& (0+255),b
  2854  00EEA6  0C00               	retlw	0
  2855                           ; BSR set to: ?
  2856  00EEA8                     l451:
  2857                           ; BSR set to: ?
  2858  00EEA8  90D8               	bcf	status,0,c
  2859  00EEAA  0102               	movlb	2	; () banked
  2860  00EEAC  372D               	rlcf	(??___fttol+2)& (0+255),f,b
  2861  00EEAE  372E               	rlcf	(??___fttol+3)& (0+255),f,b
  2862  00EEB0  372F               	rlcf	(??___fttol+4)& (0+255),f,b
  2863  00EEB2  3730               	rlcf	(??___fttol+5)& (0+255),f,b
  2864  00EEB4  072C               	decf	(??___fttol+1)& (0+255),f,b
  2865  00EEB6                     l450:
  2866                           ; BSR set to: ?
  2867  00EEB6  0102               	movlb	2	; () banked
  2868  00EEB8  672C               	tstfsz	(??___fttol+1)& (0+255),b
  2869  00EEBA  D7F6               	goto	l451
  2870                           ; BSR set to: ?
  2871  00EEBC                     l448:
  2872                           ; BSR set to: ?
  2873  00EEBC  0102               	movlb	2	; () banked
  2874  00EEBE  512B               	movf	??___fttol& (0+255),w,b
  2875  00EEC0  E008               	bz	l453
  2876  00EEC2  1F30               	comf	(??___fttol+5)& (0+255),f,b
  2877  00EEC4  1F2F               	comf	(??___fttol+4)& (0+255),f,b
  2878  00EEC6  1F2E               	comf	(??___fttol+3)& (0+255),f,b
  2879  00EEC8  6D2D               	negf	(??___fttol+2)& (0+255),b
  2880  00EECA  0E00               	movlw	0
  2881  00EECC  232E               	addwfc	(??___fttol+3)& (0+255),f,b
  2882  00EECE  232F               	addwfc	(??___fttol+4)& (0+255),f,b
  2883  00EED0  2330               	addwfc	(??___fttol+5)& (0+255),f,b
  2884  00EED2                     l453:
  2885                           ; BSR set to: ?
  2886  00EED2  C22D  F227         	movff	??___fttol+2,?___fttol
  2887  00EED6  C22E  F228         	movff	??___fttol+3,?___fttol+1
  2888  00EEDA  C22F  F229         	movff	??___fttol+4,?___fttol+2
  2889  00EEDE  C230  F22A         	movff	??___fttol+5,?___fttol+3
  2890  00EEE2  0012               	return	
  2891                           ; BSR set to: ?
  2892  00EEE4                     __end_of___fttol:
  2893                           	opt stack 0
  2894                           
  2895                           	psect	text18
  2896                           ; =============== function ___fttol ends =======
      +                          =====
  2897                           ; *************** function _frexp **************
      +                          ***
  2898                           ; Defined at:
  2899                           ;		line 255 in file "C:\Program Files\HI-TECH So
      +                          ftware\PICC-18\PRO\9.63\sources\frexp.c"
  2900                           ; Parameters:
  2901                           ;		value          size:   3offs:   0	type: long 
  2902                           ;		eptr           size:   2offs:   3	type: PTR i
      +                          nt ; Largest target is 2
  2903                           ;		 -> floor@expon(2), 
  2904                           ; Auto variables:
  2905                           ;		None
  2906                           ; Return value:
  2907                           ;		type: PTR int 
  2908                           ;		size: 3
  2909                           ; Registers used:
  2910                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  2911                           ; Tracked objects:
  2912                           ;		On entry : 0/0
  2913                           ;		On exit  : 0/0
  2914                           ;		Unchanged: 0/0
  2915                           ; Data sizes:
  2916                           ;		Autos:    0
  2917                           ;		Params:   5
  2918                           ;		Temp:     3
  2919                           ;		Total:    8
  2920                           ; This function calls:
  2921                           ;		Nothing
  2922                           ; This function is called by:
  2923                           ;		_floor
  2924                           ; This function uses a non-reentrant model
  2925                           ; 
  2926  000000                     
  2927  00EC3C                     _frexp:
  2928                           	opt stack 28
  2929                           ; BSR set to: ?
  2930  00EC3C  0102               	movlb	2	; () banked
  2931  00EC3E  5127               	movf	?_frexp& (0+255),w,b
  2932  00EC40  1128               	iorwf	(?_frexp+1)& (0+255),w,b
  2933  00EC42  1129               	iorwf	(?_frexp+2)& (0+255),w,b
  2934  00EC44  E107               	bnz	l602
  2935  00EC46  C22A  FFE9         	movff	?_frexp+3,fsr0l
  2936  00EC4A  C22B  FFEA         	movff	?_frexp+4,fsr0h
  2937  00EC4E  6AEE               	clrf	postinc0,c
  2938  00EC50  6AED               	clrf	postdec0,c
  2939  00EC52  0C00               	retlw	0
  2940  00EC54                     l602:
  2941                           ; BSR set to: ?
  2942  00EC54  0102               	movlb	2	; () banked
  2943  00EC56  5129               	movf	(?_frexp+2)& (0+255),w,b
  2944  00EC58  0B7F               	andlw	127
  2945  00EC5A  6F2C               	movwf	??_frexp& (0+255),b
  2946  00EC5C  90D8               	bcf	status,0,c
  2947  00EC5E  352C               	rlcf	??_frexp& (0+255),w,b
  2948  00EC60  6F2D               	movwf	(??_frexp+1)& (0+255),b
  2949  00EC62  6B2E               	clrf	(??_frexp+2)& (0+255),b
  2950  00EC64  372E               	rlcf	(??_frexp+2)& (0+255),f,b
  2951  00EC66  C22A  FFE9         	movff	?_frexp+3,fsr0l
  2952  00EC6A  C22B  FFEA         	movff	?_frexp+4,fsr0h
  2953  00EC6E  C22D  FFEE         	movff	??_frexp+1,postinc0
  2954  00EC72  C22E  FFED         	movff	??_frexp+2,postdec0
  2955  00EC76  3528               	rlcf	(?_frexp+1)& (0+255),w,b
  2956  00EC78  36E8               	rlcf	wreg,f,c
  2957  00EC7A  0B01               	andlw	1
  2958  00EC7C  6F2C               	movwf	??_frexp& (0+255),b
  2959  00EC7E  512C               	movf	??_frexp& (0+255),w,b
  2960  00EC80  C22A  FFE9         	movff	?_frexp+3,fsr0l
  2961  00EC84  C22B  FFEA         	movff	?_frexp+4,fsr0h
  2962  00EC88  12EE               	iorwf	postinc0,f,c
  2963  00EC8A  0E00               	movlw	0
  2964  00EC8C  12ED               	iorwf	postdec0,f,c
  2965  00EC8E  C22A  FFE9         	movff	?_frexp+3,fsr0l
  2966  00EC92  C22B  FFEA         	movff	?_frexp+4,fsr0h
  2967  00EC96  0E82               	movlw	130
  2968  00EC98  26EE               	addwf	postinc0,f,c
  2969  00EC9A  0EFF               	movlw	255
  2970  00EC9C  22ED               	addwfc	postdec0,f,c
  2971  00EC9E  8129               	bsf	(?_frexp+2)& (0+255),0,b
  2972  00ECA0  8329               	bsf	(?_frexp+2)& (0+255),1,b
  2973  00ECA2  8529               	bsf	(?_frexp+2)& (0+255),2,b
  2974  00ECA4  8729               	bsf	(?_frexp+2)& (0+255),3,b
  2975  00ECA6  8929               	bsf	(?_frexp+2)& (0+255),4,b
  2976  00ECA8  8B29               	bsf	(?_frexp+2)& (0+255),5,b
  2977  00ECAA  9D29               	bcf	(?_frexp+2)& (0+255),6,b
  2978  00ECAC  000B               	tblrd		+*
  2979  00ECAE  000E               	tblwt		*-
  2980  00ECB0  9F28               	bcf	(?_frexp+1)& (0+255),7,b
  2981  00ECB2  0CFF               	retlw	255
  2982                           ; BSR set to: ?
  2983  00ECB4                     __end_of_frexp:
  2984                           	opt stack 0
  2985                           
  2986                           	psect	text19
  2987                           ; =============== function _frexp ends =========
      +                          ===
  2988                           ; *************** function ___ftmul ************
      +                          *****
  2989                           ; Defined at:
  2990                           ;		line 18 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\ftmul.c"
  2991                           ; Parameters:
  2992                           ;		f1             size:   3offs:   0	type: float
      +                           
  2993                           ;		f2             size:   3offs:   3	type: float
      +                           
  2994                           ; Auto variables:
  2995                           ;		sign1       	       	type: unsigned char 
  2996                           ;		exp1        	       	type: unsigned char 
  2997                           ;		cntr        	       	type: unsigned char 
  2998                           ;		f3          	       	type: float 
  2999                           ; Return value:
  3000                           ;		type: float 
  3001                           ;		size: 3
  3002                           ; Registers used:
  3003                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  3004                           ; Tracked objects:
  3005                           ;		On entry : 0/0
  3006                           ;		On exit  : 0/0
  3007                           ;		Unchanged: 0/0
  3008                           ; Data sizes:
  3009                           ;		Autos:    6
  3010                           ;		Params:   6
  3011                           ;		Temp:     1
  3012                           ;		Total:   13
  3013                           ; This function calls:
  3014                           ;		___ftunpack
  3015                           ;		___ftpack
  3016                           ; This function is called by:
  3017                           ;		_main
  3018                           ;		_sin
  3019                           ;		___asftmul
  3020                           ;		_eval_poly
  3021                           ; This function uses a non-reentrant model
  3022                           ; 
  3023  000000                     
  3024  00F134                     ___ftmul:
  3025                           	opt stack 28
  3026                           ; BSR set to: ?
  3027  00F134  0102               	movlb	2	; () banked
  3028  00F136  6B37               	clrf	(??___ftmul+3)& (0+255),b
  3029  00F138  6B38               	clrf	(??___ftmul+4)& (0+255),b
  3030  00F13A  6B39               	clrf	(??___ftmul+5)& (0+255),b
  3031  00F13C  0E35               	movlw	low (??___ftmul+1)
  3032  00F13E  6F3D               	movwf	(?___ftunpack+2)& (0+255),b
  3033  00F140  0E02               	movlw	high (??___ftmul+1)
  3034  00F142  6F3E               	movwf	(?___ftunpack+3)& (0+255),b
  3035  00F144  0E2E               	movlw	low ?___ftmul
  3036  00F146  6F3B               	movwf	?___ftunpack& (0+255),b
  3037  00F148  0E02               	movlw	high ?___ftmul
  3038  00F14A  6F3C               	movwf	(?___ftunpack+1)& (0+255),b
  3039  00F14C  EC96  F076         	call	___ftunpack	;wreg free
  3040  00F150  0102               	movlb	2	; () banked
  3041  00F152  6F34               	movwf	??___ftmul& (0+255),b
  3042  00F154  0E36               	movlw	low (??___ftmul+2)
  3043  00F156  6F3D               	movwf	(?___ftunpack+2)& (0+255),b
  3044  00F158  0E02               	movlw	high (??___ftmul+2)
  3045  00F15A  6F3E               	movwf	(?___ftunpack+3)& (0+255),b
  3046  00F15C  0E31               	movlw	low (?___ftmul+3)
  3047  00F15E  6F3B               	movwf	?___ftunpack& (0+255),b
  3048  00F160  0E02               	movlw	high (?___ftmul+3)
  3049  00F162  6F3C               	movwf	(?___ftunpack+1)& (0+255),b
  3050  00F164  EC96  F076         	call	___ftunpack	;wreg free
  3051  00F168  0102               	movlb	2	; () banked
  3052  00F16A  1B34               	xorwf	??___ftmul& (0+255),f,b
  3053  00F16C  5136               	movf	(??___ftmul+2)& (0+255),w,b
  3054  00F16E  E002               	bz	l600000395
  3055  00F170  6735               	tstfsz	(??___ftmul+1)& (0+255),b
  3056  00F172  D007               	goto	l429
  3057  00F174                     l600000395:
  3058                           ; BSR set to: ?
  3059  00F174  C237  F22E         	movff	??___ftmul+3,?___ftmul
  3060  00F178  C238  F22F         	movff	??___ftmul+4,?___ftmul+1
  3061  00F17C  C239  F230         	movff	??___ftmul+5,?___ftmul+2
  3062  00F180  0012               	return	
  3063  00F182                     l429:
  3064                           ; BSR set to: ?
  3065  00F182  0102               	movlb	2	; () banked
  3066  00F184  5136               	movf	(??___ftmul+2)& (0+255),w,b
  3067  00F186  0F7B               	addlw	123
  3068  00F188  2735               	addwf	(??___ftmul+1)& (0+255),f,b
  3069  00F18A  6F3A               	movwf	(??___ftmul+6)& (0+255),b
  3070  00F18C  0E07               	movlw	7
  3071  00F18E  6F36               	movwf	(??___ftmul+2)& (0+255),b
  3072  00F190  513A               	movf	(??___ftmul+6)& (0+255),w,b
  3073  00F192                     l432:
  3074                           ; BSR set to: ?
  3075  00F192  0102               	movlb	2	; () banked
  3076  00F194  A12E               	btfss	?___ftmul& (0+255),0,b
  3077  00F196  D007               	goto	l433
  3078  00F198  0102               	movlb	2	; () banked
  3079  00F19A  5131               	movf	(?___ftmul+3)& (0+255),w,b
  3080  00F19C  2737               	addwf	(??___ftmul+3)& (0+255),f,b
  3081  00F19E  5132               	movf	(?___ftmul+4)& (0+255),w,b
  3082  00F1A0  2338               	addwfc	(??___ftmul+4)& (0+255),f,b
  3083  00F1A2  5133               	movf	(?___ftmul+5)& (0+255),w,b
  3084  00F1A4  2339               	addwfc	(??___ftmul+5)& (0+255),f,b
  3085  00F1A6                     l433:
  3086                           ; BSR set to: ?
  3087  00F1A6  90D8               	bcf	status,0,c
  3088  00F1A8  0102               	movlb	2	; () banked
  3089  00F1AA  3330               	rrcf	(?___ftmul+2)& (0+255),f,b
  3090  00F1AC  332F               	rrcf	(?___ftmul+1)& (0+255),f,b
  3091  00F1AE  332E               	rrcf	?___ftmul& (0+255),f,b
  3092  00F1B0  90D8               	bcf	status,0,c
  3093  00F1B2  3731               	rlcf	(?___ftmul+3)& (0+255),f,b
  3094  00F1B4  3732               	rlcf	(?___ftmul+4)& (0+255),f,b
  3095  00F1B6  3733               	rlcf	(?___ftmul+5)& (0+255),f,b
  3096  00F1B8  2F36               	decfsz	(??___ftmul+2)& (0+255),f,b
  3097  00F1BA  D7EB               	goto	l432
  3098                           ; BSR set to: ?
  3099  00F1BC  6F3A               	movwf	(??___ftmul+6)& (0+255),b
  3100  00F1BE  0E09               	movlw	9
  3101  00F1C0  6F36               	movwf	(??___ftmul+2)& (0+255),b
  3102  00F1C2  513A               	movf	(??___ftmul+6)& (0+255),w,b
  3103  00F1C4                     l436:
  3104                           ; BSR set to: ?
  3105  00F1C4  0102               	movlb	2	; () banked
  3106  00F1C6  A12E               	btfss	?___ftmul& (0+255),0,b
  3107  00F1C8  D007               	goto	l437
  3108  00F1CA  0102               	movlb	2	; () banked
  3109  00F1CC  5131               	movf	(?___ftmul+3)& (0+255),w,b
  3110  00F1CE  2737               	addwf	(??___ftmul+3)& (0+255),f,b
  3111  00F1D0  5132               	movf	(?___ftmul+4)& (0+255),w,b
  3112  00F1D2  2338               	addwfc	(??___ftmul+4)& (0+255),f,b
  3113  00F1D4  5133               	movf	(?___ftmul+5)& (0+255),w,b
  3114  00F1D6  2339               	addwfc	(??___ftmul+5)& (0+255),f,b
  3115  00F1D8                     l437:
  3116                           ; BSR set to: ?
  3117  00F1D8  90D8               	bcf	status,0,c
  3118  00F1DA  0102               	movlb	2	; () banked
  3119  00F1DC  3330               	rrcf	(?___ftmul+2)& (0+255),f,b
  3120  00F1DE  332F               	rrcf	(?___ftmul+1)& (0+255),f,b
  3121  00F1E0  332E               	rrcf	?___ftmul& (0+255),f,b
  3122  00F1E2  90D8               	bcf	status,0,c
  3123  00F1E4  3339               	rrcf	(??___ftmul+5)& (0+255),f,b
  3124  00F1E6  3338               	rrcf	(??___ftmul+4)& (0+255),f,b
  3125  00F1E8  3337               	rrcf	(??___ftmul+3)& (0+255),f,b
  3126  00F1EA  2F36               	decfsz	(??___ftmul+2)& (0+255),f,b
  3127  00F1EC  D7EB               	goto	l436
  3128                           ; BSR set to: ?
  3129  00F1EE  C235  F23D         	movff	??___ftmul+1,?___ftpack+2
  3130  00F1F2  0E37               	movlw	low (??___ftmul+3)
  3131  00F1F4  6F3B               	movwf	?___ftpack& (0+255),b
  3132  00F1F6  0E02               	movlw	high (??___ftmul+3)
  3133  00F1F8  6F3C               	movwf	(?___ftpack+1)& (0+255),b
  3134  00F1FA  EC7B  F079         	call	___ftpack	;wreg free
  3135  00F1FE  0102               	movlb	2	; () banked
  3136  00F200  5134               	movf	??___ftmul& (0+255),w,b
  3137  00F202  E001               	bz	l438
  3138  00F204  8F39               	bsf	(??___ftmul+5)& (0+255),7,b
  3139  00F206                     l438:
  3140                           ; BSR set to: ?
  3141  00F206  C237  F22E         	movff	??___ftmul+3,?___ftmul
  3142  00F20A  C238  F22F         	movff	??___ftmul+4,?___ftmul+1
  3143  00F20E  C239  F230         	movff	??___ftmul+5,?___ftmul+2
  3144  00F212  0012               	return	
  3145                           ; BSR set to: ?
  3146  00F214                     __end_of___ftmul:
  3147                           	opt stack 0
  3148                           
  3149                           	psect	text20
  3150                           ; =============== function ___ftmul ends =======
      +                          =====
  3151                           ; *************** function ___ftsub ************
      +                          *****
  3152                           ; Defined at:
  3153                           ;		line 17 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\ftsub.c"
  3154                           ; Parameters:
  3155                           ;		f1             size:   3offs:   0	type: float
      +                           
  3156                           ;		f2             size:   3offs:   3	type: float
      +                           
  3157                           ; Auto variables:
  3158                           ;		None
  3159                           ; Return value:
  3160                           ;		type: float 
  3161                           ;		size: 3
  3162                           ; Registers used:
  3163                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  3164                           ; Tracked objects:
  3165                           ;		On entry : 0/0
  3166                           ;		On exit  : 0/0
  3167                           ;		Unchanged: 0/0
  3168                           ; Data sizes:
  3169                           ;		Autos:    0
  3170                           ;		Params:   6
  3171                           ;		Temp:     0
  3172                           ;		Total:    6
  3173                           ; This function calls:
  3174                           ;		___ftadd
  3175                           ; This function is called by:
  3176                           ;		_sin
  3177                           ;		___asftsub
  3178                           ; This function uses a non-reentrant model
  3179                           ; 
  3180  000000                     
  3181  00EA10                     ___ftsub:
  3182                           	opt stack 28
  3183                           ; BSR set to: ?
  3184  00EA10  0E80               	movlw	128
  3185  00EA12  0102               	movlb	2	; () banked
  3186  00EA14  1B29               	xorwf	(?___ftsub+5)& (0+255),f,b
  3187  00EA16  C227  F231         	movff	?___ftsub+3,?___ftadd+3
  3188  00EA1A  C228  F232         	movff	?___ftsub+4,?___ftadd+4
  3189  00EA1E  C229  F233         	movff	?___ftsub+5,?___ftadd+5
  3190  00EA22  C224  F22E         	movff	?___ftsub,?___ftadd
  3191  00EA26  C225  F22F         	movff	?___ftsub+1,?___ftadd+1
  3192  00EA2A  C226  F230         	movff	?___ftsub+2,?___ftadd+2
  3193  00EA2E  EC98  F07A         	call	___ftadd	;wreg free
  3194  00EA32  C22E  F224         	movff	?___ftadd,?___ftsub
  3195  00EA36  C22F  F225         	movff	?___ftadd+1,?___ftsub+1
  3196  00EA3A  C230  F226         	movff	?___ftadd+2,?___ftsub+2
  3197  00EA3E  0012               	return	
  3198                           ; BSR set to: ?
  3199  00EA40                     __end_of___ftsub:
  3200                           	opt stack 0
  3201                           
  3202                           	psect	text21
  3203                           ; =============== function ___ftsub ends =======
      +                          =====
  3204                           ; *************** function ___ftge *************
      +                          ****
  3205                           ; Defined at:
  3206                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.63\sources\ftge.c"
  3207                           ; Parameters:
  3208                           ;		ff1            size:   3offs:   0	type: float
      +                           
  3209                           ;		ff2            size:   3offs:   3	type: float
      +                           
  3210                           ; Auto variables:
  3211                           ;		None
  3212                           ; Return value:
  3213                           ;		type: bit 
  3214                           ;		size: 0
  3215                           ; Registers used:
  3216                           ;		wreg, status,2, status,0
  3217                           ; Tracked objects:
  3218                           ;		On entry : 0/0
  3219                           ;		On exit  : 0/0
  3220                           ;		Unchanged: 0/0
  3221                           ; Data sizes:
  3222                           ;		Autos:    0
  3223                           ;		Params:   6
  3224                           ;		Temp:     3
  3225                           ;		Total:    9
  3226                           ; This function calls:
  3227                           ;		Nothing
  3228                           ; This function is called by:
  3229                           ;		_sin
  3230                           ;		_floor
  3231                           ; This function uses a non-reentrant model
  3232                           ; 
  3233  000000                     
  3234  00EBDC                     ___ftge:
  3235                           	opt stack 28
  3236                           ; BSR set to: ?
  3237  00EBDC  0102               	movlb	2	; () banked
  3238  00EBDE  AF29               	btfss	(?___ftge+2)& (0+255),7,b
  3239  00EBE0  D00E               	goto	l538
  3240  00EBE2  6B2D               	clrf	??___ftge& (0+255),b
  3241  00EBE4  6B2E               	clrf	(??___ftge+1)& (0+255),b
  3242  00EBE6  0E80               	movlw	128
  3243  00EBE8  6F2F               	movwf	(??___ftge+2)& (0+255),b
  3244  00EBEA  0102               	movlb	2	; () banked
  3245  00EBEC  5127               	movf	?___ftge& (0+255),w,b
  3246  00EBEE  5D2D               	subwf	??___ftge& (0+255),w,b
  3247  00EBF0  6F27               	movwf	?___ftge& (0+255),b
  3248  00EBF2  5128               	movf	(?___ftge+1)& (0+255),w,b
  3249  00EBF4  592E               	subwfb	(??___ftge+1)& (0+255),w,b
  3250  00EBF6  6F28               	movwf	(?___ftge+1)& (0+255),b
  3251  00EBF8  5129               	movf	(?___ftge+2)& (0+255),w,b
  3252  00EBFA  592F               	subwfb	(??___ftge+2)& (0+255),w,b
  3253  00EBFC  6F29               	movwf	(?___ftge+2)& (0+255),b
  3254  00EBFE                     l538:
  3255                           ; BSR set to: ?
  3256  00EBFE  0102               	movlb	2	; () banked
  3257  00EC00  0E00               	movlw	0
  3258  00EC02  AF2C               	btfss	(?___ftge+5)& (0+255),7,b
  3259  00EC04  D00F               	goto	L7
  3260  00EC06  6B2D               	clrf	??___ftge& (0+255),b
  3261  00EC08  6B2E               	clrf	(??___ftge+1)& (0+255),b
  3262  00EC0A  0E80               	movlw	128
  3263  00EC0C  6F2F               	movwf	(??___ftge+2)& (0+255),b
  3264  00EC0E  0102               	movlb	2	; () banked
  3265  00EC10  512A               	movf	(?___ftge+3)& (0+255),w,b
  3266  00EC12  5D2D               	subwf	??___ftge& (0+255),w,b
  3267  00EC14  6F2A               	movwf	(?___ftge+3)& (0+255),b
  3268  00EC16  512B               	movf	(?___ftge+4)& (0+255),w,b
  3269  00EC18  592E               	subwfb	(??___ftge+1)& (0+255),w,b
  3270  00EC1A  6F2B               	movwf	(?___ftge+4)& (0+255),b
  3271  00EC1C  512C               	movf	(?___ftge+5)& (0+255),w,b
  3272  00EC1E  592F               	subwfb	(??___ftge+2)& (0+255),w,b
  3273  00EC20  6F2C               	movwf	(?___ftge+5)& (0+255),b
  3274                           ; BSR set to: ?
  3275  00EC22  0E00               	movlw	0
  3276  00EC24                     L7:
  3277  00EC24  0102               	movlb	2	; () banked
  3278  00EC26  1B27               	xorwf	?___ftge& (0+255),f,b
  3279  00EC28  0E80               	movlw	128
  3280  00EC2A  1B29               	xorwf	(?___ftge+2)& (0+255),f,b
  3281  00EC2C  1B2C               	xorwf	(?___ftge+5)& (0+255),f,b
  3282  00EC2E  512A               	movf	(?___ftge+3)& (0+255),w,b
  3283  00EC30  5D27               	subwf	?___ftge& (0+255),w,b
  3284  00EC32  512B               	movf	(?___ftge+4)& (0+255),w,b
  3285  00EC34  5928               	subwfb	(?___ftge+1)& (0+255),w,b
  3286  00EC36  512C               	movf	(?___ftge+5)& (0+255),w,b
  3287  00EC38  5929               	subwfb	(?___ftge+2)& (0+255),w,b
  3288  00EC3A  0012               	return	
  3289                           ; BSR set to: ?
  3290  00EC3C                     __end_of___ftge:
  3291                           	opt stack 0
  3292                           
  3293                           	psect	text22
  3294                           ; =============== function ___ftge ends ========
      +                          ====
  3295                           ; *************** function ___altoft ***********
      +                          ******
  3296                           ; Defined at:
  3297                           ;		line 16 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\altoft.c"
  3298                           ; Parameters:
  3299                           ;		c              size:   4offs:   0	type: long 
  3300                           ; Auto variables:
  3301                           ;		sign        	       	type: unsigned char 
  3302                           ;		exp         	       	type: unsigned char 
  3303                           ;		f1          	       	type: float 
  3304                           ; Return value:
  3305                           ;		type: float 
  3306                           ;		size: 3
  3307                           ; Registers used:
  3308                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  3309                           ; Tracked objects:
  3310                           ;		On entry : 0/0
  3311                           ;		On exit  : 0/0
  3312                           ;		Unchanged: 0/0
  3313                           ; Data sizes:
  3314                           ;		Autos:    5
  3315                           ;		Params:   4
  3316                           ;		Temp:     4
  3317                           ;		Total:   13
  3318                           ; This function calls:
  3319                           ;		___ftpack
  3320                           ;		___ftneg
  3321                           ; This function is called by:
  3322                           ;		_floor
  3323                           ; This function uses a non-reentrant model
  3324                           ; 
  3325  000000                     
  3326  00EEE4                     ___altoft:
  3327                           	opt stack 28
  3328                           ; BSR set to: ?
  3329  00EEE4  0102               	movlb	2	; () banked
  3330  00EEE6  512A               	movf	(?___altoft+3)& (0+255),w,b
  3331  00EEE8  1127               	iorwf	?___altoft& (0+255),w,b
  3332  00EEEA  1128               	iorwf	(?___altoft+1)& (0+255),w,b
  3333  00EEEC  1129               	iorwf	(?___altoft+2)& (0+255),w,b
  3334  00EEEE  E104               	bnz	l250
  3335  00EEF0  6B27               	clrf	?___altoft& (0+255),b
  3336  00EEF2  6B28               	clrf	(?___altoft+1)& (0+255),b
  3337  00EEF4  6B29               	clrf	(?___altoft+2)& (0+255),b
  3338  00EEF6  0C00               	retlw	0
  3339  00EEF8                     l250:
  3340                           ; BSR set to: ?
  3341  00EEF8  0102               	movlb	2	; () banked
  3342  00EEFA  6F30               	movwf	(??___altoft+5)& (0+255),b
  3343  00EEFC  6B2B               	clrf	??___altoft& (0+255),b
  3344  00EEFE  5130               	movf	(??___altoft+5)& (0+255),w,b
  3345  00EF00  AF2A               	btfss	(?___altoft+3)& (0+255),7,b
  3346  00EF02  D00D               	goto	l251
  3347  00EF04  0102               	movlb	2	; () banked
  3348  00EF06  1F2A               	comf	(?___altoft+3)& (0+255),f,b
  3349  00EF08  1F29               	comf	(?___altoft+2)& (0+255),f,b
  3350  00EF0A  1F28               	comf	(?___altoft+1)& (0+255),f,b
  3351  00EF0C  6D27               	negf	?___altoft& (0+255),b
  3352  00EF0E  0E00               	movlw	0
  3353  00EF10  2328               	addwfc	(?___altoft+1)& (0+255),f,b
  3354  00EF12  2329               	addwfc	(?___altoft+2)& (0+255),f,b
  3355  00EF14  232A               	addwfc	(?___altoft+3)& (0+255),f,b
  3356  00EF16  6B30               	clrf	(??___altoft+5)& (0+255),b
  3357  00EF18  0E01               	movlw	1
  3358  00EF1A  6F2B               	movwf	??___altoft& (0+255),b
  3359  00EF1C  5130               	movf	(??___altoft+5)& (0+255),w,b
  3360  00EF1E                     l251:
  3361                           ; BSR set to: ?
  3362  00EF1E  0102               	movlb	2	; () banked
  3363  00EF20  6F30               	movwf	(??___altoft+5)& (0+255),b
  3364  00EF22  0E8E               	movlw	142
  3365  00EF24  6F2C               	movwf	(??___altoft+1)& (0+255),b
  3366  00EF26  5130               	movf	(??___altoft+5)& (0+255),w,b
  3367  00EF28                     l252:
  3368                           ; BSR set to: ?
  3369  00EF28  0102               	movlb	2	; () banked
  3370  00EF2A  6B30               	clrf	(??___altoft+5)& (0+255),b
  3371  00EF2C  6B31               	clrf	(??___altoft+6)& (0+255),b
  3372  00EF2E  6B32               	clrf	(??___altoft+7)& (0+255),b
  3373  00EF30  512A               	movf	(?___altoft+3)& (0+255),w,b
  3374  00EF32  6F33               	movwf	(??___altoft+8)& (0+255),b
  3375  00EF34  5133               	movf	(??___altoft+8)& (0+255),w,b
  3376  00EF36  1130               	iorwf	(??___altoft+5)& (0+255),w,b
  3377  00EF38  1131               	iorwf	(??___altoft+6)& (0+255),w,b
  3378  00EF3A  1132               	iorwf	(??___altoft+7)& (0+255),w,b
  3379  00EF3C  E007               	bz	u3960
  3380                           ; BSR set to: ?
  3381  00EF3E  90D8               	bcf	status,0,c
  3382  00EF40  332A               	rrcf	(?___altoft+3)& (0+255),f,b
  3383  00EF42  3329               	rrcf	(?___altoft+2)& (0+255),f,b
  3384  00EF44  3328               	rrcf	(?___altoft+1)& (0+255),f,b
  3385  00EF46  3327               	rrcf	?___altoft& (0+255),f,b
  3386  00EF48  2B2C               	incf	(??___altoft+1)& (0+255),f,b
  3387  00EF4A  D7EE               	goto	l252
  3388  00EF4C                     u3960:
  3389                           ; BSR set to: ?
  3390  00EF4C  C227  F22D         	movff	?___altoft,??___altoft+2
  3391  00EF50  C228  F22E         	movff	?___altoft+1,??___altoft+3
  3392  00EF54  C229  F22F         	movff	?___altoft+2,??___altoft+4
  3393  00EF58  C22C  F23D         	movff	??___altoft+1,?___ftpack+2
  3394  00EF5C  0E2D               	movlw	low (??___altoft+2)
  3395  00EF5E  0102               	movlb	2	; () banked
  3396  00EF60  6F3B               	movwf	?___ftpack& (0+255),b
  3397  00EF62  0E02               	movlw	high (??___altoft+2)
  3398  00EF64  6F3C               	movwf	(?___ftpack+1)& (0+255),b
  3399  00EF66  EC7B  F079         	call	___ftpack	;wreg free
  3400  00EF6A  0102               	movlb	2	; () banked
  3401  00EF6C  512B               	movf	??___altoft& (0+255),w,b
  3402  00EF6E  E00E               	bz	l255
  3403  00EF70  C22D  F234         	movff	??___altoft+2,?___ftneg
  3404  00EF74  C22E  F235         	movff	??___altoft+3,?___ftneg+1
  3405  00EF78  C22F  F236         	movff	??___altoft+4,?___ftneg+2
  3406  00EF7C  ECF0  F074         	call	___ftneg	;wreg free
  3407  00EF80  C234  F22D         	movff	?___ftneg,??___altoft+2
  3408  00EF84  C235  F22E         	movff	?___ftneg+1,??___altoft+3
  3409  00EF88  C236  F22F         	movff	?___ftneg+2,??___altoft+4
  3410  00EF8C                     l255:
  3411                           ; BSR set to: ?
  3412  00EF8C  C22D  F227         	movff	??___altoft+2,?___altoft
  3413  00EF90  C22E  F228         	movff	??___altoft+3,?___altoft+1
  3414  00EF94  C22F  F229         	movff	??___altoft+4,?___altoft+2
  3415  00EF98  0012               	return	
  3416                           ; BSR set to: ?
  3417  00EF9A                     __end_of___altoft:
  3418                           	opt stack 0
  3419                           
  3420                           	psect	text23
  3421                           ; =============== function ___altoft ends ======
      +                          ======
  3422                           ; *************** function ___ftneg ************
      +                          *****
  3423                           ; Defined at:
  3424                           ;		line 16 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\ftneg.c"
  3425                           ; Parameters:
  3426                           ;		f1             size:   3offs:   0	type: float
      +                           
  3427                           ; Auto variables:
  3428                           ;		None
  3429                           ; Return value:
  3430                           ;		type: float 
  3431                           ;		size: 3
  3432                           ; Registers used:
  3433                           ;		wreg, status,2, status,0
  3434                           ; Tracked objects:
  3435                           ;		On entry : 0/0
  3436                           ;		On exit  : 0/0
  3437                           ;		Unchanged: 0/0
  3438                           ; Data sizes:
  3439                           ;		Autos:    0
  3440                           ;		Params:   3
  3441                           ;		Temp:     0
  3442                           ;		Total:    3
  3443                           ; This function calls:
  3444                           ;		Nothing
  3445                           ; This function is called by:
  3446                           ;		_sin
  3447                           ;		___altoft
  3448                           ;		___awtoft
  3449                           ; This function uses a non-reentrant model
  3450                           ; 
  3451  000000                     
  3452  00E9E0                     ___ftneg:
  3453                           	opt stack 27
  3454                           ; BSR set to: ?
  3455  00E9E0  0102               	movlb	2	; () banked
  3456  00E9E2  5134               	movf	?___ftneg& (0+255),w,b
  3457  00E9E4  1135               	iorwf	(?___ftneg+1)& (0+255),w,b
  3458  00E9E6  1136               	iorwf	(?___ftneg+2)& (0+255),w,b
  3459  00E9E8  E002               	bz	l534
  3460  00E9EA  0E80               	movlw	128
  3461  00E9EC  1B36               	xorwf	(?___ftneg+2)& (0+255),f,b
  3462  00E9EE                     l534:
  3463                           ; BSR set to: ?
  3464  00E9EE  0012               	return	
  3465                           ; BSR set to: ?
  3466  00E9F0                     __end_of___ftneg:
  3467                           	opt stack 0
  3468                           
  3469                           	psect	text24
  3470                           ; =============== function ___ftneg ends =======
      +                          =====
  3471                           ; *************** function ___ftadd ************
      +                          *****
  3472                           ; Defined at:
  3473                           ;		line 17 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\ftadd.c"
  3474                           ; Parameters:
  3475                           ;		f1             size:   3offs:   0	type: float
      +                           
  3476                           ;		f2             size:   3offs:   3	type: float
      +                           
  3477                           ; Auto variables:
  3478                           ;		sign2       	       	type: unsigned char 
  3479                           ;		cntr        	       	type: unsigned char 
  3480                           ;		sign1       	       	type: unsigned char 
  3481                           ;		exp2        	       	type: unsigned char 
  3482                           ;		exp1        	       	type: unsigned char 
  3483                           ; Return value:
  3484                           ;		type: float 
  3485                           ;		size: 3
  3486                           ; Registers used:
  3487                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  3488                           ; Tracked objects:
  3489                           ;		On entry : 0/0
  3490                           ;		On exit  : 0/0
  3491                           ;		Unchanged: 0/0
  3492                           ; Data sizes:
  3493                           ;		Autos:    5
  3494                           ;		Params:   6
  3495                           ;		Temp:     1
  3496                           ;		Total:   12
  3497                           ; This function calls:
  3498                           ;		___ftunpack
  3499                           ;		___ftpack
  3500                           ; This function is called by:
  3501                           ;		___ftsub
  3502                           ;		_eval_poly
  3503                           ;		_floor
  3504                           ; This function uses a non-reentrant model
  3505                           ; 
  3506  000000                     
  3507  00F530                     ___ftadd:
  3508                           	opt stack 27
  3509                           ; BSR set to: ?
  3510                           ; BSR set to: ?
  3511  00F530  0E38               	movlw	low (??___ftadd+4)
  3512  00F532  0102               	movlb	2	; () banked
  3513  00F534  6F3D               	movwf	(?___ftunpack+2)& (0+255),b
  3514  00F536  0E02               	movlw	high (??___ftadd+4)
  3515  00F538  6F3E               	movwf	(?___ftunpack+3)& (0+255),b
  3516  00F53A  0E2E               	movlw	low ?___ftadd
  3517  00F53C  6F3B               	movwf	?___ftunpack& (0+255),b
  3518  00F53E  0E02               	movlw	high ?___ftadd
  3519  00F540  6F3C               	movwf	(?___ftunpack+1)& (0+255),b
  3520  00F542  EC96  F076         	call	___ftunpack	;wreg free
  3521  00F546  0102               	movlb	2	; () banked
  3522  00F548  6F36               	movwf	(??___ftadd+2)& (0+255),b
  3523  00F54A  6738               	tstfsz	(??___ftadd+4)& (0+255),b
  3524  00F54C  D007               	goto	l393
  3525  00F54E  C231  F22E         	movff	?___ftadd+3,?___ftadd
  3526  00F552  C232  F22F         	movff	?___ftadd+4,?___ftadd+1
  3527  00F556  C233  F230         	movff	?___ftadd+5,?___ftadd+2
  3528  00F55A  0012               	return	
  3529  00F55C                     l393:
  3530                           ; BSR set to: ?
  3531  00F55C  0E37               	movlw	low (??___ftadd+3)
  3532  00F55E  0102               	movlb	2	; () banked
  3533  00F560  6F3D               	movwf	(?___ftunpack+2)& (0+255),b
  3534  00F562  0E02               	movlw	high (??___ftadd+3)
  3535  00F564  6F3E               	movwf	(?___ftunpack+3)& (0+255),b
  3536  00F566  0E31               	movlw	low (?___ftadd+3)
  3537  00F568  6F3B               	movwf	?___ftunpack& (0+255),b
  3538  00F56A  0E02               	movlw	high (?___ftadd+3)
  3539  00F56C  6F3C               	movwf	(?___ftunpack+1)& (0+255),b
  3540  00F56E  EC96  F076         	call	___ftunpack	;wreg free
  3541  00F572  0102               	movlb	2	; () banked
  3542  00F574  6F34               	movwf	??___ftadd& (0+255),b
  3543  00F576  5137               	movf	(??___ftadd+3)& (0+255),w,b
  3544  00F578  E07E               	bz	l394
  3545  00F57A  6F39               	movwf	(??___ftadd+5)& (0+255),b
  3546  00F57C  0E06               	movlw	6
  3547  00F57E  6F35               	movwf	(??___ftadd+1)& (0+255),b
  3548  00F580  5139               	movf	(??___ftadd+5)& (0+255),w,b
  3549  00F582  5137               	movf	(??___ftadd+3)& (0+255),w,b
  3550  00F584  6138               	cpfslt	(??___ftadd+4)& (0+255),b
  3551  00F586  D026               	goto	l395
  3552  00F588  5138               	movf	(??___ftadd+4)& (0+255),w,b
  3553  00F58A  5D37               	subwf	(??___ftadd+3)& (0+255),w,b
  3554  00F58C  6F39               	movwf	(??___ftadd+5)& (0+255),b
  3555  00F58E  0E19               	movlw	25
  3556  00F590  5D39               	subwf	(??___ftadd+5)& (0+255),w,b
  3557  00F592  E309               	bnc	l400
  3558  00F594  0E00               	movlw	0
  3559  00F596  6F2E               	movwf	?___ftadd& (0+255),b
  3560  00F598  6F2F               	movwf	(?___ftadd+1)& (0+255),b
  3561  00F59A  6F30               	movwf	(?___ftadd+2)& (0+255),b
  3562  00F59C  C237  F238         	movff	??___ftadd+3,??___ftadd+4
  3563  00F5A0  C234  F236         	movff	??___ftadd,??___ftadd+2
  3564  00F5A4  D03C               	goto	l404
  3565  00F5A6                     l400:
  3566                           ; BSR set to: ?
  3567  00F5A6  90D8               	bcf	status,0,c
  3568  00F5A8  0102               	movlb	2	; () banked
  3569  00F5AA  3731               	rlcf	(?___ftadd+3)& (0+255),f,b
  3570  00F5AC  3732               	rlcf	(?___ftadd+4)& (0+255),f,b
  3571  00F5AE  3733               	rlcf	(?___ftadd+5)& (0+255),f,b
  3572  00F5B0  0737               	decf	(??___ftadd+3)& (0+255),f,b
  3573  00F5B2  5137               	movf	(??___ftadd+3)& (0+255),w,b
  3574  00F5B4  1938               	xorwf	(??___ftadd+4)& (0+255),w,b
  3575  00F5B6  E009               	bz	l401
  3576  00F5B8  2F35               	decfsz	(??___ftadd+1)& (0+255),f,b
  3577  00F5BA  D7F5               	goto	l400
  3578                           ; BSR set to: ?
  3579                           ; BSR set to: ?
  3580  00F5BC  D006               	goto	l401
  3581  00F5BE                     l402:
  3582                           ; BSR set to: ?
  3583  00F5BE  90D8               	bcf	status,0,c
  3584  00F5C0  0102               	movlb	2	; () banked
  3585  00F5C2  3330               	rrcf	(?___ftadd+2)& (0+255),f,b
  3586  00F5C4  332F               	rrcf	(?___ftadd+1)& (0+255),f,b
  3587  00F5C6  332E               	rrcf	?___ftadd& (0+255),f,b
  3588  00F5C8  2B38               	incf	(??___ftadd+4)& (0+255),f,b
  3589  00F5CA                     l401:
  3590                           ; BSR set to: ?
  3591  00F5CA  0102               	movlb	2	; () banked
  3592  00F5CC  5137               	movf	(??___ftadd+3)& (0+255),w,b
  3593  00F5CE  6338               	cpfseq	(??___ftadd+4)& (0+255),b
  3594  00F5D0  D7F6               	goto	l402
  3595  00F5D2  D025               	goto	l404
  3596                           ; BSR set to: ?
  3597                           ; BSR set to: ?
  3598  00F5D4                     l395:
  3599                           ; BSR set to: ?
  3600  00F5D4  0102               	movlb	2	; () banked
  3601  00F5D6  5138               	movf	(??___ftadd+4)& (0+255),w,b
  3602  00F5D8  1937               	xorwf	(??___ftadd+3)& (0+255),w,b
  3603  00F5DA  E021               	bz	l404
  3604  00F5DC  5137               	movf	(??___ftadd+3)& (0+255),w,b
  3605  00F5DE  5D38               	subwf	(??___ftadd+4)& (0+255),w,b
  3606  00F5E0  6F39               	movwf	(??___ftadd+5)& (0+255),b
  3607  00F5E2  0E19               	movlw	25
  3608  00F5E4  5D39               	subwf	(??___ftadd+5)& (0+255),w,b
  3609  00F5E6  E305               	bnc	l410
  3610  00F5E8  0E00               	movlw	0
  3611  00F5EA  6F31               	movwf	(?___ftadd+3)& (0+255),b
  3612  00F5EC  6F32               	movwf	(?___ftadd+4)& (0+255),b
  3613  00F5EE  6F33               	movwf	(?___ftadd+5)& (0+255),b
  3614  00F5F0  D016               	goto	l404
  3615  00F5F2                     l410:
  3616                           ; BSR set to: ?
  3617  00F5F2  90D8               	bcf	status,0,c
  3618  00F5F4  0102               	movlb	2	; () banked
  3619  00F5F6  372E               	rlcf	?___ftadd& (0+255),f,b
  3620  00F5F8  372F               	rlcf	(?___ftadd+1)& (0+255),f,b
  3621  00F5FA  3730               	rlcf	(?___ftadd+2)& (0+255),f,b
  3622  00F5FC  0738               	decf	(??___ftadd+4)& (0+255),f,b
  3623  00F5FE  5137               	movf	(??___ftadd+3)& (0+255),w,b
  3624  00F600  1938               	xorwf	(??___ftadd+4)& (0+255),w,b
  3625  00F602  E009               	bz	l411
  3626  00F604  2F35               	decfsz	(??___ftadd+1)& (0+255),f,b
  3627  00F606  D7F5               	goto	l410
  3628                           ; BSR set to: ?
  3629                           ; BSR set to: ?
  3630  00F608  D006               	goto	l411
  3631  00F60A                     l412:
  3632                           ; BSR set to: ?
  3633  00F60A  90D8               	bcf	status,0,c
  3634  00F60C  0102               	movlb	2	; () banked
  3635  00F60E  3333               	rrcf	(?___ftadd+5)& (0+255),f,b
  3636  00F610  3332               	rrcf	(?___ftadd+4)& (0+255),f,b
  3637  00F612  3331               	rrcf	(?___ftadd+3)& (0+255),f,b
  3638  00F614  2B37               	incf	(??___ftadd+3)& (0+255),f,b
  3639  00F616                     l411:
  3640                           ; BSR set to: ?
  3641  00F616  0102               	movlb	2	; () banked
  3642  00F618  5137               	movf	(??___ftadd+3)& (0+255),w,b
  3643  00F61A  6338               	cpfseq	(??___ftadd+4)& (0+255),b
  3644  00F61C  D7F6               	goto	l412
  3645                           ; BSR set to: ?
  3646                           ; BSR set to: ?
  3647                           ; BSR set to: ?
  3648  00F61E                     l404:
  3649                           ; BSR set to: ?
  3650  00F61E  0102               	movlb	2	; () banked
  3651  00F620  5136               	movf	(??___ftadd+2)& (0+255),w,b
  3652  00F622  E007               	bz	l414
  3653  00F624  1F2E               	comf	?___ftadd& (0+255),f,b
  3654  00F626  1F2F               	comf	(?___ftadd+1)& (0+255),f,b
  3655  00F628  1F30               	comf	(?___ftadd+2)& (0+255),f,b
  3656  00F62A  2B2E               	incf	?___ftadd& (0+255),f,b
  3657  00F62C  0E00               	movlw	0
  3658  00F62E  232F               	addwfc	(?___ftadd+1)& (0+255),f,b
  3659  00F630  2330               	addwfc	(?___ftadd+2)& (0+255),f,b
  3660  00F632                     l414:
  3661                           ; BSR set to: ?
  3662  00F632  0102               	movlb	2	; () banked
  3663  00F634  5134               	movf	??___ftadd& (0+255),w,b
  3664  00F636  E007               	bz	l415
  3665  00F638  1F31               	comf	(?___ftadd+3)& (0+255),f,b
  3666  00F63A  1F32               	comf	(?___ftadd+4)& (0+255),f,b
  3667  00F63C  1F33               	comf	(?___ftadd+5)& (0+255),f,b
  3668  00F63E  2B31               	incf	(?___ftadd+3)& (0+255),f,b
  3669  00F640  0E00               	movlw	0
  3670  00F642  2332               	addwfc	(?___ftadd+4)& (0+255),f,b
  3671  00F644  2333               	addwfc	(?___ftadd+5)& (0+255),f,b
  3672  00F646                     l415:
  3673                           ; BSR set to: ?
  3674  00F646  0102               	movlb	2	; () banked
  3675  00F648  6F39               	movwf	(??___ftadd+5)& (0+255),b
  3676  00F64A  6B36               	clrf	(??___ftadd+2)& (0+255),b
  3677  00F64C  5139               	movf	(??___ftadd+5)& (0+255),w,b
  3678  00F64E  5131               	movf	(?___ftadd+3)& (0+255),w,b
  3679  00F650  272E               	addwf	?___ftadd& (0+255),f,b
  3680  00F652  5132               	movf	(?___ftadd+4)& (0+255),w,b
  3681  00F654  232F               	addwfc	(?___ftadd+1)& (0+255),f,b
  3682  00F656  5133               	movf	(?___ftadd+5)& (0+255),w,b
  3683  00F658  2330               	addwfc	(?___ftadd+2)& (0+255),f,b
  3684  00F65A  AF30               	btfss	(?___ftadd+2)& (0+255),7,b
  3685  00F65C  D00C               	goto	l394
  3686  00F65E  0102               	movlb	2	; () banked
  3687  00F660  1F2E               	comf	?___ftadd& (0+255),f,b
  3688  00F662  1F2F               	comf	(?___ftadd+1)& (0+255),f,b
  3689  00F664  1F30               	comf	(?___ftadd+2)& (0+255),f,b
  3690  00F666  2B2E               	incf	?___ftadd& (0+255),f,b
  3691  00F668  0E00               	movlw	0
  3692  00F66A  232F               	addwfc	(?___ftadd+1)& (0+255),f,b
  3693  00F66C  2330               	addwfc	(?___ftadd+2)& (0+255),f,b
  3694  00F66E  6B39               	clrf	(??___ftadd+5)& (0+255),b
  3695  00F670  0E01               	movlw	1
  3696  00F672  6F36               	movwf	(??___ftadd+2)& (0+255),b
  3697  00F674  5139               	movf	(??___ftadd+5)& (0+255),w,b
  3698                           ; BSR set to: ?
  3699  00F676                     l394:
  3700                           ; BSR set to: ?
  3701  00F676  C238  F23D         	movff	??___ftadd+4,?___ftpack+2
  3702  00F67A  0E2E               	movlw	low ?___ftadd
  3703  00F67C  0102               	movlb	2	; () banked
  3704  00F67E  6F3B               	movwf	?___ftpack& (0+255),b
  3705  00F680  0E02               	movlw	high ?___ftadd
  3706  00F682  6F3C               	movwf	(?___ftpack+1)& (0+255),b
  3707  00F684  EC7B  F079         	call	___ftpack	;wreg free
  3708  00F688  0102               	movlb	2	; () banked
  3709  00F68A  5136               	movf	(??___ftadd+2)& (0+255),w,b
  3710  00F68C  E002               	bz	l417
  3711  00F68E  0E80               	movlw	128
  3712  00F690  1B30               	xorwf	(?___ftadd+2)& (0+255),f,b
  3713  00F692                     l417:
  3714                           ; BSR set to: ?
  3715  00F692  0012               	return	
  3716                           ; BSR set to: ?
  3717  00F694                     __end_of___ftadd:
  3718                           	opt stack 0
  3719                           
  3720                           	psect	text25
  3721                           ; =============== function ___ftadd ends =======
      +                          =====
  3722                           ; *************** function ___ftpack ***********
      +                          ******
  3723                           ; Defined at:
  3724                           ;		line 33 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\float.c"
  3725                           ; Parameters:
  3726                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned um; Largest target is 3
  3727                           ;		 -> __lwtoft@f1(3), __lltoft@f1(3), __lbtoft@
      +                          f1(3), __abtoft@f1(3), 
  3728                           ;		 -> __ftmul@f3(3), __ftdiv@f3(3), __ftadd@f1(
      +                          3), __awtoft@f1(3), 
  3729                           ;		 -> __altoft@f1(3), 
  3730                           ;		exp            size:   1offs:   2	type: unsig
      +                          ned char 
  3731                           ; Auto variables:
  3732                           ;		None
  3733                           ; Return value:
  3734                           ;		type: void 
  3735                           ;		size: 0
  3736                           ; Registers used:
  3737                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  3738                           ; Tracked objects:
  3739                           ;		On entry : 0/0
  3740                           ;		On exit  : 0/0
  3741                           ;		Unchanged: 0/0
  3742                           ; Data sizes:
  3743                           ;		Autos:    0
  3744                           ;		Params:   3
  3745                           ;		Temp:     3
  3746                           ;		Total:    6
  3747                           ; This function calls:
  3748                           ;		Nothing
  3749                           ; This function is called by:
  3750                           ;		___altoft
  3751                           ;		___awtoft
  3752                           ;		___ftadd
  3753                           ;		___ftdiv
  3754                           ;		___ftmul
  3755                           ; This function uses a non-reentrant model
  3756                           ; 
  3757  000000                     
  3758  00F2F6                     ___ftpack:
  3759                           	opt stack 26
  3760                           ; BSR set to: ?
  3761  00F2F6  0102               	movlb	2	; () banked
  3762  00F2F8  513D               	movf	(?___ftpack+2)& (0+255),w,b
  3763  00F2FA  C23B  FFE9         	movff	?___ftpack,fsr0l
  3764  00F2FE  E008               	bz	L8
  3765  00F300  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3766  00F304  50EE               	movf	postinc0,w,c
  3767  00F306  10EE               	iorwf	postinc0,w,c
  3768  00F308  10ED               	iorwf	postdec0,w,c
  3769  00F30A  E114               	bnz	l367
  3770                           ; BSR set to: ?
  3771  00F30C  C23B  FFE9         	movff	?___ftpack,fsr0l
  3772  00F310                     L8:
  3773  00F310  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3774  00F314  6AEE               	clrf	postinc0,c
  3775  00F316  6AEE               	clrf	postinc0,c
  3776  00F318  6AED               	clrf	postdec0,c
  3777  00F31A  0C00               	retlw	0
  3778                           ; BSR set to: ?
  3779  00F31C                     l368:
  3780                           ; BSR set to: ?
  3781  00F31C  0102               	movlb	2	; () banked
  3782  00F31E  2B3D               	incf	(?___ftpack+2)& (0+255),f,b
  3783  00F320  C23B  FFE9         	movff	?___ftpack,fsr0l
  3784  00F324  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3785  00F328  52EC               	movf	preinc0,f,c
  3786  00F32A  52EC               	movf	preinc0,f,c
  3787  00F32C  90D8               	bcf	status,0,c
  3788  00F32E  32ED               	rrcf	postdec0,f,c
  3789  00F330  32ED               	rrcf	postdec0,f,c
  3790  00F332  32EF               	rrcf	indf0,f,c
  3791  00F334                     l367:
  3792                           ; BSR set to: ?
  3793  00F334  C23B  FFE9         	movff	?___ftpack,fsr0l
  3794  00F338  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3795  00F33C  52EE               	movf	postinc0,f,c
  3796  00F33E  52EE               	movf	postinc0,f,c
  3797  00F340  0EFE               	movlw	254
  3798  00F342  14ED               	andwf	postdec0,w,c
  3799  00F344  E015               	bz	l370
  3800  00F346  D7EA               	goto	l368
  3801                           ; BSR set to: ?
  3802  00F348                     l371:
  3803                           ; BSR set to: ?
  3804  00F348  0102               	movlb	2	; () banked
  3805  00F34A  2B3D               	incf	(?___ftpack+2)& (0+255),f,b
  3806  00F34C  C23B  FFE9         	movff	?___ftpack,fsr0l
  3807  00F350  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3808  00F354  2AEE               	incf	postinc0,f,c
  3809  00F356  0E00               	movlw	0
  3810  00F358  22EE               	addwfc	postinc0,f,c
  3811  00F35A  22ED               	addwfc	postdec0,f,c
  3812  00F35C  C23B  FFE9         	movff	?___ftpack,fsr0l
  3813  00F360  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3814  00F364  52EC               	movf	preinc0,f,c
  3815  00F366  52EC               	movf	preinc0,f,c
  3816  00F368  90D8               	bcf	status,0,c
  3817  00F36A  32ED               	rrcf	postdec0,f,c
  3818  00F36C  32ED               	rrcf	postdec0,f,c
  3819  00F36E  32EF               	rrcf	indf0,f,c
  3820  00F370                     l370:
  3821                           ; BSR set to: ?
  3822  00F370  C23B  FFE9         	movff	?___ftpack,fsr0l
  3823  00F374  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3824  00F378  52EE               	movf	postinc0,f,c
  3825  00F37A  52EE               	movf	postinc0,f,c
  3826  00F37C  0EFF               	movlw	255
  3827  00F37E  14ED               	andwf	postdec0,w,c
  3828  00F380  E00B               	bz	l373
  3829  00F382  D7E2               	goto	l371
  3830                           ; BSR set to: ?
  3831  00F384                     l374:
  3832                           ; BSR set to: ?
  3833  00F384  0102               	movlb	2	; () banked
  3834  00F386  073D               	decf	(?___ftpack+2)& (0+255),f,b
  3835  00F388  C23B  FFE9         	movff	?___ftpack,fsr0l
  3836  00F38C  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3837  00F390  90D8               	bcf	status,0,c
  3838  00F392  36EE               	rlcf	postinc0,f,c
  3839  00F394  36EE               	rlcf	postinc0,f,c
  3840  00F396  36ED               	rlcf	postdec0,f,c
  3841  00F398                     l373:
  3842                           ; BSR set to: ?
  3843  00F398  C23B  FFE9         	movff	?___ftpack,fsr0l
  3844  00F39C  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3845  00F3A0  CFEE F23E          	movff	postinc0,??___ftpack
  3846  00F3A4  CFEE F23F          	movff	postinc0,??___ftpack+1
  3847  00F3A8  CFEE F240          	movff	postinc0,??___ftpack+2
  3848  00F3AC  0102               	movlb	2	; () banked
  3849  00F3AE  AF3F               	btfss	(??___ftpack+1)& (0+255),7,b
  3850  00F3B0  D7E9               	goto	l374
  3851                           ; BSR set to: ?
  3852  00F3B2  0102               	movlb	2	; () banked
  3853  00F3B4  B13D               	btfsc	(?___ftpack+2)& (0+255),0,b
  3854  00F3B6  D00A               	goto	l376
  3855  00F3B8  C23B  FFE9         	movff	?___ftpack,fsr0l
  3856  00F3BC  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3857  00F3C0  0EFF               	movlw	255
  3858  00F3C2  16EE               	andwf	postinc0,f,c
  3859  00F3C4  0E7F               	movlw	127
  3860  00F3C6  16EE               	andwf	postinc0,f,c
  3861  00F3C8  0EFF               	movlw	255
  3862  00F3CA  16ED               	andwf	postdec0,f,c
  3863  00F3CC                     l376:
  3864                           ; BSR set to: ?
  3865  00F3CC  0102               	movlb	2	; () banked
  3866  00F3CE  90D8               	bcf	status,0,c
  3867  00F3D0  333D               	rrcf	(?___ftpack+2)& (0+255),f,b
  3868  00F3D2  513D               	movf	(?___ftpack+2)& (0+255),w,b
  3869  00F3D4  6F40               	movwf	(??___ftpack+2)& (0+255),b
  3870  00F3D6  6B3F               	clrf	(??___ftpack+1)& (0+255),b
  3871  00F3D8  6B3E               	clrf	??___ftpack& (0+255),b
  3872  00F3DA  C23B  FFE9         	movff	?___ftpack,fsr0l
  3873  00F3DE  C23C  FFEA         	movff	?___ftpack+1,fsr0h
  3874  00F3E2  513E               	movf	??___ftpack& (0+255),w,b
  3875  00F3E4  12EE               	iorwf	postinc0,f,c
  3876  00F3E6  513F               	movf	(??___ftpack+1)& (0+255),w,b
  3877  00F3E8  12EE               	iorwf	postinc0,f,c
  3878  00F3EA  5140               	movf	(??___ftpack+2)& (0+255),w,b
  3879  00F3EC  12ED               	iorwf	postdec0,f,c
  3880                           ; BSR set to: ?
  3881  00F3EE  0012               	return	
  3882  00F3F0                     __end_of___ftpack:
  3883                           	opt stack 0
  3884                           
  3885                           	psect	text26
  3886                           ; =============== function ___ftpack ends ======
      +                          ======
  3887                           ; *************** function ___ftunpack *********
      +                          ********
  3888                           ; Defined at:
  3889                           ;		line 13 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC-18\PRO\9.63\sources\float.c"
  3890                           ; Parameters:
  3891                           ;		arg            size:   2offs:   0	type: PTR u
      +                          nsigned um; Largest target is 3
  3892                           ;		 -> __fttol@f1(3), __ftmul@f2(3), __ftmul@f1(
      +                          3), __ftdiv@f2(3), 
  3893                           ;		 -> __ftdiv@f1(3), __ftadd@f2(3), __ftadd@f1(
      +                          3), 
  3894                           ;		exp            size:   2offs:   2	type: PTR u
      +                          nsigned char ; Largest target is 1
  3895                           ;		 -> __fttol@exp1(1), __ftmul@cntr(1), __ftmul
      +                          @exp1(1), __ftdiv@exp2(1), 
  3896                           ;		 -> __ftdiv@exp1(1), __ftadd@exp2(1), __ftadd
      +                          @exp1(1), 
  3897                           ; Auto variables:
  3898                           ;		sign        	       	type: unsigned char 
  3899                           ; Return value:
  3900                           ;		type: unsigned char 
  3901                           ;		size: 1
  3902                           ; Registers used:
  3903                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  3904                           ; Tracked objects:
  3905                           ;		On entry : 0/0
  3906                           ;		On exit  : 0/0
  3907                           ;		Unchanged: 0/0
  3908                           ; Data sizes:
  3909                           ;		Autos:    1
  3910                           ;		Params:   4
  3911                           ;		Temp:     3
  3912                           ;		Total:    8
  3913                           ; This function calls:
  3914                           ;		Nothing
  3915                           ; This function is called by:
  3916                           ;		___ftadd
  3917                           ;		___ftdiv
  3918                           ;		___ftmul
  3919                           ;		___fttol
  3920                           ; This function uses a non-reentrant model
  3921                           ; 
  3922  000000                     
  3923  00ED2C                     ___ftunpack:
  3924                           	opt stack 26
  3925                           ; BSR set to: ?
  3926  00ED2C  C23B  FFE9         	movff	?___ftunpack,fsr0l
  3927  00ED30  C23C  FFEA         	movff	?___ftunpack+1,fsr0h
  3928  00ED34  0E01               	movlw	1
  3929  00ED36  34EB               	rlcf	plusw0,w,c
  3930  00ED38  0E02               	movlw	2
  3931  00ED3A  34EB               	rlcf	plusw0,w,c
  3932  00ED3C  0102               	movlb	2	; () banked
  3933  00ED3E  6F3F               	movwf	??___ftunpack& (0+255),b
  3934  00ED40  C23D  FFE9         	movff	?___ftunpack+2,fsr0l
  3935  00ED44  C23E  FFEA         	movff	?___ftunpack+3,fsr0h
  3936  00ED48  C23F  FFEF         	movff	??___ftunpack,indf0
  3937  00ED4C  673F               	tstfsz	??___ftunpack& (0+255),b
  3938  00ED4E  D008               	goto	l363
  3939  00ED50  C23B  FFE9         	movff	?___ftunpack,fsr0l
  3940  00ED54  C23C  FFEA         	movff	?___ftunpack+1,fsr0h
  3941  00ED58  6AEE               	clrf	postinc0,c
  3942  00ED5A  6AEE               	clrf	postinc0,c
  3943  00ED5C  6AED               	clrf	postdec0,c
  3944  00ED5E  0C00               	retlw	0
  3945  00ED60                     l363:
  3946                           ; BSR set to: ?
  3947  00ED60  0102               	movlb	2	; () banked
  3948  00ED62  6F40               	movwf	(??___ftunpack+1)& (0+255),b
  3949  00ED64  6B3F               	clrf	??___ftunpack& (0+255),b
  3950  00ED66  5140               	movf	(??___ftunpack+1)& (0+255),w,b
  3951  00ED68  C23B  FFE9         	movff	?___ftunpack,fsr0l
  3952  00ED6C  C23C  FFEA         	movff	?___ftunpack+1,fsr0h
  3953  00ED70  0E01               	movlw	1
  3954  00ED72  8EEB               	bsf	plusw0,7,c
  3955  00ED74  C23B  FFE9         	movff	?___ftunpack,fsr0l
  3956  00ED78  C23C  FFEA         	movff	?___ftunpack+1,fsr0h
  3957  00ED7C  CFEE F240          	movff	postinc0,??___ftunpack+1
  3958  00ED80  CFEE F241          	movff	postinc0,??___ftunpack+2
  3959  00ED84  CFEE F242          	movff	postinc0,??___ftunpack+3
  3960  00ED88  AF42               	btfss	(??___ftunpack+3)& (0+255),7,b
  3961  00ED8A  D002               	goto	l364
  3962  00ED8C  0102               	movlb	2	; () banked
  3963  00ED8E  2B3F               	incf	??___ftunpack& (0+255),f,b
  3964  00ED90                     l364:
  3965                           ; BSR set to: ?
  3966  00ED90  C23B  FFE9         	movff	?___ftunpack,fsr0l
  3967  00ED94  C23C  FFEA         	movff	?___ftunpack+1,fsr0h
  3968  00ED98  0EFF               	movlw	255
  3969  00ED9A  16EE               	andwf	postinc0,f,c
  3970  00ED9C  16EE               	andwf	postinc0,f,c
  3971  00ED9E  0E00               	movlw	0
  3972  00EDA0  16ED               	andwf	postdec0,f,c
  3973  00EDA2  0102               	movlb	2	; () banked
  3974  00EDA4  513F               	movf	??___ftunpack& (0+255),w,b
  3975  00EDA6  0012               	return	
  3976                           ; BSR set to: ?
  3977  00EDA8                     __end_of___ftunpack:
  3978                           	opt stack 0
  3979                           
  3980                           	psect	mediumconst
  3981                           ; =============== function ___ftunpack ends ====
      +                          ========
  3982                           ;	FNARG	___ftmul,___awtoft
  3983                           ;	FNARG	___ftmul,___ftneg
  3984                           ;	FNARG	___ftmul,_floor
  3985                           ;	FNARG	___ftmul,___altoft
  3986                           ;	FNARG	___ftmul,___ftdiv
  3987                           ;	FNARG	___ftmul,___ftsub
  3988                           ;	FNARG	___ftmul,___asftsub
  3989                           ;	FNARG	___ftmul,___fttol
  3990                           ;	FNARG	___ftmul,___ftge
  3991                           ;	FNARG	___ftmul,_frexp
  3992                           ;	FNARG	_abs,___awdiv
  3993                           ;	FNARG	___lwmod,___lwdiv
  3994                           ;	FNARG	___ftadd,___ftmul
  3995  00FED4                     _CosTable:
  3996                           	opt stack 0
  3997  00FED4  0080               	dw	128
  3998  00FED6  0080               	dw	128
  3999  00FED8  0000               	dw	0
  4000  00FEDA  0080               	dw	128
  4001  00FEDC  005A               	dw	90
  4002  00FEDE  0000               	dw	0
  4003  00FEE0  FFA6               	dw	65446
  4004  00FEE2  0080               	dw	128
  4005  00FEE4  0076               	dw	118
  4006  00FEE6  005A               	dw	90
  4007  00FEE8  0030               	dw	48
  4008  00FEEA  0000               	dw	0
  4009  00FEEC  FFD0               	dw	65488
  4010  00FEEE  FFA6               	dw	65446
  4011  00FEF0  FF8A               	dw	65418
  4012  00FEF2  0080               	dw	128
  4013  00FEF4  007D               	dw	125
  4014  00FEF6  0076               	dw	118
  4015  00FEF8  006A               	dw	106
  4016  00FEFA  005A               	dw	90
  4017  00FEFC  0047               	dw	71
  4018  00FEFE  0030               	dw	48
  4019  00FF00  0018               	dw	24
  4020  00FF02  0000               	dw	0
  4021  00FF04  FFE8               	dw	65512
  4022  00FF06  FFD0               	dw	65488
  4023  00FF08  FFB9               	dw	65465
  4024  00FF0A  FFA6               	dw	65446
  4025  00FF0C  FF96               	dw	65430
  4026  00FF0E  FF8A               	dw	65418
  4027  00FF10  FF83               	dw	65411
  4028  00FF12  0080               	dw	128
  4029  00FF14  007F               	dw	127
  4030  00FF16  007D               	dw	125
  4031  00FF18  007A               	dw	122
  4032  00FF1A  0076               	dw	118
  4033  00FF1C  0070               	dw	112
  4034  00FF1E  006A               	dw	106
  4035  00FF20  0062               	dw	98
  4036  00FF22  005A               	dw	90
  4037  00FF24  0051               	dw	81
  4038  00FF26  0047               	dw	71
  4039  00FF28  003C               	dw	60
  4040  00FF2A  0030               	dw	48
  4041  00FF2C  0025               	dw	37
  4042  00FF2E  0018               	dw	24
  4043  00FF30  000C               	dw	12
  4044  00FF32  0000               	dw	0
  4045  00FF34  FFF4               	dw	65524
  4046  00FF36  FFE8               	dw	65512
  4047  00FF38  FFDB               	dw	65499
  4048  00FF3A  FFD0               	dw	65488
  4049  00FF3C  FFC4               	dw	65476
  4050  00FF3E  FFB9               	dw	65465
  4051  00FF40  FFAF               	dw	65455
  4052  00FF42  FFA6               	dw	65446
  4053  00FF44  FF9E               	dw	65438
  4054  00FF46  FF96               	dw	65430
  4055  00FF48  FF90               	dw	65424
  4056  00FF4A  FF8A               	dw	65418
  4057  00FF4C  FF86               	dw	65414
  4058  00FF4E  FF83               	dw	65411
  4059  00FF50  FF81               	dw	65409
  4060  00FF52  00                 	db	0
  4061  00FF53  00                 	db	0
  4062  00FF54                     _SinTable:
  4063                           	opt stack 0
  4064  00FF54  0000               	dw	0
  4065  00FF56  0000               	dw	0
  4066  00FF58  FF80               	dw	65408
  4067  00FF5A  0000               	dw	0
  4068  00FF5C  FFA6               	dw	65446
  4069  00FF5E  FF80               	dw	65408
  4070  00FF60  FFA6               	dw	65446
  4071  00FF62  0000               	dw	0
  4072  00FF64  FFD0               	dw	65488
  4073  00FF66  FFA6               	dw	65446
  4074  00FF68  FF8A               	dw	65418
  4075  00FF6A  FF80               	dw	65408
  4076  00FF6C  FF8A               	dw	65418
  4077  00FF6E  FFA6               	dw	65446
  4078  00FF70  FFD0               	dw	65488
  4079  00FF72  0000               	dw	0
  4080  00FF74  FFE8               	dw	65512
  4081  00FF76  FFD0               	dw	65488
  4082  00FF78  FFB9               	dw	65465
  4083  00FF7A  FFA6               	dw	65446
  4084  00FF7C  FF96               	dw	65430
  4085  00FF7E  FF8A               	dw	65418
  4086  00FF80  FF83               	dw	65411
  4087  00FF82  FF80               	dw	65408
  4088  00FF84  FF83               	dw	65411
  4089  00FF86  FF8A               	dw	65418
  4090  00FF88  FF96               	dw	65430
  4091  00FF8A  FFA6               	dw	65446
  4092  00FF8C  FFB9               	dw	65465
  4093  00FF8E  FFD0               	dw	65488
  4094  00FF90  FFE8               	dw	65512
  4095  00FF92  0000               	dw	0
  4096  00FF94  FFF4               	dw	65524
  4097  00FF96  FFE8               	dw	65512
  4098  00FF98  FFDB               	dw	65499
  4099  00FF9A  FFD0               	dw	65488
  4100  00FF9C  FFC4               	dw	65476
  4101  00FF9E  FFB9               	dw	65465
  4102  00FFA0  FFAF               	dw	65455
  4103  00FFA2  FFA6               	dw	65446
  4104  00FFA4  FF9E               	dw	65438
  4105  00FFA6  FF96               	dw	65430
  4106  00FFA8  FF90               	dw	65424
  4107  00FFAA  FF8A               	dw	65418
  4108  00FFAC  FF86               	dw	65414
  4109  00FFAE  FF83               	dw	65411
  4110  00FFB0  FF81               	dw	65409
  4111  00FFB2  FF80               	dw	65408
  4112  00FFB4  FF81               	dw	65409
  4113  00FFB6  FF83               	dw	65411
  4114  00FFB8  FF86               	dw	65414
  4115  00FFBA  FF8A               	dw	65418
  4116  00FFBC  FF90               	dw	65424
  4117  00FFBE  FF96               	dw	65430
  4118  00FFC0  FF9E               	dw	65438
  4119  00FFC2  FFA6               	dw	65446
  4120  00FFC4  FFAF               	dw	65455
  4121  00FFC6  FFB9               	dw	65465
  4122  00FFC8  FFC4               	dw	65476
  4123  00FFCA  FFD0               	dw	65488
  4124  00FFCC  FFDB               	dw	65499
  4125  00FFCE  FFE8               	dw	65512
  4126  00FFD0  FFF4               	dw	65524
  4127  00FFD2  00                 	db	0
  4128  00FFD3  00                 	db	0
  4129  00FFD4                     F62:
  4130                           	opt stack 0
  4131  00FFD4  F4                 	db	244
  4132  00FFD5  4A                 	db	74
  4133  00FFD6  48                 	db	72
  4134  00FFD7  95                 	db	149
  4135  00FFD8  95                 	db	149
  4136  00FFD9  C7                 	db	199
  4137  00FFDA  C1                 	db	193
  4138  00FFDB  DC                 	db	220
  4139  00FFDC  45                 	db	69
  4140  00FFDD  DC                 	db	220
  4141  00FFDE  6D                 	db	109
  4142  00FFDF  C3                 	db	195
  4143  00FFE0  B3                 	db	179
  4144  00FFE1  33                 	db	51
  4145  00FFE2  40                 	db	64
  4146  00FFE3                     F63:
  4147                           	opt stack 0
  4148  00FFE3  34                 	db	52
  4149  00FFE4  01                 	db	1
  4150  00FFE5  48                 	db	72
  4151  00FFE6  9D                 	db	157
  4152  00FFE7  B0                 	db	176
  4153  00FFE8  45                 	db	69
  4154  00FFE9  00                 	db	0
  4155  00FFEA  DA                 	db	218
  4156  00FFEB  42                 	db	66
  4157  00FFEC  00                 	db	0
  4158  00FFED  80                 	db	128
  4159  00FFEE  3F                 	db	63
  4160  00FFEF                     _dpowers:
  4161                           	opt stack 0
  4162  00FFEF  0001               	dw	1
  4163  00FFF1  000A               	dw	10
  4164  00FFF3  0064               	dw	100
  4165  00FFF5  03E8               	dw	1000
  4166  00FFF7  2710               	dw	10000
  4167  000000                     	;_Amp
  4168  000000                     	;_Imag
  4169  000000                     	;_Real
  4170  000000                     	;_TwiddleImag
  4171  000000                     	;_TwiddleReal
  4172  000000                     	;_k1
  4173  000000                     	;_k2
  4174  000000                     	;_k3
  4175  000000                     	;_Index
  4176  000000                     	;_TempImag
  4177  000000                     	;_TempReal
  4178  000000                     	;_errno
  4179  000000                     	;_i
  4180  000000                     	;_j
  4181  000000                     	;_k
  4182  000000                     	;_n1
  4183  000000                     	;_n2
  4184  000000                     
  4185  000000                     
  4186  000000                     
  4187  000000                     
  4188  000000                     
  4189  000000                     
  4190  000000                     
  4191  000000                     
  4192  000000                     
  4193  000000                     
  4194  000000                     
  4195  00FFF9                     STR_1:
  4196                           ; BSR set to: ?
  4197  00FFF9  25                 	db	37
  4198  00FFFA  64                 	db	100	;'d'
  4199  00FFFB  0A                 	db	10
  4200  00FFFC  0D                 	db	13
  4201  00FFFD  00                 	db	0
  4202  00FFFE  00                 	db	0	; dummy byte at the end
  4203                           
  4204                           	psect	param2
  4205  000000                     
  4206  000000                     
  4207  000000                     
  4208  000000                     
  4209  000000                     
  4210  000000                     
  4211  000000                     
  4212  000000                     
  4213                           tblptrh	equ	0xFF7
  4214                           tblptrl	equ	0xFF6
  4215                           tablat	equ	0xFF5
  4216                           prodl	equ	0xFF3
  4217                           indf0	equ	0xFEF
  4218                           postinc0	equ	0xFEE
  4219                           postdec0	equ	0xFED
  4220                           preinc0	equ	0xFEC
  4221                           plusw0	equ	0xFEB
  4222                           fsr0h	equ	0xFEA
  4223                           fsr0l	equ	0xFE9
  4224                           wreg	equ	0xFE8
  4225                           postinc1	equ	0xFE6
  4226                           postdec1	equ	0xFE5
  4227                           fsr1h	equ	0xFE2
  4228                           fsr1l	equ	0xFE1
  4229                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.63PL1
Symbol Table                                           Sun Sep 27 22:32:17 2009

       ___altoft@exp 022C                    _i 000002  
                  _j 00000C                    _k 00000E  
                 F62 FFD4                   F63 FFE3  
      ___altoft@sign 022B                   _k1 0000A2  
                 _k2 000096                   _k3 00009A  
                 _n1 000008                   _n2 00000A  
       ___awdiv@sign 021C  ___wmul@multiplicand 0230  
       ___asftmul@f2 0221         ___asftsub@f2 0221  
       ___ftadd@exp1 0238         ___ftadd@exp2 0237  
       ___ftadd@cntr 0235                  l123 E9D6  
                l132 FB8A                  l134 FA78  
                l151 F75E                  l400 F5A6  
                l144 FBBE                  l401 F5CA  
                l137 FB84                  l410 F5F2  
                l402 F5BE                  l250 EEF8  
                l170 F43E                  l411 F616  
                l251 EF1E                  l171 F41C  
                l412 F60A                  l404 F61E  
                l252 EF28                  l420 EFCC  
                l260 EDEE                  l148 FC40  
                l172 F418                  l156 F836  
                l421 EFF8                  l414 F632  
                l182 F4BA                  l166 F516  
                l415 F646                  l255 EF8C  
                l503 EB3A                  l183 F4BE  
                l175 F41A                  l167 F3FC  
                l432 F192                  l504 EB52  
                l424 F00C                  l417 F692  
                l433 F1A6                  l513 EBAA  
                l425 F032                  l265 EE00  
                l257 EDC6                  l193 F87A  
                l177 F46A                  l169 F40E  
                l370 F370                  l602 EC54  
                l450 EEB6                  l522 EB0E  
                l514 EBC6                  l426 F058  
                l266 EE1C                  l258 EDDA  
                l194 F924                  l363 ED60  
                l371 F348                  l451 EEA8  
                l443 EE96                  l531 EA46  
                l523 EB22                  l507 EBD2  
                l267 EE36                  l195 F968  
                l179 F4A6                  l364 ED90  
                l436 F1C4                  l532 EA56  
                l516 EB2E                  l508 EB98  
                l196 FA4E                  l373 F398  
                l437 F1D8                  l429 F182  
                l453 EED2                  l517 EAFC  
                l285 ECC4                  l374 F384  
                l534 E9EE                  l438 F206  
                l286 ECE6                  l367 F334  
                l447 EE84                  l287 ED1E  
                l376 F3CC                  l368 F31C  
                l448 EEBC                  l393 F55C  
                l394 F676                  l538 EBFE  
                l395 F5D4                  l591 F0A2  
                l595 F262                  l596 F258  
                l597 F270                  l598 F2E8  
                _RD0 007C18                  _Amp 000016  
                _abs E9F0                  _sin F838  
                wreg 000FE8        ___asftmul@f1p 021F  
        config_word1 0000          config_word2 0002  
        config_word3 0004          config_word4 0006  
        config_word5 0008          config_word6 000A  
      ___asftsub@f1p 021F         ___ftdiv@exp1 0227  
       ___ftdiv@exp2 0225        ___ftadd@sign1 0236  
      ___ftadd@sign2 0234                 ?_abs 020B  
               ?_sin 020B                 STR_1 FFF9  
               u3310 FEC8                 u3320 FECE  
               u3305 FDBA                 u3250 FAB6  
               u3295 FCFA                 u3560 F91E  
               u3545 F852                 u3670 F126  
               u3566 F920                 _RCIF 007CF5  
               u3765 F248                 u3960 EF4C  
               _TXIF 007CF4                 _Imag 000100  
               _Real 000F00                 abs@a 020B  
               _main F694         ___ftpack@arg 023B  
       ___ftpack@exp 023D                 fsr0h 000FEA  
               indf0 000FEF                 fsr0l 000FE9  
               fsr1l 000FE1                 sin@f 020B  
               sin@y 0218                 prodl 000FF3  
               start 0000         ___ftmul@exp1 0235  
       ___ftmul@cntr 0236         ___fttol@exp1 022C  
              ??_abs 020D         ___fttol@lval 022D  
              ??_sin 020E        ___ftdiv@sign1 0226  
      ___ftdiv@sign2 0228                ?_main 0200  
    __end_of___awdiv EE40      __end_of___ftadd F694  
    __end_of___ftdiv F066      __end_of___ftneg E9F0  
    __end_of___ftmul F214      ___awdiv@divisor 021A  
    __end_of___ftsub EA40      __end_of___fttol EEE4  
    __end_of___lwdiv EBDC      __end_of___lwmod EB30  
    ___awdiv@counter 021D                _RCREG 000FAE  
              _RCSTA 000FAB                _SPBRG 000FAF  
              _TXREG 000FAD                _TXSTA 000FAC  
___lmul@multiplicand 021C                _Index 000010  
              _floor F214                _frexp EC3C  
              _errno 000000                _putch E9D6  
              main@i 0200                sin@x2 021B  
              tablat 000FF5                plusw0 000FEB  
              status 000FD8        ___ftmul@sign1 0234  
       __end_of_main F838               ??_main 0200  
      ___fttol@sign1 022B        __activetblptr 000002  
             ?_floor 021F               ?_frexp 0227  
   __end_of___altoft EF9A     ___awdiv@dividend 0218  
   __end_of___awtoft ED2C               ?_putch 021B  
   __end_of___ftpack F3F0               _TRISD0 007CA8  
             _TRISC6 007CA6               _TRISC7 007CA7  
             __Ldata 000000               ___ftge EBDC  
             ___lmul EB30               ___wmul EA40  
          ??___awdiv 021C            ??___ftadd 0234  
          ??___ftdiv 0225            ??___ftneg 0237  
          ??___ftmul 0234            ??___ftsub 022A  
          ??___fttol 022B            ??___lwdiv 021F  
          ??___lwmod 021F     ___awdiv@quotient 021E  
             _printf F3F0               floor@i 0224  
             floor@x 021F               sin@sgn 0217  
       __mediumconst FED4               preinc0 000FEC  
             tblptrh 000FF7               tblptrl 000FF6  
         __accesstop 0080           ___altoft@c 0227  
         ___ftadd@f1 022E           ___ftadd@f2 0231  
         ___ftge@ff1 0227           ___ftge@ff2 022A  
       eval_poly@res 0226           ___ftdiv@f1 021F  
         ___ftdiv@f2 0222           ___ftdiv@f3 0229  
         ___ftneg@f1 0234           ___awtoft@c 020B  
         ___ftmul@f1 022E           ___ftmul@f2 0231  
         ___ftmul@f3 0237           ___ftsub@f1 0224  
         ___ftsub@f2 0227           ___fttol@f1 0227  
         ___ftunpack ED2C        __end_of_floor F2F6  
      __end_of_frexp ECB4        __end_of_putch E9E0  
  __end_of_Radix2Fft FED4              ??_floor 0222  
            ??_frexp 022C              ??_putch 021C  
            ?___ftge 0227              ?___lmul 0218  
            ?___wmul 022E       ___ftunpack@arg 023B  
     ___ftunpack@exp 023D            ?___altoft 0227  
          l600000395 F174       ___lmul@product 0220  
  __end_of___asftmul EAB0    __end_of___asftsub EAEC  
          ?___awtoft 020B            ?___ftpack 023B  
            ?_printf 020B              __Hparam 0243  
            __Lparam 0200          ?___ftunpack 023B  
            ___awdiv EDA8              ___ftadd F530  
            ___ftdiv EF9A              ___ftneg E9E0  
            ___ftmul F134              ___ftsub EA10  
            ___fttol EE40              ___lwdiv EB84  
            ___lwmod EAEC           ??___altoft 022B  
         ??___awtoft 020E           ??___ftpack 023E  
  __end_of_eval_poly F134              __ramtop 1000  
            _sin$832 020E              _sin$841 0214  
            _sin$842 0211              _dpowers FFEF  
      __Lmediumconst FED4              printf@c 0211  
            printf@f 020B              postdec0 000FED  
            postdec1 000FE5              postinc0 000FEE  
            postinc1 000FE6          ___altoft@f1 022D  
        _TwiddleImag 000012          _TwiddleReal 00009E  
        ___awtoft@f1 020E       __end_of___ftge EC3C  
     __end_of___lmul EB84       __end_of___wmul EA74  
         floor@expon 0222       __end_of_printf F530  
         eval_poly@d 0222           eval_poly@n 0224  
         eval_poly@x 021F            _Radix2Fft FA50  
        __end_of_abs EA10          __end_of_sin FA50  
          __Habsbss0 0000A6            __Habsbss1 000180  
          __Habsbss2 000F80            __Labsbss0 000000  
          __Labsbss1 000100            __Labsbss2 000F00  
         frexp@value 0227             ??___ftge 022D  
           ??___lmul 0220             ??___wmul 0232  
           ??_printf 020F            ___asftmul EA74  
          ___asftsub EAB0           ?_Radix2Fft 020B  
   ___lwdiv@dividend 021B         ??___ftunpack 023F  
           ?___awdiv 0218             ?___ftadd 022E  
           ?___ftdiv 021F             ?___ftneg 0234  
           ?___ftmul 022E             ?___ftsub 0224  
           ?___fttol 0227             ?___lwdiv 021B  
           ?___lwmod 021B      ___ftunpack@sign 023F  
        __smallconst 1000           ?___asftmul 021F  
         ?___asftsub 021F            _eval_poly F066  
   ___lwdiv@quotient 0220   __end_of___ftunpack EDA8  
     ___wmul@product 0232    ___wmul@multiplier 022E  
         printf@_val 0214           printf@flag 0210  
         printf@prec 020F           ?_eval_poly 021F  
        ??_Radix2Fft 020B             _CosTable FED4  
  ___lmul@multiplier 0218            frexp@eptr 022A  
           __Hparam2 0243             _SinTable FF54  
           __Lparam2 0200             _TempImag 000004  
           _TempReal 000006         __Lsmallconst 1000  
           ___altoft EEE4             ___awtoft ECB4  
           ___ftpack F2F6          ??___asftmul 0224  
        ??___asftsub 0224      ___lwdiv@divisor 021D  
    ___lwdiv@counter 021F             main@i_71 0202  
          putch@byte 021B          ??_eval_poly 0226  
   ___lwmod@dividend 021B             printf@ap 0212  
    ___lwmod@divisor 021D      ___lwmod@counter 021F  
